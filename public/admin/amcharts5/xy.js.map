{"version":3,"file":"xy.js","mappings":"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","sources":["webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYChart.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYChartDefaultTheme.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYCursor.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/Axis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisLabel.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisLabelRadial.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisRenderer.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisRendererX.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisRendererY.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisTick.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/DateAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/GaplessDateAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/Grid.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/ValueAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/BaseColumnSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/Candlestick.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/CandlestickSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/ColumnSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/LineSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/XYSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYChartScrollbar.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/CategoryAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/CategoryDateAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/DurationAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisBullet.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/OHLC.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/OHLCSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/SmoothedYLineSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/SmoothedXLineSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/SmoothedXYLineSeries.ts","webpack://@amcharts/amcharts5/./node_modules/d3-shape/src/curve/step.js","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/StepLineSeries.ts","webpack://@amcharts/amcharts5/./tmp/webpack/xy.js","webpack://@amcharts/amcharts5/./node_modules/d3-shape/src/curve/cardinal.js"],"sourcesContent":["import type { Axis } from \"./axes/Axis\";\nimport type { XYCursor } from \"./XYCursor\";\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\nimport type { DataItem } from \"../../core/render/Component\";\nimport type { IDisposer } from \"../../core/util/Disposer\";\nimport type { XYSeries, IXYSeriesDataItem } from \"./series/XYSeries\";\nimport type { IPointerEvent } from \"../../core/render/backend/Renderer\";\nimport type { Scrollbar } from \"../../core/render/Scrollbar\";\nimport type { Tooltip } from \"../../core/render/Tooltip\";\nimport type { IPoint } from \"../../core/util/IPoint\";\n\nimport { XYChartDefaultTheme } from \"./XYChartDefaultTheme\";\nimport { Container } from \"../../core/render/Container\";\nimport { Rectangle } from \"../../core/render/Rectangle\";\nimport { SerialChart, ISerialChartPrivate, ISerialChartSettings, ISerialChartEvents } from \"../../core/render/SerialChart\";\nimport { ListAutoDispose } from \"../../core/util/List\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { Color } from \"../../core/util/Color\";\nimport { Button } from \"../../core/render/Button\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport { Percent } from \"../../core/util/Percent\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $order from \"../../core/util/Order\";\nimport * as $object from \"../../core/util/Object\";\nimport type { Animation } from \"../../core/util/Entity\";\n\nexport interface IXYChartSettings extends ISerialChartSettings {\n\n\t/**\n\t * horizontal scrollbar.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/} for more info\n\t */\n\tscrollbarX?: Scrollbar;\n\n\t/**\n\t * Vertical scrollbar.\n\t *\n\t */\n\tscrollbarY?: Scrollbar;\n\n\t/**\n\t * If this is set to `true`, users will be able to pan the chart horizontally\n\t * by dragging plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Panning} for more info\n\t */\n\tpanX?: boolean;\n\n\t/**\n\t * If this is set to `true`, users will be able to pan the chart vertically\n\t * by dragging plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Panning} for more info\n\t */\n\tpanY?: boolean;\n\n\t/**\n\t * Indicates what happens when mouse wheel is spinned horizontally while over\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t */\n\twheelX?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\";\n\n\t/**\n\t * Indicates what happens when mouse wheel is spinned vertically while over\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t */\n\twheelY?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\";\n\n\t/**\n\t * Indicates the relative \"speed\" of the mouse wheel.\n\t *\n\t * @default 0.25\n\t */\n\twheelStep?: number;\n\n\t/**\n\t * Chart's cursor.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/} for more info\n\t */\n\tcursor?: XYCursor;\n\n\t/**\n\t * Indicates maximum distance from pointer (moust or touch) to points\n\t * tooltips need to be shown for.\n\t *\n\t * Points that are further from pointer than this setting will not be shown.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#Tooltips} for more info\n\t */\n\tmaxTooltipDistance?: number;\n\n\t/**\n\t * If set to `false` the chart will not check for overlapping of multiple\n\t * tooltips, and will not arrange them to not overlap.\n\t *\n\t * Will work only if chart has an `XYCursor` enabled.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#Tooltips} for more info\n\t * @default true\n\t */\n\tarrangeTooltips?: boolean\n\n\t/**\n\t * If set to `true`, using pinch gesture on the chart's plot area will zoom\n\t * chart horizontally.\n\t *\n\t * NOTE: this setting is not supported in a [[RadarChart]].\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pinch_zoom} for more info\n\t * @since 5.1.8\n\t * @default false\n\t */\n\tpinchZoomX?: boolean;\n\n\t/**\n\t * If set to `true`, using pinch gesture on the chart's plot area will zoom\n\t * chart vertically.\n\t * \n\t * NOTE: this setting is not supported in a [[RadarChart]].\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pinch_zoom} for more info\n\t * @since 5.1.8\n\t * @default false\n\t */\n\tpinchZoomY?: boolean;\n\n}\n\nexport interface IXYChartPrivate extends ISerialChartPrivate {\n\n\t/**\n\t * A list of [[Series]] that currently have their tooltip being displayed.\n\t */\n\ttooltipSeries?: Array<XYSeries>\n\n\t/**\n\t * @ignore\n\t */\n\totherCharts?: Array<XYChart>\n}\n\n\nexport interface IXYChartEvents extends ISerialChartEvents {\n\n\t/**\n\t * Invoked when panning starts.\n\t *\n\t * @since 5.0.4\n\t */\n\tpanstarted: {};\n\n\t/**\n\t * Invoked when panning ends.\n\t *\n\t * @since 5.0.4\n\t */\n\tpanended: {};\n\n\t/**\n\t * Invoked when wheel caused zoom ends.\n\t *\n\t * @since 5.0.4\n\t */\n\twheelended: {};\n\n}\n\n/**\n * Creates an XY chart.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/} for more info\n * @important\n */\nexport class XYChart extends SerialChart {\n\n\tpublic static className: string = \"XYChart\";\n\tpublic static classNames: Array<string> = SerialChart.classNames.concat([XYChart.className]);\n\n\tdeclare public _settings: IXYChartSettings;\n\tdeclare public _privateSettings: IXYChartPrivate;\n\tdeclare public _seriesType: XYSeries;\n\tdeclare public _events: IXYChartEvents;\n\n\t/**\n\t * A list of horizontal axes.\n\t */\n\tpublic readonly xAxes: ListAutoDispose<Axis<AxisRenderer>> = new ListAutoDispose();\n\n\t/**\n\t * A list of vertical axes.\n\t */\n\tpublic readonly yAxes: ListAutoDispose<Axis<AxisRenderer>> = new ListAutoDispose();\n\n\t/**\n\t * A [[Container]] located on top of the chart, used to store top horizontal\n\t * axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topAxesContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, layout: this._root.verticalLayout }));\n\n\t/**\n\t * A [[Container]] located in the middle the chart, used to store vertical axes\n\t * and plot area container.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly yAxesAndPlotContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] located on bottom of the chart, used to store bottom\n\t * horizontal axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly bottomAxesContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, layout: this._root.verticalLayout }));\n\n\t/**\n\t * A [[Container]] located on left of the chart, used to store left-hand\n\t * vertical axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly leftAxesContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] located in the middle of the chart, used to store plotContainer and topPlotContainer\t \n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly plotsContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { width: p100, height: p100, maskContent: false }));\n\n\t/**\n\t * A [[Container]] located in the middle of the chart, used to store actual\n\t * plots (series).\n\t * \n\t * NOTE: `plotContainer` will automatically have its `background` preset. If\n\t * you need to modify background or outline for chart's plot area, you can\n\t * use `plotContainer.get(\"background\")` for that.* \n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly plotContainer: Container = this.plotsContainer.children.push(Container.new(this._root, { width: p100, height: p100 }));\n\n\t/**\n\t * A [[Container]] used for any elements that need to be displayed over\n\t * regular `plotContainer`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topPlotContainer: Container = this.plotsContainer.children.push(Container.new(this._root, { width: p100, height: p100 }));\n\n\t/**\n\t * A [[Container]] axis grid elements are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly gridContainer: Container = this.plotContainer.children.push(Container.new(this._root, { width: p100, height: p100, isMeasured: false }));\n\n\t/**\n\t * A [[Container]] axis background grid elements are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topGridContainer: Container = Container.new(this._root, { width: p100, height: p100, isMeasured: false });\n\n\t/**\n\t * A [[Container]] located on right of the chart, used to store right-hand\n\t * vertical axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly rightAxesContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] axis headers are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly axisHeadersContainer: Container = this.plotContainer.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A button that is shown when chart is not fully zoomed out.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Zoom_out_button} for more info\n\t * @default Button.new()\n\t */\n\tpublic readonly zoomOutButton: Button = this.topPlotContainer.children.push(Button.new(this._root, {\n\t\tthemeTags: [\"zoom\"],\n\t\ticon: Graphics.new(this._root, {\n\t\t\tthemeTags: [\"button\", \"icon\"]\n\t\t})\n\t}));\n\n\tpublic _movePoint: IPoint = { x: 0, y: 0 };\n\n\tprotected _wheelDp: IDisposer | undefined;\n\n\tpublic _otherCharts?: Array<XYChart>;\n\n\tprotected _movePoints: { [index: number]: IPoint } = {};\n\n\tprotected _downStartX?: number;\n\tprotected _downEndX?: number;\n\n\tprotected _downStartY?: number;\n\tprotected _downEndY?: number;\n\n\tprotected _afterNew() {\n\t\tthis._defaultThemes.push(XYChartDefaultTheme.new(this._root));\n\n\t\tsuper._afterNew();\n\n\t\tthis._disposers.push(this.xAxes);\n\t\tthis._disposers.push(this.yAxes);\n\n\t\tconst root = this._root;\n\n\t\tlet verticalLayout = this._root.verticalLayout;\n\n\t\tconst zoomOutButton = this.zoomOutButton;\n\t\tzoomOutButton.events.on(\"click\", () => {\n\t\t\tthis.zoomOut();\n\t\t})\n\t\tzoomOutButton.set(\"opacity\", 0);\n\t\tzoomOutButton.states.lookup(\"default\")!.set(\"opacity\", 1);\n\n\t\tthis.chartContainer.set(\"layout\", verticalLayout);\n\n\t\tconst plotContainer = this.plotContainer;\n\t\tplotContainer.children.push(this.seriesContainer);\n\n\t\tthis._disposers.push(this._processAxis(this.xAxes, this.bottomAxesContainer));\n\t\tthis._disposers.push(this._processAxis(this.yAxes, this.leftAxesContainer));\n\n\n\t\tplotContainer.children.push(this.topGridContainer);\n\t\tplotContainer.children.push(this.bulletsContainer);\n\n\t\t// Setting trasnparent background so that full body of the plot container\n\t\t// is interactive\n\t\tplotContainer.set(\"interactive\", true);\n\t\tplotContainer.set(\"interactiveChildren\", false);\n\t\tplotContainer.set(\"background\", Rectangle.new(root, {\n\t\t\tthemeTags: [\"xy\", \"background\"],\n\t\t\tfill: Color.fromHex(0x000000),\n\t\t\tfillOpacity: 0\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"pointerdown\", (event) => {\n\t\t\tthis._handlePlotDown(event.originalEvent);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointerup\", (event) => {\n\t\t\tthis._handlePlotUp(event.originalEvent);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointermove\", (event) => {\n\t\t\tthis._handlePlotMove(event.originalEvent);\n\t\t}));\n\n\t\tthis._maskGrid();\n\t}\n\n\tprotected _maskGrid(){\n\t\tthis.gridContainer.set(\"maskContent\", true);\n\t\tthis.topGridContainer.set(\"maskContent\", true);\n\t}\n\n\tprotected _removeSeries(series: this[\"_seriesType\"]) {\n\t\tconst xAxis = series.get(\"xAxis\");\n\t\tif (xAxis) {\n\t\t\t$array.remove(xAxis.series, series);\n\t\t}\n\t\tconst yAxis = series.get(\"yAxis\");\n\t\tif (yAxis) {\n\t\t\t$array.remove(yAxis.series, series);\n\t\t}\n\n\t\tconst cursor = this.get(\"cursor\");\n\t\tif(cursor){\n\t\t\tconst snapToSeries = cursor.get(\"snapToSeries\");\n\t\t\tif(snapToSeries){\n\t\t\t\t$array.remove(snapToSeries, series);\n\t\t\t}\n\t\t}\n\n\t\tsuper._removeSeries(series);\n\t}\n\n\tprotected _handleSetWheel() {\n\t\tconst wheelX = this.get(\"wheelX\");\n\t\tconst wheelY = this.get(\"wheelY\");\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tif (wheelX !== \"none\" || wheelY !== \"none\") {\n\t\t\tthis._wheelDp = plotContainer.events.on(\"wheel\", (event) => {\n\t\t\t\tconst wheelEvent = event.originalEvent;\n\n\t\t\t\twheelEvent.preventDefault();\n\n\t\t\t\tconst plotPoint = plotContainer.toLocal(this._root.documentPointToRoot({ x: wheelEvent.clientX, y: wheelEvent.clientY }))\n\t\t\t\tconst wheelStep = this.get(\"wheelStep\", 0.2);\n\n\t\t\t\tconst shiftY = wheelEvent.deltaY / 100;\n\t\t\t\tconst shiftX = wheelEvent.deltaX / 100;\n\n\t\t\t\tif ((wheelX === \"zoomX\" || wheelX === \"zoomXY\") && shiftX != 0) {\n\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"zoomX\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\t\t\tlet position = axis.fixPosition(plotPoint.x / plotContainer.width());\n\n\t\t\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftX * position;\n\t\t\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftX * (1 - position);\n\t\t\t\t\t\t\tif (1 / (newEnd - newStart) < axis.get(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tif ((wheelY === \"zoomX\" || wheelY === \"zoomXY\") && shiftY != 0) {\n\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"zoomX\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\t\t\tlet position = axis.fixPosition(plotPoint.x / plotContainer.width());\n\n\t\t\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftY * position;\n\t\t\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftY * (1 - position);\n\n\t\t\t\t\t\t\tif (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\n\t\t\t\tif ((wheelX === \"zoomY\" || wheelX === \"zoomXY\") && shiftX != 0) {\n\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"zoomY\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\t\t\tlet position = axis.fixPosition(plotPoint.y / plotContainer.height());\n\n\t\t\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftX * position;\n\t\t\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftX * (1 - position);\n\n\t\t\t\t\t\t\tif (1 / (newEnd - newStart) < axis.get(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tif ((wheelY === \"zoomY\" || wheelY === \"zoomXY\") && shiftY != 0) {\n\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"zoomY\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\t\t\tlet position = axis.fixPosition(plotPoint.y / plotContainer.height());\n\n\t\t\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftY * position;\n\t\t\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftY * (1 - position);\n\n\t\t\t\t\t\t\tif (1 / (newEnd - newStart) < axis.get(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\n\t\t\t\tif ((wheelX === \"panX\" || wheelX === \"panXY\") && shiftX != 0) {\n\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftX;\n\t\t\t\t\t\t\tlet newStart = start + delta;\n\t\t\t\t\t\t\tlet newEnd = end + delta;\n\n\t\t\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tif ((wheelY === \"panX\" || wheelY === \"panXY\") && shiftY != 0) {\n\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftY;\n\t\t\t\t\t\t\tlet newStart = start + delta;\n\t\t\t\t\t\t\tlet newEnd = end + delta;\n\n\t\t\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tif ((wheelX === \"panY\" || wheelX === \"panXY\") && shiftX != 0) {\n\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftX;\n\t\t\t\t\t\t\tlet newStart = start + delta;\n\t\t\t\t\t\t\tlet newEnd = end + delta;\n\n\t\t\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tif ((wheelY === \"panY\" || wheelY === \"panXY\") && shiftY != 0) {\n\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftY;\n\t\t\t\t\t\t\tlet newStart = start - delta;\n\t\t\t\t\t\t\tlet newEnd = end - delta;\n\n\t\t\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis._disposers.push(this._wheelDp);\n\t\t}\n\t\telse {\n\t\t\tif (this._wheelDp) {\n\t\t\t\tthis._wheelDp.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getWheelSign(axis: Axis<AxisRenderer>) {\n\t\tlet sign = 1;\n\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\tsign = -1;\n\t\t}\n\n\t\treturn sign\n\t}\n\n\tprotected _fixWheel(start: number, end: number): [number, number] {\n\t\tconst diff = end - start;\n\t\tif (start < 0) {\n\t\t\tstart = 0;\n\t\t\tend = start + diff;\n\t\t}\n\t\tif (end > 1) {\n\t\t\tend = 1;\n\t\t\tstart = end - diff;\n\t\t}\n\n\t\treturn [start, end];\n\t}\n\n\tprotected _handlePlotDown(event: IPointerEvent) {\n\t\tconst plotContainer = this.plotContainer;\n\t\tlet local = plotContainer.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\n\n\t\tif (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\")) {\n\n\t\t\tconst touchEvent = event as any;\n\t\t\tconst pointerId = touchEvent.pointerId;\n\n\t\t\tif (pointerId) {\n\n\t\t\t\tif ($object.keys(plotContainer._downPoints).length > 0) {\n\t\t\t\t\tconst xAxis = this.xAxes.getIndex(0);\n\t\t\t\t\tconst yAxis = this.yAxes.getIndex(0);\n\n\n\t\t\t\t\tif (xAxis) {\n\t\t\t\t\t\tthis._downStartX = xAxis.get(\"start\", 0);\n\t\t\t\t\t\tthis._downEndX = xAxis.get(\"end\", 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (yAxis) {\n\t\t\t\t\t\tthis._downStartY = yAxis.get(\"start\", 0);\n\t\t\t\t\t\tthis._downEndY = yAxis.get(\"end\", 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.get(\"panX\") || this.get(\"panY\")) {\n\n\t\t\tif (local.x >= 0 && local.y >= 0 && local.x <= plotContainer.width() && local.y <= this.height()) {\n\t\t\t\tthis._downPoint = local;\n\n\t\t\t\tconst panX = this.get(\"panX\");\n\t\t\t\tconst panY = this.get(\"panY\");\n\n\t\t\t\tif (panX) {\n\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\taxis._panStart = axis.get(\"start\")!;\n\t\t\t\t\t\taxis._panEnd = axis.get(\"end\")!;\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tif (panY) {\n\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\taxis._panStart = axis.get(\"start\")!;\n\t\t\t\t\t\taxis._panEnd = axis.get(\"end\")!;\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tconst eventType = \"panstarted\";\n\t\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleWheelAnimation(animation?: Animation<any>) {\n\t\tif (animation) {\n\t\t\tanimation.events.on(\"stopped\", () => {\n\t\t\t\tthis._dispatchWheelAnimation();\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tthis._dispatchWheelAnimation();\n\t\t}\n\t}\n\n\tprotected _dispatchWheelAnimation() {\n\t\tconst eventType = \"wheelended\";\n\t\tif (this.events.isEnabled(eventType)) {\n\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this });\n\t\t}\n\t}\n\n\tprotected _handlePlotUp(_event: IPointerEvent) {\n\n\t\tif (this._downPoint) {\n\t\t\tif (this.get(\"panX\") || this.get(\"panY\")) {\n\t\t\t\tconst eventType = \"panended\";\n\t\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// TODO: handle multitouch\n\t\tthis._downPoint = undefined;\n\t\tthis.xAxes.each((xAxis) => {\n\t\t\txAxis._isPanning = false;\n\t\t})\n\t\tthis.yAxes.each((yAxis) => {\n\t\t\tyAxis._isPanning = false;\n\t\t})\n\t}\n\n\tprotected _handlePlotMove(event: IPointerEvent) {\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tif (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\")) {\n\t\t\tconst touchEvent = event as any;\n\t\t\tconst pointerId = touchEvent.pointerId;\n\n\t\t\tif (pointerId) {\n\t\t\t\tthis._movePoints[pointerId] = this._root.documentPointToRoot({ x: event.clientX, y: event.clientY });\n\n\t\t\t\tif ($object.keys(plotContainer._downPoints).length > 1) {\n\t\t\t\t\tthis._handlePinch();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst downPoint = this._downPoint!;\n\n\t\tif (downPoint) {\n\n\t\t\tlet local = plotContainer.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\n\n\t\t\tconst panX = this.get(\"panX\");\n\t\t\tconst panY = this.get(\"panY\");\n\n\t\t\tif (panX) {\n\n\t\t\t\tlet scrollbarX = this.get(\"scrollbarX\");\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tscrollbarX.events.disableType(\"rangechanged\");\n\t\t\t\t}\n\n\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\t\taxis._isPanning = true;\n\t\t\t\t\t\t//const maxDeviation = axis.get(\"maxDeviation\", 0);\n\t\t\t\t\t\tlet panStart = axis._panStart;\n\t\t\t\t\t\tlet panEnd = axis._panEnd;\n\t\t\t\t\t\tlet difference = (panEnd - panStart);\n\t\t\t\t\t\tlet deltaX = difference * (downPoint.x - local.x) / plotContainer.width();\n\n\t\t\t\t\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\t\t\t\t\tdeltaX *= -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet start = panStart + deltaX;\n\t\t\t\t\t\tlet end = panEnd + deltaX;\n\n\t\t\t\t\t\tif (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\n\t\t\t\t\t\t\taxis.set(\"start\", start);\n\t\t\t\t\t\t\taxis.set(\"end\", end);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tscrollbarX.events.enableType(\"rangechanged\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (panY) {\n\n\t\t\t\tlet scrollbarY = this.get(\"scrollbarY\");\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tscrollbarY.events.disableType(\"rangechanged\");\n\t\t\t\t}\n\n\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\t\taxis._isPanning = true;\n\t\t\t\t\t\t//const maxDeviation = axis.get(\"maxDeviation\", 0);\n\n\t\t\t\t\t\tlet panStart = axis._panStart;\n\t\t\t\t\t\tlet panEnd = axis._panEnd;\n\t\t\t\t\t\tlet difference = (panEnd - panStart);\n\t\t\t\t\t\tlet deltaY = difference * (downPoint.y - local.y) / plotContainer.height();\n\t\t\t\t\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\t\t\t\t\tdeltaY *= -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet start = panStart - deltaY;\n\t\t\t\t\t\tlet end = panEnd - deltaY;\n\n\t\t\t\t\t\tif (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\n\t\t\t\t\t\t\taxis.set(\"start\", start);\n\t\t\t\t\t\t\taxis.set(\"end\", end);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tscrollbarY.events.enableType(\"rangechanged\");\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t}\n\t}\n\n\tprotected _handlePinch() {\n\t\tconst plotContainer = this.plotContainer;\n\t\tlet i = 0;\n\t\tlet downPoints: Array<IPoint> = [];\n\t\tlet movePoints: Array<IPoint> = [];\n\n\t\t$object.each(plotContainer._downPoints, (k, point) => {\n\t\t\tdownPoints[i] = point;\n\t\t\tlet movePoint = this._movePoints[k];\n\t\t\tif (movePoint) {\n\t\t\t\tmovePoints[i] = movePoint;\n\t\t\t}\n\t\t\ti++;\n\t\t});\n\n\t\tif (downPoints.length > 1 && movePoints.length > 1) {\n\t\t\tconst w = plotContainer.width();\n\t\t\tconst h = plotContainer.height();\n\n\t\t\tlet downPoint0 = downPoints[0];\n\t\t\tlet downPoint1 = downPoints[1];\n\n\t\t\tlet movePoint0 = movePoints[0];\n\t\t\tlet movePoint1 = movePoints[1];\n\n\t\t\tif (downPoint0 && downPoint1 && movePoint0 && movePoint1) {\n\n\t\t\t\tmovePoint0 = plotContainer.toLocal(movePoint0)\n\t\t\t\tmovePoint1 = plotContainer.toLocal(movePoint1)\n\n\t\t\t\tdownPoint0 = plotContainer.toLocal(downPoint0)\n\t\t\t\tdownPoint1 = plotContainer.toLocal(downPoint1)\n\n\t\t\t\tif (this.get(\"pinchZoomX\")) {\n\t\t\t\t\tconst downStartX = this._downStartX;\n\t\t\t\t\tconst downEndX = this._downEndX;\n\n\t\t\t\t\tif (downStartX != null && downEndX != null) {\n\n\t\t\t\t\t\tif (downPoint0.x > downPoint1.x) {\n\t\t\t\t\t\t\t[downPoint0, downPoint1] = [downPoint1, downPoint0];\n\t\t\t\t\t\t\t[movePoint0, movePoint1] = [movePoint1, movePoint0];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet downPos0 = downStartX + (downPoint0.x / w) * (downEndX - downStartX);\n\t\t\t\t\t\tlet downPos1 = downStartX + (downPoint1.x / w) * (downEndX - downStartX);\n\n\t\t\t\t\t\tlet movePos0 = downStartX + (movePoint0.x / w) * (downEndX - downStartX);\n\t\t\t\t\t\tlet movePos1 = downStartX + (movePoint1.x / w) * (downEndX - downStartX);\n\n\t\t\t\t\t\tlet initialDistance = Math.max(0.001, downPos1 - downPos0);\n\t\t\t\t\t\tlet currentDistance = Math.max(0.001, movePos1 - movePos0);\n\n\n\t\t\t\t\t\tlet d = initialDistance / currentDistance;\n\n\t\t\t\t\t\tlet s = downStartX * d + downPos0 - movePos0 * d;\n\t\t\t\t\t\tlet e = downEndX * d + downPos1 - movePos1 * d;\n\n\t\t\t\t\t\tthis.xAxes.each((xAxis) => {\n\t\t\t\t\t\t\tlet sa = xAxis.fixPosition(s);\n\t\t\t\t\t\t\tlet ea = xAxis.fixPosition(e);\n\n\t\t\t\t\t\t\txAxis.zoom(sa, ea, 0);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.get(\"pinchZoomY\")) {\n\t\t\t\t\tconst downStartY = this._downStartY;\n\t\t\t\t\tconst downEndY = this._downEndY;\n\n\t\t\t\t\tif (downStartY != null && downEndY != null) {\n\n\t\t\t\t\t\tif (downPoint0.y < downPoint1.y) {\n\t\t\t\t\t\t\t[downPoint0, downPoint1] = [downPoint1, downPoint0];\n\t\t\t\t\t\t\t[movePoint0, movePoint1] = [movePoint1, movePoint0];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet downPos0 = downStartY + (1 - downPoint0.y / h) * (downEndY - downStartY);\n\t\t\t\t\t\tlet downPos1 = downStartY + (1 - downPoint1.y / h) * (downEndY - downStartY);\n\n\t\t\t\t\t\tlet movePos0 = downStartY + (1 - movePoint0.y / h) * (downEndY - downStartY);\n\t\t\t\t\t\tlet movePos1 = downStartY + (1 - movePoint1.y / h) * (downEndY - downStartY);\n\n\t\t\t\t\t\tlet initialDistance = Math.max(0.001, downPos1 - downPos0);\n\t\t\t\t\t\tlet currentDistance = Math.max(0.001, movePos1 - movePos0);\n\n\t\t\t\t\t\tlet d = initialDistance / currentDistance;\n\n\t\t\t\t\t\tlet s = downStartY * d + downPos0 - movePos0 * d;\n\t\t\t\t\t\tlet e = downEndY * d + downPos1 - movePos1 * d;\n\n\t\t\t\t\t\tthis.yAxes.each((yAxis) => {\n\n\t\t\t\t\t\t\tlet sa = yAxis.fixPosition(s);\n\t\t\t\t\t\t\tlet ea = yAxis.fixPosition(e);\n\n\t\t\t\t\t\t\tyAxis.zoom(sa, ea, 0);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _handleCursorPosition() {\n\t\tconst cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tconst cursorPoint = cursor.getPrivate(\"point\");\n\n\t\t\tconst snapToSeries = cursor.get(\"snapToSeries\");\n\t\t\tif (snapToSeries && cursorPoint) {\n\t\t\t\tconst snapToSeriesBy = cursor.get(\"snapToSeriesBy\");\n\t\t\t\tconst dataItems: Array<DataItem<IXYSeriesDataItem>> = [];\n\t\t\t\t$array.each(snapToSeries, (series) => {\n\t\t\t\t\tif (!series.isHidden() && !series.isHiding()) {\n\t\t\t\t\t\tif (snapToSeriesBy != \"x!\" && snapToSeriesBy != \"y!\") {\n\t\t\t\t\t\t\tconst startIndex = series.startIndex();\n\t\t\t\t\t\t\tconst endIndex = series.endIndex();\n\t\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\t\tconst dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\tif (dataItem && !dataItem.isHidden()) {\n\t\t\t\t\t\t\t\t\tdataItems.push(dataItem);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tconst tooltipDataItem = series.get(\"tooltipDataItem\");\n\t\t\t\t\t\t\tif (tooltipDataItem) {\n\t\t\t\t\t\t\t\tdataItems.push(tooltipDataItem);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tlet minDistance = Infinity;\n\t\t\t\tlet closestItem: DataItem<IXYSeriesDataItem> | undefined;\n\n\t\t\t\t$array.each(dataItems, (dataItem) => {\n\t\t\t\t\tconst point = dataItem.get(\"point\");\n\n\t\t\t\t\tif (point) {\n\t\t\t\t\t\tlet distance = 0;\n\t\t\t\t\t\tif (snapToSeriesBy == \"x\" || snapToSeriesBy == \"x!\") {\n\t\t\t\t\t\t\tdistance = Math.abs(cursorPoint.x - point.x);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (snapToSeriesBy == \"y\" || snapToSeriesBy == \"y!\") {\n\t\t\t\t\t\t\tdistance = Math.abs(cursorPoint.y - point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tdistance = Math.hypot(cursorPoint.x - point.x, cursorPoint.y - point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (distance < minDistance) {\n\t\t\t\t\t\t\tminDistance = distance;\n\t\t\t\t\t\t\tclosestItem = dataItem;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\t$array.each(snapToSeries, (series) => {\n\t\t\t\t\tconst tooltip = series.get(\"tooltip\");\n\t\t\t\t\tif (tooltip) {\n\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tif (closestItem) {\n\t\t\t\t\tlet series = closestItem.component as XYSeries;\n\t\t\t\t\tseries.showDataItemTooltip(closestItem);\n\t\t\t\t\tconst point = closestItem.get(\"point\");\n\t\t\t\t\tif (point) {\n\t\t\t\t\t\tcursor.handleMove(series.toGlobal(point), true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateCursor() {\n\t\tlet cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tcursor.handleMove();\n\t\t}\n\t}\n\n\tprotected _addCursor(cursor: XYCursor) {\n\t\tthis.plotContainer.children.push(cursor);\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tthis.series.each((series) => {\n\t\t\tthis._colorize(series);\n\t\t})\n\n\t\tif (this.isDirty(\"wheelX\") || this.isDirty(\"wheelY\")) {\n\t\t\tthis._handleSetWheel();\n\t\t}\n\n\t\tif (this.isDirty(\"cursor\")) {\n\t\t\tconst previous = this._prevSettings.cursor;\n\t\t\tconst cursor = this.get(\"cursor\")!;\n\t\t\tif (cursor !== previous) {\n\t\t\t\tthis._disposeProperty(\"cursor\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (cursor) {\n\t\t\t\t\tcursor._setChart(this);\n\t\t\t\t\tthis._addCursor(cursor);\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"cursor\", cursor.events.on(\"selectended\", () => {\n\t\t\t\t\t\tthis._handleCursorSelectEnd();\n\t\t\t\t\t}))\n\t\t\t\t}\n\n\t\t\t\t//this.setRaw(\"cursor\", cursor) // to reset previous value\n\t\t\t\tthis._prevSettings.cursor = cursor;\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"scrollbarX\")) {\n\t\t\tconst previous = this._prevSettings.scrollbarX;\n\t\t\tconst scrollbarX = this.get(\"scrollbarX\")!;\n\t\t\tif (scrollbarX !== previous) {\n\t\t\t\tthis._disposeProperty(\"scrollbarX\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tif (!scrollbarX.parent) {\n\t\t\t\t\t\tthis.topAxesContainer.children.push(scrollbarX);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"scrollbarX\", scrollbarX.events.on(\"rangechanged\", (e) => {\n\t\t\t\t\t\tthis._handleScrollbar(this.xAxes, e.start, e.end, e.grip);\n\t\t\t\t\t}))\n\n\t\t\t\t\t// Used to populate `ariaLabel` with meaningful values\n\t\t\t\t\tscrollbarX.setPrivate(\"positionTextFunction\", (position: number) => {\n\t\t\t\t\t\tconst axis = this.xAxes.getIndex(0);\n\t\t\t\t\t\treturn axis ? axis.getTooltipText(position) || \"\" : \"\";\n\t\t\t\t\t});\n\n\t\t\t\t}\n\n\t\t\t\tthis._prevSettings.scrollbarX = scrollbarX;\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"scrollbarY\")) {\n\t\t\tconst previous = this._prevSettings.scrollbarY;\n\t\t\tconst scrollbarY = this.get(\"scrollbarY\")!;\n\t\t\tif (scrollbarY !== previous) {\n\t\t\t\tthis._disposeProperty(\"scrollbarY\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tif (!scrollbarY.parent) {\n\t\t\t\t\t\tthis.rightAxesContainer.children.push(scrollbarY);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"scrollbarY\", scrollbarY.events.on(\"rangechanged\", (e) => {\n\t\t\t\t\t\tthis._handleScrollbar(this.yAxes, e.start, e.end, e.grip);\n\t\t\t\t\t}))\n\n\t\t\t\t\t// Used to populate `ariaLabel` with meaningful values\n\t\t\t\t\tscrollbarY.setPrivate(\"positionTextFunction\", (position: number) => {\n\t\t\t\t\t\tconst axis = this.yAxes.getIndex(0);\n\t\t\t\t\t\treturn axis ? axis.getTooltipText(position) || \"\" : \"\";\n\t\t\t\t\t});\n\n\t\t\t\t}\n\t\t\t\tthis._prevSettings.scrollbarY = scrollbarY;\n\t\t\t}\n\t\t}\n\n\t\tthis._handleZoomOut();\n\t}\n\n\tprotected _processSeries(series: this[\"_seriesType\"]) {\n\t\tsuper._processSeries(series);\n\t\tthis._colorize(series);\n\t}\n\n\tprotected _colorize(series: this[\"_seriesType\"]) {\n\t\tconst colorSet = this.get(\"colors\")!;\n\t\tif (colorSet) {\n\t\t\tif (series.get(\"fill\") == null) {\n\t\t\t\tconst color = colorSet.next();\n\n\t\t\t\tseries._setSoft(\"stroke\", color);\n\t\t\t\tseries._setSoft(\"fill\", color);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleCursorSelectEnd() {\n\t\tconst cursor = this.get(\"cursor\")!;\n\t\tconst behavior = cursor.get(\"behavior\");\n\n\t\tconst downPositionX = cursor.getPrivate(\"downPositionX\", 0);\n\t\tconst downPositionY = cursor.getPrivate(\"downPositionY\", 0);\n\n\t\tconst positionX = cursor.getPrivate(\"positionX\", 0.5);\n\t\tconst positionY = cursor.getPrivate(\"positionY\", 0.5);\n\n\n\t\tthis.xAxes.each((axis) => {\n\t\t\tif (behavior === \"zoomX\" || behavior === \"zoomXY\") {\n\t\t\t\tlet position0 = axis.toAxisPosition(downPositionX);\n\t\t\t\tlet position1 = axis.toAxisPosition(positionX);\n\t\t\t\taxis.zoom(position0, position1);\n\t\t\t}\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t})\n\n\t\tthis.yAxes.each((axis) => {\n\t\t\tif (behavior === \"zoomY\" || behavior === \"zoomXY\") {\n\t\t\t\tlet position0 = axis.toAxisPosition(downPositionY);\n\t\t\t\tlet position1 = axis.toAxisPosition(positionY);\n\t\t\t\taxis.zoom(position0, position1);\n\t\t\t}\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t})\n\n\t}\n\n\tprotected _handleScrollbar(axes: ListAutoDispose<Axis<any>>, start: number, end: number, priority?: \"start\" | \"end\") {\n\n\t\taxes.each((axis) => {\n\n\t\t\tlet axisStart = axis.fixPosition(start);\n\t\t\tlet axisEnd = axis.fixPosition(end);\n\n\t\t\tlet zoomAnimation = axis.zoom(axisStart, axisEnd, undefined, priority);\n\n\t\t\tconst updateScrollbar = \"updateScrollbar\";\n\t\t\taxis.setPrivateRaw(updateScrollbar, false);\n\n\t\t\tif (zoomAnimation) {\n\t\t\t\tzoomAnimation.events.on(\"stopped\", () => {\n\t\t\t\t\taxis.setPrivateRaw(updateScrollbar, true);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxis.setPrivateRaw(updateScrollbar, true);\n\t\t\t}\n\t\t})\n\t}\n\n\n\tprotected _processAxis<R extends AxisRenderer>(axes: ListAutoDispose<Axis<R>>, container: Container): IDisposer {\n\t\treturn axes.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (axis) => {\n\t\t\t\t\tthis._removeAxis(axis);\n\t\t\t\t})\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tcontainer.children.push(change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tcontainer.children.setIndex(change.index, change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tcontainer.children.insertIndex(change.index, change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis._removeAxis(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tcontainer.children.moveValue(change.value, change.newIndex);\n\t\t\t\tchange.value.processChart(this);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IListEvent type\");\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected _removeAxis(axis: Axis<AxisRenderer>) {\n\t\tif (!axis.isDisposed()) {\n\t\t\tconst axisParent = axis.parent\n\t\t\tif (axisParent) {\n\t\t\t\taxisParent.children.removeValue(axis);\n\t\t\t}\n\n\t\t\tconst gridContainer = axis.gridContainer;\n\t\t\tconst gridParent = gridContainer.parent;\n\t\t\tif (gridParent) {\n\t\t\t\tgridParent.children.removeValue(gridContainer);\n\t\t\t}\n\n\t\t\tconst topGridContainer = axis.topGridContainer;\n\t\t\tconst topGridParent = topGridContainer.parent;\n\t\t\tif (topGridParent) {\n\t\t\t\ttopGridParent.children.removeValue(topGridContainer);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateChartLayout() {\n\t\tconst left = this.leftAxesContainer.width();\n\t\tconst right = this.rightAxesContainer.width();\n\n\t\tconst bottomAxesContainer = this.bottomAxesContainer;\n\t\tbottomAxesContainer.set(\"paddingLeft\", left);\n\t\tbottomAxesContainer.set(\"paddingRight\", right);\n\n\t\tconst topAxesContainer = this.topAxesContainer;\n\t\ttopAxesContainer.set(\"paddingLeft\", left);\n\t\ttopAxesContainer.set(\"paddingRight\", right);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis(_axis: Axis<AxisRenderer>) { };\n\n\tpublic _handleAxisSelection(axis: Axis<any>, force?: boolean) {\n\n\t\tlet start = axis.fixPosition(axis.get(\"start\", 0));\n\t\tlet end = axis.fixPosition(axis.get(\"end\", 1));\n\n\t\tif (start > end) {\n\t\t\t[start, end] = [end, start];\n\t\t}\n\n\t\tif (this.xAxes.indexOf(axis) != -1) {\n\t\t\tif (force || axis.getPrivate(\"updateScrollbar\")) {\n\t\t\t\tlet scrollbarX = this.get(\"scrollbarX\");\n\n\t\t\t\tif (scrollbarX && (!scrollbarX.getPrivate(\"isBusy\") || force)) {\n\t\t\t\t\tscrollbarX.setRaw(\"start\", start);\n\t\t\t\t\tscrollbarX.setRaw(\"end\", end);\n\t\t\t\t\tscrollbarX.updateGrips();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (this.yAxes.indexOf(axis) != -1) {\n\t\t\tif (force || axis.getPrivate(\"updateScrollbar\")) {\n\t\t\t\tlet scrollbarY = this.get(\"scrollbarY\");\n\n\t\t\t\tif (scrollbarY && (!scrollbarY.getPrivate(\"isBusy\") || force)) {\n\t\t\t\t\tscrollbarY.setRaw(\"start\", start);\n\t\t\t\t\tscrollbarY.setRaw(\"end\", end);\n\t\t\t\t\tscrollbarY.updateGrips();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._handleZoomOut();\n\t}\n\n\tprotected _handleZoomOut() {\n\t\tlet zoomOutButton = this.zoomOutButton;\n\t\tif (zoomOutButton && zoomOutButton.parent) {\n\t\t\tlet visible = false;\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"start\") != 0 || axis.get(\"end\") != 1) {\n\t\t\t\t\tvisible = true;\n\t\t\t\t}\n\t\t\t})\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"start\") != 0 || axis.get(\"end\") != 1) {\n\t\t\t\t\tvisible = true;\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (visible) {\n\t\t\t\tif (zoomOutButton.isHidden()) {\n\t\t\t\t\tzoomOutButton.show();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tzoomOutButton.hide();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks if point is within plot area.\n\t *\n\t * @param   point  Reference point\n\t * @return         Is within plot area?\n\t */\n\tpublic inPlot(point: IPoint): boolean {\n\t\tconst plotContainer = this.plotContainer;\n\t\tconst otherCharts = this.getPrivate(\"otherCharts\", this._otherCharts);\n\t\tconst global = plotContainer.toGlobal(point);\n\n\t\tif (point.x >= -0.1 && point.y >= -0.1 && point.x <= plotContainer.width() + 0.1 && point.y <= plotContainer.height() + 0.1) {\n\t\t\treturn true;\n\t\t}\n\t\tif (otherCharts) {\n\n\t\t\tfor (let i = otherCharts.length - 1; i >= 0; i--) {\n\t\t\t\tconst chart = otherCharts[i];\n\n\t\t\t\tif (chart != this) {\n\t\t\t\t\tconst chartPlotContainer = chart.plotContainer;\n\t\t\t\t\tconst documentPoint = this._root.rootPointToDocument(global);\n\t\t\t\t\tconst chartRoot = chart._root.documentPointToRoot(documentPoint);\n\t\t\t\t\tconst local = chartPlotContainer.toLocal(chartRoot);\n\t\t\t\t\tif (local.x >= -0.1 && local.y >= -0.1 && local.x <= chartPlotContainer.width() + 0.1 && local.y <= chartPlotContainer.height() + 0.1) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic arrangeTooltips() {\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tconst w = plotContainer.width();\n\t\tconst h = plotContainer.height();\n\n\t\tlet plotT = plotContainer._display.toGlobal({ x: 0, y: 0 });\n\t\tlet plotB = plotContainer._display.toGlobal({ x: w, y: h });\n\n\t\tconst tooltips: Array<Tooltip> = [];\n\t\tlet sum = 0;\n\n\t\tlet minDistance = Infinity;\n\t\tlet movePoint = this._movePoint;\n\t\tlet maxTooltipDistance = this.get(\"maxTooltipDistance\");\n\t\tlet closest: XYSeries;\n\t\tlet closestPoint: IPoint;\n\n\t\tif ($type.isNumber(maxTooltipDistance)) {\n\t\t\tthis.series.each((series) => {\n\t\t\t\tconst tooltip = series.get(\"tooltip\");\n\t\t\t\tif (tooltip) {\n\t\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\t\tif (point) {\n\t\t\t\t\t\tlet distance = Math.hypot(movePoint.x - point.x, movePoint.y - point.y);\n\t\t\t\t\t\tif (distance < minDistance) {\n\t\t\t\t\t\t\tminDistance = distance;\n\t\t\t\t\t\t\tclosest = series;\n\t\t\t\t\t\t\tclosestPoint = point;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tconst tooltipSeries: Array<XYSeries> = [];\n\n\t\tthis.series.each((series) => {\n\t\t\tconst tooltip = series.get(\"tooltip\")!;\n\n\t\t\tif (tooltip) {\n\t\t\t\tlet hidden = false;\n\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\tif (point) {\n\t\t\t\t\tif (maxTooltipDistance >= 0) {\n\t\t\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\t\t\tif (point) {\n\t\t\t\t\t\t\tif (series != closest) {\n\t\t\t\t\t\t\t\tlet distance = Math.hypot(closestPoint.x - point.x, closestPoint.y - point.y);\n\t\t\t\t\t\t\t\tif (distance > maxTooltipDistance) {\n\t\t\t\t\t\t\t\t\thidden = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (maxTooltipDistance == -1) {\n\t\t\t\t\t\tif (series != closest) {\n\t\t\t\t\t\t\thidden = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!this.inPlot(this._tooltipToLocal(point)) || !tooltip.dataItem) {\n\t\t\t\t\t\thidden = true;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (!hidden) {\n\t\t\t\t\t\t\tsum += point.y;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (hidden || series.isHidden() || series.isHiding()) {\n\t\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttooltip.show();\n\t\t\t\t\t\ttooltips.push(tooltip);\n\n\t\t\t\t\t\ttooltipSeries.push(series);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tthis.setPrivate(\"tooltipSeries\", tooltipSeries);\n\n\t\tif (this.get(\"arrangeTooltips\")) {\n\n\t\t\tconst tooltipContainer = this._root.tooltipContainer;\n\n\t\t\tconst count = tooltips.length;\n\t\t\tconst average = sum / count;\n\n\t\t\tif (average > h / 2 + plotT.y) {\n\t\t\t\ttooltips.sort((a, b) => $order.compareNumber(b.get(\"pointTo\")!.y, a.get(\"pointTo\")!.y));\n\n\t\t\t\tlet prevY = plotB.y;\n\n\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\tlet height = tooltip.height();\n\t\t\t\t\tlet centerY = tooltip.get(\"centerY\");\n\t\t\t\t\tif (centerY instanceof Percent) {\n\t\t\t\t\t\theight *= centerY.value;\n\t\t\t\t\t}\n\t\t\t\t\theight += tooltip.get(\"marginBottom\", 0);\n\n\t\t\t\t\ttooltip.set(\"bounds\", { left: plotT.x, top: plotT.y, right: plotB.x, bottom: prevY })\n\n\t\t\t\t\tprevY = Math.min(prevY - height, tooltip._fy - height);\n\t\t\t\t\ttooltipContainer.children.moveValue(tooltip, 0);\n\t\t\t\t})\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttooltips.reverse();\n\t\t\t\ttooltips.sort((a, b) => $order.compareNumber(a.get(\"pointTo\")!.y, b.get(\"pointTo\")!.y));\n\n\t\t\t\tlet prevY = 0;\n\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\tlet height = tooltip.height();\n\t\t\t\t\tlet centerY = tooltip.get(\"centerY\");\n\t\t\t\t\tif (centerY instanceof Percent) {\n\t\t\t\t\t\theight *= centerY.value;\n\t\t\t\t\t}\n\t\t\t\t\theight += tooltip.get(\"marginBottom\", 0);\n\n\t\t\t\t\ttooltip.set(\"bounds\", { left: plotT.x, top: prevY, right: plotB.x, bottom: Math.max(plotT.y + h, prevY + height) })\n\t\t\t\t\ttooltipContainer.children.moveValue(tooltip, 0);\n\t\t\t\t\tprevY = Math.max(prevY + height, tooltip._fy + height);\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _tooltipToLocal(point: IPoint): IPoint {\n\t\treturn this.plotContainer.toLocal(point);\n\t}\n\n\t/**\n\t * Fully zooms out the chart.\n\t */\n\tpublic zoomOut() {\n\t\tthis.xAxes.each((axis) => {\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t\taxis.zoom(0, 1);\n\t\t})\n\n\t\tthis.yAxes.each((axis) => {\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t\taxis.zoom(0, 1);\n\t\t})\n\t}\n\n}\n","import type { ITimeInterval } from \"../../core/util/Time\";\r\nimport type { DataItem } from \"../../core/render/Component\";\r\nimport type { IValueAxisDataItem, ValueAxis } from \"./axes/ValueAxis\";\r\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\r\nimport type { DateAxis } from \"./axes/DateAxis\";\r\nimport type { ICategoryAxisDataItem } from \"./axes/CategoryAxis\";\r\nimport type { IGaplessDateAxisDataItem } from \"./axes/GaplessDateAxis\";\r\n\r\nimport { Theme } from \"../../core/Theme\";\r\nimport { percent, p50, p100 } from \"../../core/util/Percent\";\r\nimport { ColorSet } from \"../../core/util/ColorSet\";\r\nimport { setColor } from \"../../themes/DefaultTheme\";\r\n\r\nimport * as $time from \"../../core/util/Time\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as $math from \"../../core/util/Math\";\r\nimport * as $object from \"../../core/util/Object\";\r\nimport * as $array from \"../../core/util/Array\";\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport class XYChartDefaultTheme extends Theme {\r\n\tprotected setupDefaultRules() {\r\n\t\tsuper.setupDefaultRules();\r\n\r\n\t\tconst ic = this._root.interfaceColors;\r\n\t\tconst language = this._root.language;\r\n\t\tconst r = this.rule.bind(this);\r\n\r\n\t\t/**\r\n\t\t * ========================================================================\r\n\t\t * charts/xy\r\n\t\t * ========================================================================\r\n\t\t */\r\n\r\n\t\tr(\"XYChart\").setAll({\r\n\t\t\tcolors: ColorSet.new(this._root, {}),\r\n\t\t\tpaddingLeft: 20,\r\n\t\t\tpaddingRight: 20,\r\n\t\t\tpaddingTop: 16,\r\n\t\t\tpaddingBottom: 16,\r\n\t\t\tpanX: false,\r\n\t\t\tpanY: false,\r\n\t\t\twheelStep: 0.25,\r\n\t\t\tarrangeTooltips: true,\r\n\t\t\tpinchZoomX: false,\r\n\t\t\tpinchZoomY: false\r\n\t\t});\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: XYChartScrollbar\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYChart\", [\"scrollbar\", \"chart\"]).setAll({\r\n\t\t\tpaddingBottom: 0,\r\n\t\t\tpaddingLeft: 0,\r\n\t\t\tpaddingTop: 0,\r\n\t\t\tpaddingRight: 0,\r\n\t\t\tcolors: ColorSet.new(this._root, {\r\n\t\t\t\tsaturation: 0\r\n\t\t\t})\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"scrollbar\", \"overlay\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0.5\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"background\");\r\n\t\t}\r\n\r\n\t\t// Class: RoundedRectangle\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).setAll({\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tfillOpacity: 0,\r\n\t\t\tfocusable: true\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).states.create(\"hover\", { fillOpacity: 0.4 });\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\"]).setAll({\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tcornerRadiusBR: 0\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\", \"resize\", \"button\"]).setAll({\r\n\t\t\tcornerRadiusBL: 40,\r\n\t\t\tcornerRadiusBR: 40,\r\n\t\t\tcornerRadiusTL: 40,\r\n\t\t\tcornerRadiusTR: 40\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererX\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tinside: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererY\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tinside: true,\r\n\t\t\tminGridDistance: 5\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n\t\t\topacity: 0.5,\r\n\t\t\tcenterY: p100,\r\n\t\t\tminPosition: 0.01,\r\n\t\t\tmaxPosition: 0.99,\r\n\t\t\tfontSize: \"0.8em\"\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"category\"]).setAll({\r\n\t\t\ttext: \"{category}\",\r\n\t\t\tpopulateText: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"inside\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"inside\", \"opposite\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"opposite\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\r\n\t\tr(\"AxisLabel\", [\"y\"]).setAll({\r\n\t\t\tcenterX: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"inside\"]).setAll({\r\n\t\t\tcenterX: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"inside\", \"opposite\"]).setAll({\r\n\t\t\tcenterX: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n\t\t\tcenterX: 0\r\n\t\t});\r\n\r\n\r\n\t\tr(\"AxisLabel\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t// Class: Grid\r\n\t\tr(\"Grid\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t// Class: Grid\r\n\t\tr(\"Grid\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n\t\t\topacity: 0.5\r\n\t\t});\r\n\r\n\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Cursor\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYCursor\").setAll({\r\n\t\t\tbehavior: \"none\",\r\n\t\t\tlayer: 30,\r\n\t\t\texportable: false,\r\n\t\t\tsnapToSeriesBy: \"xy\"\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\", [\"cursor\", \"x\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0.8,\r\n\t\t\t\tstrokeDasharray: [2, 2]\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\", [\"cursor\", \"y\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0.8,\r\n\t\t\t\tstrokeDasharray: [2, 2]\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"cursor\", \"selection\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0.15,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Axes\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"Axis\").setAll({\r\n\t\t\tstart: 0,\r\n\t\t\tend: 1,\r\n\t\t\tminZoomCount: 1,\r\n\t\t\tmaxZoomCount: Infinity,\r\n\t\t\tmaxZoomFactor: 1000,\r\n\t\t\tmaxDeviation: 0.1,\r\n\t\t\tsnapTooltip: true,\r\n\t\t\ttooltipLocation: 0.5,\r\n\t\t\tpanX: true,\r\n\t\t\tpanY: true,\r\n\t\t\tzoomX: true,\r\n\t\t\tzoomY: true,\r\n\t\t\tfixAxisSize: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\").setAll({\r\n\t\t\tlocation: 0.5,\r\n\t\t\tmultiLocation: 0,\r\n\t\t\tcenterX: p50,\r\n\t\t\tcenterY: p50,\r\n\t\t\tpaddingTop: 3,\r\n\t\t\tpaddingBottom: 3,\r\n\t\t\tpaddingLeft: 5,\r\n\t\t\tpaddingRight: 5\r\n\t\t});\r\n\r\n\t\t// The following is deprecated following text measuring updates in 5.0.5\r\n\t\t// r(\"AxisLabel\", [\"y\"]).setAll({\r\n\t\t// \ttextAlign: \"right\"\r\n\t\t// });\r\n\r\n\t\t// r(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n\t\t// \ttextAlign: \"left\"\r\n\t\t// });\r\n\r\n\t\tr(\"Container\", [\"axis\", \"header\"]).setAll({\r\n\t\t\tlayer: 30\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"AxisRenderer\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"AxisRendererX\").setAll({\r\n\t\t\tminGridDistance: 120,\r\n\t\t\topposite: false,\r\n\t\t\tinversed: false,\r\n\t\t\tcellStartLocation: 0,\r\n\t\t\tcellEndLocation: 1,\r\n\t\t\twidth: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererY\").setAll({\r\n\t\t\tminGridDistance: 40,\r\n\t\t\topposite: false,\r\n\t\t\tinversed: false,\r\n\t\t\tcellStartLocation: 0,\r\n\t\t\tcellEndLocation: 1,\r\n\t\t\theight: p100\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"axis\", \"thumb\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\r\n\t\t\trule.states.create(\"hover\", { fillOpacity: 0.1 })\r\n\t\t}\r\n\r\n\t\tr(\"Rectangle\", [\"axis\", \"thumb\", \"x\"]).setAll({\r\n\t\t\tcursorOverStyle: \"ew-resize\"\r\n\t\t});\r\n\r\n\t\tr(\"Rectangle\", [\"axis\", \"thumb\", \"y\"]).setAll({\r\n\t\t\tcursorOverStyle: \"ns-resize\"\r\n\t\t});\r\n\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tlocation: 0,\r\n\t\t\t\tstrokeOpacity: 0.15,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"Grid\", [\"base\"]).setAll({\r\n\t\t\tstrokeOpacity: 0.3\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"axis\", \"fill\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tvisible: false,\r\n\t\t\t\tisMeasured: false,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tfillOpacity: 0.05,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\tr(\"Graphics\", [\"axis\", \"fill\", \"range\"]).setAll({\r\n\t\t\tisMeasured: true\r\n\t\t});\r\n\r\n\t\t// hides all elements of series axis range\r\n\t\tr(\"Graphics\", [\"series\", \"fill\", \"range\"]).setAll({\r\n\t\t\tvisible: false,\r\n\t\t\tisMeasured: true\r\n\t\t});\r\n\r\n\t\tr(\"Grid\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\tr(\"AxisTick\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"AxisTick\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tlocation: 0.5,\r\n\t\t\t\tmultiLocation: 0,\r\n\t\t\t\tstrokeOpacity: 1,\r\n\t\t\t\tisMeasured: false,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tvisible: false\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"CategoryAxis\").setAll({\r\n\t\t\tstartLocation: 0,\r\n\t\t\tendLocation: 1,\r\n\t\t\tfillRule: (dataItem: DataItem<ICategoryAxisDataItem>, index?: number) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tif (!$type.isNumber(index) || index % 2 == 0) {\r\n\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconst gridIntervals: Array<ITimeInterval> = [\r\n\t\t\t{ timeUnit: \"millisecond\", count: 1 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 5 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 10 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 50 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 100 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 500 },\r\n\t\t\t{ timeUnit: \"second\", count: 1 },\r\n\t\t\t{ timeUnit: \"second\", count: 5 },\r\n\t\t\t{ timeUnit: \"second\", count: 10 },\r\n\t\t\t{ timeUnit: \"second\", count: 30 },\r\n\t\t\t{ timeUnit: \"minute\", count: 1 },\r\n\t\t\t{ timeUnit: \"minute\", count: 5 },\r\n\t\t\t{ timeUnit: \"minute\", count: 10 },\r\n\t\t\t{ timeUnit: \"minute\", count: 15 },\r\n\t\t\t{ timeUnit: \"minute\", count: 30 },\r\n\t\t\t{ timeUnit: \"hour\", count: 1 },\r\n\t\t\t{ timeUnit: \"hour\", count: 3 },\r\n\t\t\t{ timeUnit: \"hour\", count: 6 },\r\n\t\t\t{ timeUnit: \"hour\", count: 12 },\r\n\t\t\t{ timeUnit: \"day\", count: 1 },\r\n\t\t\t{ timeUnit: \"day\", count: 2 },\r\n\t\t\t{ timeUnit: \"day\", count: 3 },\r\n\t\t\t{ timeUnit: \"day\", count: 4 },\r\n\t\t\t{ timeUnit: \"day\", count: 5 },\r\n\t\t\t{ timeUnit: \"week\", count: 1 },\r\n\t\t\t{ timeUnit: \"month\", count: 1 },\r\n\t\t\t{ timeUnit: \"month\", count: 2 },\r\n\t\t\t{ timeUnit: \"month\", count: 3 },\r\n\t\t\t{ timeUnit: \"month\", count: 6 },\r\n\t\t\t{ timeUnit: \"year\", count: 1 },\r\n\t\t\t{ timeUnit: \"year\", count: 2 },\r\n\t\t\t{ timeUnit: \"year\", count: 5 },\r\n\t\t\t{ timeUnit: \"year\", count: 10 },\r\n\t\t\t{ timeUnit: \"year\", count: 50 },\r\n\t\t\t{ timeUnit: \"year\", count: 100 },\r\n\t\t\t{ timeUnit: \"year\", count: 200 },\r\n\t\t\t{ timeUnit: \"year\", count: 500 },\r\n\t\t\t{ timeUnit: \"year\", count: 1000 },\r\n\t\t\t{ timeUnit: \"year\", count: 2000 },\r\n\t\t\t{ timeUnit: \"year\", count: 5000 },\r\n\t\t\t{ timeUnit: \"year\", count: 10000 },\r\n\t\t\t{ timeUnit: \"year\", count: 100000 }\r\n\t\t];\r\n\r\n\t\tconst dateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond\"),\r\n\t\t\t\"second\": language.translate(\"_date_second\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute\"),\r\n\t\t\t\"hour\": language.translate(\"_date_hour\"),\r\n\t\t\t\"day\": language.translate(\"_date_day\"),\r\n\t\t\t\"week\": language.translate(\"_date_day\"),\r\n\t\t\t\"month\": language.translate(\"_date_month\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tconst periodChangeDateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond\"),\r\n\t\t\t\"second\": language.translate(\"_date_second\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute\"),\r\n\t\t\t\"hour\": language.translate(\"_date_day\"),\r\n\t\t\t\"day\": language.translate(\"_date_day\"),\r\n\t\t\t\"week\": language.translate(\"_date_day\"),\r\n\t\t\t\"month\": language.translate(\"_date_month\") + \" \" + language.translate(\"_date_year\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tconst tooltipDateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond_full\"),\r\n\t\t\t\"second\": language.translate(\"_date_second_full\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute_full\"),\r\n\t\t\t\"hour\": language.translate(\"_date_hour_full\"),\r\n\t\t\t\"day\": language.translate(\"_date_day_full\"),\r\n\t\t\t\"week\": language.translate(\"_date_week_full\"),\r\n\t\t\t\"month\": language.translate(\"_date_month_full\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tr(\"CategoryDateAxis\").setAll({\r\n\t\t\tmarkUnitChange: true,\r\n\t\t\tgridIntervals: $array.copy(gridIntervals),\r\n\t\t\tdateFormats: $object.copy(dateFormats),\r\n\t\t\tperiodChangeDateFormats: $object.copy(periodChangeDateFormats)\r\n\t\t});\r\n\r\n\t\tr(\"DateAxis\").setAll({\r\n\r\n\t\t\tstrictMinMax: true,\r\n\t\t\tstartLocation: 0,\r\n\t\t\tendLocation: 1,\r\n\t\t\tmarkUnitChange: true,\r\n\t\t\tgroupData: false,\r\n\t\t\tgroupCount: 500,\r\n\t\t\tgridIntervals: $array.copy(gridIntervals),\r\n\t\t\tdateFormats: $object.copy(dateFormats),\r\n\t\t\tperiodChangeDateFormats: $object.copy(periodChangeDateFormats),\r\n\t\t\ttooltipDateFormats: tooltipDateFormats,\r\n\r\n\t\t\tgroupIntervals: [\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 100 },\r\n\t\t\t\t{ timeUnit: \"second\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"second\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"minute\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"minute\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"hour\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"day\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"week\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"month\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"year\", count: 1 }\r\n\t\t\t],\r\n\r\n\t\t\tfillRule: (dataItem: DataItem<IValueAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tconst axis = <DateAxis<AxisRenderer>>dataItem.component;\r\n\t\t\t\t\tconst value = dataItem.get(\"value\");\r\n\t\t\t\t\tconst endValue = dataItem.get(\"endValue\");\r\n\t\t\t\t\tconst intervalDuration = axis.intervalDuration();\r\n\t\t\t\t\tconst baseInterval = axis.getPrivate(\"baseInterval\");\r\n\r\n\t\t\t\t\tlet min = axis.getPrivate(\"min\", 0);\r\n\t\t\t\t\tmin = $time.round(new Date(min), baseInterval.timeUnit, baseInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\r\n\r\n\t\t\t\t\tif (value != null && endValue != null) {\r\n\t\t\t\t\t\tconst val = Math.round((value - min) / intervalDuration) / 2;\r\n\r\n\t\t\t\t\t\tif (val == Math.round(val)) {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tr(\"GaplessDateAxis\").setAll({\r\n\t\t\tfillRule: (dataItem: DataItem<IGaplessDateAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\r\n\t\t\t\t\tconst index = dataItem.get(\"index\")\r\n\t\t\t\t\tlet visible = false;\r\n\t\t\t\t\tif (!$type.isNumber(index) || index % 2 == 0) {\r\n\t\t\t\t\t\tvisible = true\r\n\t\t\t\t\t}\r\n\t\t\t\t\taxisFill.setPrivate(\"visible\", visible);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\tr(\"ValueAxis\").setAll({\r\n\r\n\t\t\tbaseValue: 0,\r\n\t\t\tlogarithmic: false,\r\n\t\t\tstrictMinMax: false,\r\n\r\n\t\t\tfillRule: (dataItem: DataItem<IValueAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tconst axis = <ValueAxis<AxisRenderer>>dataItem.component;\r\n\t\t\t\t\tconst value = dataItem.get(\"value\");\r\n\t\t\t\t\tconst step = axis.getPrivate(\"step\");\r\n\r\n\t\t\t\t\tif ($type.isNumber(value) && $type.isNumber(step)) {\r\n\t\t\t\t\t\tif ($math.round(value / step / 2, 5) == Math.round(value / step / 2)) {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tr(\"DurationAxis\").setAll({\r\n\t\t\tbaseUnit: \"second\"\r\n\t\t})\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Series\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYSeries\").setAll({\r\n\t\t\tmaskBullets: true,\r\n\t\t\tstackToNegative: true,\r\n\r\n\t\t\tlocationX: 0.5,\r\n\t\t\tlocationY: 0.5,\r\n\r\n\t\t\tsnapTooltip: false,\r\n\r\n\t\t\topenValueXGrouped: \"open\",\r\n\t\t\topenValueYGrouped: \"open\",\r\n\t\t\tvalueXGrouped: \"close\",\r\n\t\t\tvalueYGrouped: \"close\",\r\n\r\n\t\t\tseriesTooltipTarget: \"series\"\r\n\t\t});\r\n\r\n\t\tr(\"BaseColumnSeries\").setAll({\r\n\t\t\tadjustBulletPosition: true\r\n\t\t});\r\n\r\n\t\tr(\"ColumnSeries\").setAll({\r\n\t\t\tclustered: true\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"series\", \"column\"]).setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tisMeasured: false,\r\n\t\t\twidth: percent(70),\r\n\t\t\theight: percent(70),\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tfillOpacity: 1,\r\n\t\t\trole: \"figure\"\r\n\t\t});\r\n\r\n\t\tr(\"LineSeries\").setAll({\r\n\t\t\tconnect: true,\r\n\t\t\tautoGapCount: 1.1,\r\n\t\t\tstackToNegative: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"series\", \"stroke\"]).setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tisMeasured: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"series\", \"fill\"]).setAll({\r\n\t\t\tvisible: false,\r\n\t\t\tfillOpacity: 0,\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tstrokeWidth: 0,\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tisMeasured: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).setAll({\r\n\t\t\tdraw: (display: any, sprite: any) => {\r\n\t\t\t\tconst parent = sprite.parent;\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tconst h = parent.height();\r\n\t\t\t\t\tconst w = parent.width();\r\n\t\t\t\t\tdisplay.moveTo(0, h / 2);\r\n\t\t\t\t\tdisplay.lineTo(w, h / 2);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).states.create(\"disabled\", {});\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"disabled\");\r\n\t\t}\r\n\r\n\t\tr(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).setAll({\r\n\t\t\tdraw: (display: any, sprite: any) => {\r\n\t\t\t\tconst parent = sprite.parent;\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tconst h = parent.height();\r\n\t\t\t\t\tconst w = parent.width();\r\n\t\t\t\t\tdisplay.moveTo(0, 0);\r\n\t\t\t\t\tdisplay.lineTo(w, 0);\r\n\t\t\t\t\tdisplay.lineTo(w, h);\r\n\t\t\t\t\tdisplay.lineTo(0, h);\r\n\t\t\t\t\tdisplay.lineTo(0, 0);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).states.create(\"disabled\", {});\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"disabled\");\r\n\t\t}\r\n\r\n\t\tr(\"SmoothedXYLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"SmoothedXLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"SmoothedYLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"Candlestick\").setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tisMeasured: false,\r\n\t\t\twidth: percent(50),\r\n\t\t\theight: percent(50),\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tfillOpacity: 1,\r\n\t\t\trole: \"figure\"\r\n\t\t});\r\n\r\n\t\tr(\"OHLC\").setAll({\r\n\t\t\twidth: percent(80),\r\n\t\t\theight: percent(80)\r\n\t\t});\r\n\r\n\t\tr(\"CandlestickSeries\").setAll({\r\n\t\t\tlowValueXGrouped: \"low\",\r\n\t\t\tlowValueYGrouped: \"low\",\r\n\t\t\thighValueXGrouped: \"high\",\r\n\t\t\thighValueYGrouped: \"high\",\r\n\t\t\topenValueXGrouped: \"open\",\r\n\t\t\topenValueYGrouped: \"open\",\r\n\t\t\tvalueXGrouped: \"close\",\r\n\t\t\tvalueYGrouped: \"close\"\r\n\t\t})\r\n\r\n\t\t// These rules can be used for regular columns, too\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"riseFromOpen\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"positive\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"positive\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"dropFromOpen\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"negative\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"negative\");\r\n\t\t}\r\n\r\n\t\tr(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"riseFromPrevious\", { fillOpacity: 1 });\r\n\t\tr(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"dropFromPrevious\", { fillOpacity: 0 });\r\n\r\n\t}\r\n}\r\n","import type { IPoint } from \"../../core/util/IPoint\";\nimport type { XYChart } from \"./XYChart\"\nimport type { XYSeries } from \"./series/XYSeries\";\nimport type { IPointerEvent } from \"../../core/render/backend/Renderer\";\nimport type { Axis } from \"./axes/Axis\";\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\nimport type { Tooltip } from \"../../core/render/Tooltip\";\n\nimport { Container, IContainerSettings, IContainerPrivate, IContainerEvents } from \"../../core/render/Container\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport { Grid } from \"./axes/Grid\";\n//import { Animations } from \"../core/util/Animation\";\n\nimport * as $type from \"../../core/util/Type\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as $math from \"../../core/util/Math\";\nimport * as $array from \"../../core/util/Array\";\nimport * as $object from \"../../core/util/Object\";\n\nexport interface IXYCursorSettings extends IContainerSettings {\n\n\t/**\n\t * Cursor's X axis.\n\t *\n\t * If set, cursor will snap to that axis' cells.\n\t */\n\txAxis?: Axis<AxisRenderer>;\n\n\t/**\n\t * Cursor's Y axis.\n\t *\n\t * If set, cursor will snap to that axis' cells.\n\t */\n\tyAxis?: Axis<AxisRenderer>;\n\n\t/**\n\t * What should cursor do when dragged across plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#Behavior} for more info\n\t * @default \"none\"\n\t */\n\tbehavior?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"selectX\" | \"selectY\" | \"selectXY\" | \"none\";\n\n\t/**\n\t * Cursor's horizontal position relative to plot area.\n\t *\n\t * If this setting is set, cursor will not react to mouse/touch and will just\n\t * sit at specified position until `positionX` is reset to `undefined`.\n\t *\n\t * `0` - left, `1` - right.\n\t */\n\tpositionX?: number;\n\n\t/**\n\t * Cursor's vertical position relative to plot area.\n\t *\n\t * If this setting is set, cursor will not react to mouse/touch and will just\n\t * sit at specified position until `positionY` is reset to `undefined`.\n\t *\n\t * `0` - left, `1` - right.\n\t */\n\tpositionY?: number;\n\n\t/**\n\t * If set to `true`, cursor will not be hidden when mouse cursor moves out\n\t * of the plot area.\n\t *\n\t * @default false\n\t */\n\talwaysShow?: boolean;\n\n\t/**\n\t * A list of series to snap cursor to.\n\t *\n\t * If set, the cursor will always snap to the closest data item of listed\n\t * series.\n\t */\n\tsnapToSeries?: Array<XYSeries>;\n\n\t/**\n\t * Defines in which direction to look when searching for the nearest data\n\t * item to snap to.\n\t * \n\t * Possible values: `\"xy\"` (default), `\"x\"`, and `\"y\"`.\n\t *\n\t * @since 5.0.6\n\t * @default \"xy\"\n\t */\n\tsnapToSeriesBy?: \"xy\" | \"x\" | \"y\" | \"x!\" | \"y!\";\n\n\t/**\n\t * An array of other [[XYCursor]] objects to sync this cursor with.\n\t *\n\t * If set will automatically move synced cursors to the same position within\n\t * their respective axes as the this cursor.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#syncing-cursors} for more info\n\t * @since 5.1.4\n\t */\n\tsyncWith?: Array<XYCursor>;\n}\n\n\nexport interface IXYCursorPrivate extends IContainerPrivate {\n\n\t/**\n\t * Current X/Y coordinates of the cursor.\n\t */\n\tpoint?: IPoint;\n\n\t/**\n\t * Current horizontal position relative to the plot area (0-1).\n\t */\n\tpositionX?: number;\n\n\t/**\n\t * Current vertical position relative to the plot area (0-1).\n\t */\n\tpositionY?: number;\n\n\t/**\n\t * Horizontal cursor position on the moment when selection started.\n\t */\n\tdownPositionX?: number;\n\n\t/**\n\t * Vertical cursor position on the moment when selection started.\n\t */\n\tdownPositionY?: number;\n\n}\n\nexport interface IXYCursorEvents extends IContainerEvents {\n\n\t/**\n\t * Kicks in when cursor selection starts.\n\t *\n\t * Only when `behavior` is set.\n\t */\n\tselectended: {\n\t\ttarget: XYCursor;\n\t};\n\n\t/**\n\t * Kicks in when cursor selection ends.\n\t *\n\t * Only when `behavior` is set.\n\t */\n\tselectstarted: {\n\t\ttarget: XYCursor;\n\t};\n\n\t/**\n\t * Kicks in when cursor's position over plot area changes.\n\t */\n\tcursormoved: {\n\t\ttarget: XYCursor;\n\t};\n\n\t/**\n\t * Kicks in when cursor's is hidden when user rolls-out of the plot area\n\t */\n\tcursorhidden: {\n\t\ttarget: XYCursor;\n\t};\n\n}\n\n/**\n * Creates a chart cursor for an [[XYChart]].\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/} for more info\n * @important\n */\nexport class XYCursor extends Container {\n\tpublic static className: string = \"XYCursor\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([XYCursor.className]);\n\n\tdeclare public _settings: IXYCursorSettings;\n\tdeclare public _privateSettings: IXYCursorPrivate;\n\tdeclare public _events: IXYCursorEvents;\n\n\t/**\n\t * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\n\t *\n\t * @default Grid.new()\n\t */\n\tpublic readonly lineX: Grid = this.children.push(Grid.new(this._root, {\n\t\tthemeTags: [\"x\"]\n\t}));\n\n\t/**\n\t * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\n\t *\n\t * @default Grid.new()\n\t */\n\tpublic readonly lineY: Grid = this.children.push(Grid.new(this._root, {\n\t\tthemeTags: [\"y\"]\n\t}));\n\n\t/**\n\t * An element that represents current selection.\n\t *\n\t * @default Graphics.new()\n\t */\n\tpublic readonly selection: Graphics = this.children.push(Graphics.new(this._root, {\n\t\tthemeTags: [\"selection\", \"cursor\"], layer: 30\n\t}));\n\n\tprotected _movePoint: IPoint | undefined;\n\tprotected _lastPoint: IPoint = { x: 0, y: 0 };\n\n\tprotected _tooltipX: boolean = false;\n\tprotected _tooltipY: boolean = false;\n\n\t/**\n\t * A chart cursor is attached to.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _toX?: number;\n\tprotected _toY?: number;\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"xy\", \"cursor\"]);\n\t\tsuper._afterNew();\n\t\tthis.setAll({ \"width\": p100, height: p100, isMeasured: true, position: \"absolute\" });\n\t\tthis.states.create(\"hidden\", { visible: true, opacity: 0 });\n\t\tthis._drawLines();\n\t\tthis.setPrivateRaw(\"visible\", false);\n\n\t\tthis._disposers.push(this.setTimeout(() => {\n\t\t\tthis.setPrivate(\"visible\", true)\n\t\t}, 500))\n\n\t\tthis.lineX.events.on(\"positionchanged\", () => {\n\t\t\tthis._handleXLine();\n\t\t})\n\n\t\tthis.lineY.events.on(\"positionchanged\", () => {\n\t\t\tthis._handleYLine();\n\t\t})\n\t}\n\n\tprotected _handleXLine() {\n\t\tlet x = this.lineX.x();\n\t\tlet visible = true;\n\t\tif (x < 0 || x > this.width()) {\n\t\t\tvisible = false;\n\t\t}\n\t\tthis.lineX.setPrivate(\"visible\", visible);\n\t}\n\n\tprotected _handleYLine() {\n\t\tlet y = this.lineY.y();\n\t\tlet visible = true;\n\t\tif (y < 0 || y > this.height()) {\n\t\t\tvisible = false;\n\t\t}\n\t\tthis.lineY.setPrivate(\"visible\", visible);\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"xAxis\")) {\n\t\t\tthis._tooltipX = false;\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\n\t\t\tif (xAxis) {\n\t\t\t\tconst tooltip = xAxis.get(\"tooltip\");\n\t\t\t\tif (tooltip) {\n\t\t\t\t\tthis._tooltipX = true;\n\t\t\t\t\ttooltip.on(\"pointTo\", () => {\n\t\t\t\t\t\tthis._updateXLine(tooltip);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"yAxis\")) {\n\t\t\tthis._tooltipY = false;\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\tif (yAxis) {\n\t\t\t\tconst tooltip = yAxis.get(\"tooltip\");\n\t\t\t\tif (tooltip) {\n\t\t\t\t\tthis._tooltipY = true;\n\t\t\t\t\ttooltip.on(\"pointTo\", () => {\n\t\t\t\t\t\tthis._updateYLine(tooltip);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleSyncWith() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tconst syncWith = this.get(\"syncWith\");\n\t\t\tconst otherCharts: Array<XYChart> = [];\n\t\t\tif (syncWith) {\n\t\t\t\t$array.each(syncWith, (cursor) => {\n\t\t\t\t\tconst chart = cursor.chart;\n\t\t\t\t\tif (chart) {\n\t\t\t\t\t\totherCharts.push(chart)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\tchart._otherCharts = otherCharts;\n\t\t}\n\t}\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\t\tthis._handleSyncWith();\n\n\t\tif (this.isDirty(\"positionX\") || this.isDirty(\"positionY\")) {\n\t\t\tconst positionX = this.get(\"positionX\");\n\t\t\tconst positionY = this.get(\"positionY\");\n\n\t\t\tif (positionX == null && positionY == null) {\n\t\t\t\tthis.hide(0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\n\t\t\t\tthis.handleMove();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateXLine(tooltip: Tooltip) {\n\t\tlet x = $math.round(this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).x, 2);\n\t\tif (this._toX != x) {\n\t\t\tthis.lineX.animate({ key: \"x\", to: x, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\n\t\t\tthis._toX = x;\n\t\t}\n\t}\n\n\tprotected _updateYLine(tooltip: Tooltip) {\n\t\tlet y = $math.round(this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).y, 2);\n\t\tif (this._toY != y) {\n\t\t\tthis.lineY.animate({ key: \"y\", to: y, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\n\t\t\tthis._toY = y;\n\t\t}\n\t}\n\n\tprotected _drawLines() {\n\t\tthis.lineX.set(\"draw\", (display) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, this.height());\n\t\t})\n\t\tthis.lineY.set(\"draw\", (display) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(this.width(), 0);\n\t\t})\n\t}\n\n\tpublic _setChart(chart: XYChart): void {\n\t\tthis.chart = chart;\n\n\t\tthis._handleSyncWith();\n\n\t\tconst plotContainer = chart.plotContainer;\n\n\t\tthis.events.on(\"boundschanged\", () => {\n\t\t\tthis._disposers.push(this.setTimeout(() => {\n\t\t\t\tif (this.get(\"alwaysShow\")) {\n\t\t\t\t\tthis._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\n\t\t\t\t\tthis.handleMove();\n\t\t\t\t}\n\t\t\t}, 50))\n\t\t})\n\n\t\t//this._display.interactive = true;\n\t\tif ($utils.supports(\"touchevents\")) {\n\t\t\tthis._disposers.push(plotContainer.events.on(\"click\", (event) => {\n\t\t\t\tif ($utils.isTouchEvent(event.originalEvent)) {\n\t\t\t\t\tthis._handleMove(event.originalEvent);\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\n\t\tthis._disposers.push(plotContainer.events.on(\"pointerdown\", (event) => {\n\t\t\tthis._handleCursorDown(event.originalEvent);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointerup\", (event) => {\n\t\t\tthis._handleCursorUp(event.originalEvent);\n\t\t\tif (!event.native && !this.isHidden()) {\n\t\t\t\tthis._handleMove(event.originalEvent);\n\t\t\t}\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointermove\", (event) => {\n\t\t\tif (!this.get(\"syncWith\")) {\n\t\t\t\tif ($object.keys(plotContainer._downPoints).length == 0 && !event.native && this.isHidden()) {\n\t\t\t\t\t// Ignore mouse movement if it originates on outside element and\n\t\t\t\t\t// we're not dragging.\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._handleMove(event.originalEvent);\n\t\t}));\n\n\t\tconst parent = this.parent;\n\t\tif (parent) {\n\t\t\tparent.children.moveValue(this.selection);\n\t\t}\n\t}\n\n\tprotected _inPlot(point: IPoint): boolean {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\treturn chart.inPlot(point);\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected _handleCursorDown(event: IPointerEvent) {\n\t\tconst rootPoint = this._root.documentPointToRoot({ x: event.clientX, y: event.clientY });\n\t\tlet local = this._display.toLocal(rootPoint);\n\t\tconst chart = this.chart;\n\n\t\tthis.selection.set(\"draw\", () => { });\n\n\t\tif (chart && this._inPlot(local)) {\n\t\t\tthis._downPoint = local;\n\n\t\t\tif (this.get(\"behavior\") != \"none\") {\n\t\t\t\tthis.selection.show();\n\n\t\t\t\tconst type = \"selectstarted\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet positionX = this._getPosition(local).x;\n\t\t\tlet positionY = this._getPosition(local).y;\n\n\t\t\tthis.setPrivate(\"downPositionX\", positionX);\n\t\t\tthis.setPrivate(\"downPositionY\", positionY);\n\t\t}\n\t}\n\n\tprotected _handleCursorUp(_event: IPointerEvent) {\n\t\t// TODO: handle multitouch\n\t\tif (this._downPoint) {\n\t\t\tconst behavior = this.get(\"behavior\", \"none\");\n\t\t\tif (behavior != \"none\") {\n\t\t\t\tif (behavior.charAt(0) === \"z\") {\n\t\t\t\t\tthis.selection.hide();\n\t\t\t\t}\n\n\t\t\t\tlet userPositionX = this.get(\"positionX\");\n\t\t\t\tlet positionX = this.getPrivate(\"positionX\", 0);\n\n\t\t\t\tif ($type.isNumber(userPositionX)) {\n\t\t\t\t\tpositionX = userPositionX;\n\t\t\t\t}\n\n\t\t\t\tlet userPositionY = this.get(\"positionY\");\n\t\t\t\tlet positionY = this.getPrivate(\"positionY\", 0);\n\n\t\t\t\tif ($type.isNumber(userPositionY)) {\n\t\t\t\t\tpositionY = userPositionY;\n\t\t\t\t}\n\n\t\t\t\tlet dispatch = false;\n\t\t\t\tif (behavior === \"zoomX\" || behavior === \"zoomXY\" || behavior === \"selectX\" || behavior === \"selectXY\") {\n\t\t\t\t\tif (Math.abs(positionX - this.getPrivate(\"downPositionX\", 0)) > 0.003) {\n\t\t\t\t\t\tdispatch = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (behavior === \"zoomY\" || behavior === \"zoomXY\" || behavior === \"selectY\" || behavior === \"selectXY\") {\n\t\t\t\t\tif (Math.abs(positionY - this.getPrivate(\"downPositionY\", 0)) > 0.003) {\n\t\t\t\t\t\tdispatch = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (dispatch) {\n\t\t\t\t\tconst type = \"selectended\";\n\t\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._downPoint = undefined;\n\t}\n\n\tprotected _handleMove(event: IPointerEvent) {\n\t\tif (this.getPrivate(\"visible\")) {\n\t\t\tconst chart = this.chart;\n\t\t\tif(chart && $object.keys(chart.plotContainer._downPoints).length > 1){\n\t\t\t\tthis.set(\"forceHidden\", true)\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse{\nthis.set(\"forceHidden\", false)\n\t\t\t}\n\n\t\t\t// TODO: handle multitouch\n\t\t\tconst rootPoint = this._root.documentPointToRoot({ x: event.clientX, y: event.clientY });\n\n\t\t\tconst lastPoint = this._lastPoint;\n\n\t\t\tif (Math.round(lastPoint.x) === Math.round(rootPoint.x) && Math.round(lastPoint.y) === Math.round(rootPoint.y)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._lastPoint = rootPoint;\n\n\t\t\tthis.handleMove({ x: rootPoint.x, y: rootPoint.y });\n\t\t}\n\t}\n\n\tprotected _getPosition(point: IPoint): IPoint {\n\t\treturn { x: point.x / this.width(), y: point.y / this.height() };\n\t}\n\n\t/**\n\t * Moves the cursor to X/Y coordinates within chart container (`point`).\n\t *\n\t * If `skipEvent` parameter is set to `true`, the move will not invoke\n\t * the `\"cursormoved\"` event.\n\t * \n\t * @param  point      X/Y to move cursor to\n\t * @param  skipEvent  Do not fire \"cursormoved\" event\n\t */\n\tpublic handleMove(point?: IPoint, skipEvent?: boolean) {\n\t\tif (!point) {\n\t\t\tpoint = this._movePoint;\n\t\t}\n\n\t\tconst alwaysShow = this.get(\"alwaysShow\");\n\n\t\tif (!point) {\n\t\t\tthis.hide(0);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._movePoint = point;\n\t\tlet local = this._display.toLocal(point);\n\t\tlet chart = this.chart;\n\n\t\tif (chart && this._inPlot(local)) {\n\t\t\tchart._movePoint = point;\n\n\t\t\tif (this.isHidden()) {\n\t\t\t\tthis.show();\n\n\t\t\t\tconst behavior = this.get(\"behavior\", \"\");\n\t\t\t\tif (behavior.charAt(0) == \"z\") {\n\t\t\t\t\tthis.selection.set(\"draw\", () => { });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet x = local.x;\n\t\t\tlet y = local.y;\n\n\t\t\tlet xyPos = this._getPosition(local);\n\n\t\t\tthis.setPrivate(\"point\", local);\n\n\t\t\tconst snapToSeries = this.get(\"snapToSeries\");\n\n\t\t\tlet userPositionX = this.get(\"positionX\");\n\t\t\tlet positionX = xyPos.x;\n\n\t\t\tif ($type.isNumber(userPositionX)) {\n\t\t\t\tpositionX = userPositionX;\n\t\t\t}\n\n\t\t\tlet userPositionY = this.get(\"positionY\");\n\t\t\tlet positionY = xyPos.y;\n\n\t\t\tif ($type.isNumber(userPositionY)) {\n\t\t\t\tpositionY = userPositionY;\n\t\t\t}\n\n\t\t\tthis.setPrivate(\"positionX\", positionX);\n\t\t\tthis.setPrivate(\"positionY\", positionY);\n\n\t\t\tconst xy = this._getPoint(positionX, positionY);\n\t\t\tx = xy.x;\n\t\t\ty = xy.y;\n\n\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\taxis._handleCursorPosition(positionX, snapToSeries);\n\t\t\t\tif (alwaysShow) {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t}\n\t\t\t})\n\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\taxis._handleCursorPosition(positionY, snapToSeries);\n\t\t\t\tif (alwaysShow) {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (!skipEvent) {\n\t\t\t\tchart._handleCursorPosition();\n\n\t\t\t\tconst type = \"cursormoved\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._updateLines(x, y);\n\n\t\t\tchart.arrangeTooltips();\n\t\t}\n\t\telse if (!this._downPoint) {\n\t\t\tif (!alwaysShow) {\n\t\t\t\tthis.hide(0);\n\n\t\t\t\tconst type = \"cursorhidden\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this._downPoint && this.get(\"behavior\") != \"none\") {\n\t\t\tthis._updateSelection(local)\n\t\t}\n\t}\n\n\tprotected _getPoint(positionX: number, positionY: number): IPoint {\n\t\treturn { x: this.width() * positionX, y: this.height() * positionY };\n\t}\n\n\n\tprotected _updateLines(x: number, y: number) {\n\t\tif (!this._tooltipX) {\n\t\t\tthis.lineX.set(\"x\", x);\n\t\t}\n\t\tif (!this._tooltipY) {\n\t\t\tthis.lineY.set(\"y\", y);\n\t\t}\n\n\t\tthis._drawLines();\n\t}\n\n\tprotected _updateSelection(point: IPoint) {\n\t\tconst selection = this.selection;\n\t\tconst behavior = this.get(\"behavior\");\n\t\tconst w = this.width();\n\t\tconst h = this.height();\n\n\t\tif (point.x < 0) {\n\t\t\tpoint.x = 0;\n\t\t}\n\n\t\tif (point.x > w) {\n\t\t\tpoint.x = w;\n\t\t}\n\n\t\tif (point.y < 0) {\n\t\t\tpoint.y = 0;\n\t\t}\n\n\t\tif (point.y > h) {\n\t\t\tpoint.y = h;\n\t\t}\n\n\t\tselection.set(\"draw\", (display) => {\n\t\t\tconst downPoint = this._downPoint;\n\t\t\tif (downPoint) {\n\t\t\t\tif (behavior === \"zoomXY\" || behavior === \"selectXY\") {\n\t\t\t\t\tdisplay.moveTo(downPoint.x, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, point.y);\n\t\t\t\t\tdisplay.lineTo(point.x, point.y);\n\t\t\t\t\tdisplay.lineTo(point.x, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, downPoint.y);\n\t\t\t\t}\n\t\t\t\telse if (behavior === \"zoomX\" || behavior === \"selectX\") {\n\t\t\t\t\tdisplay.moveTo(downPoint.x, 0);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, h);\n\t\t\t\t\tdisplay.lineTo(point.x, h);\n\t\t\t\t\tdisplay.lineTo(point.x, 0);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, 0);\n\t\t\t\t}\n\t\t\t\telse if (behavior === \"zoomY\" || behavior === \"selectY\") {\n\t\t\t\t\tdisplay.moveTo(0, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(w, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(w, point.y);\n\t\t\t\t\tdisplay.lineTo(0, point.y);\n\t\t\t\t\tdisplay.lineTo(0, downPoint.y);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected _onHide() {\n\t\tif (this.isHidden()) {\n\t\t\tlet chart = this.chart;\n\t\t\tif (chart) {\n\n\t\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorHide();\n\t\t\t\t})\n\t\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorHide();\n\t\t\t\t})\n\t\t\t\tchart.series.each((series) => {\n\t\t\t\t\tseries.handleCursorHide();\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tsuper._onHide();\n\t}\n\n\tprotected _onShow() {\n\t\tif (!this.isHidden()) {\n\t\t\tlet chart = this.chart;\n\t\t\tif (chart) {\n\t\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t})\n\t\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tsuper._onShow();\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\t\tthis.selection.dispose();\n\t}\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { XYChart } from \"../XYChart\";\nimport type { XYSeries, IXYSeriesDataItem } from \"../series/XYSeries\";\nimport type { Animation } from \"../../../core/util/Entity\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Root } from \"../../../core/Root\";\n\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Component, IComponentSettings, IComponentPrivate, IComponentEvents, IComponentDataItem } from \"../../../core/render/Component\";\nimport { Container } from \"../../../core/render/Container\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport { List } from \"../../../core/util/List\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\n\n\n\nexport interface IAxisSettings<R extends AxisRenderer> extends IComponentSettings {\n\t/**\n\t * A renderer object which is responsible of rendering visible axis elements.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n\t */\n\trenderer: R;\n\n\t/**\n\t * The initial relative zoom start position of the axis.\n\t *\n\t * E.g. stting it to `0.1` will pre-zoom axis to 10% from the start.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pre_zooming_axes} for more info\n\t */\n\tstart?: number;\n\n\t/**\n\t * The initial relative zoom end position of the axis.\n\t *\n\t * E.g. stting it to `0.9` will pre-zoom axis to 10% from the end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pre_zooming_axes} for more info\n\t */\n\tend?: number;\n\n\t/**\n\t * Maximum number of times the scope of the axis could auto-zoom-in.\n\t *\n\t * This is to prevent axis jumping too drastically when scrolling/zooming.\n\t *\n\t * @default 1000\n\t */\n\tmaxZoomFactor?: number;\n\n\t/**\n\t * Maximum number of axis elements to show at a time.\n\t *\n\t * E.g. for a [[CategoryAxis]] that would be number of categories.\n\t * For a [[DateAxis]] it would be number of `baseInterval`.\n\t *\n\t * The axis will not allow to be zoomed out beyond this number.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Limiting_zoom_scope} for more info\n\t */\n\tmaxZoomCount?: number;\n\n\t/**\n\t * Minimum number of axis elements to show at a time.\n\t *\n\t * E.g. for a [[CategoryAxis]] that would be number of categories.\n\t * For a [[DateAxis]] it would be number of `baseInterval`.\n\t *\n\t * The axis will not allow to be zoomed in beyond this number.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Limiting_zoom_scope} for more info\n\t */\n\tminZoomCount?: number;\n\n\t/**\n\t * Base value of the axis.\n\t */\n\tbaseValue?: number;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is panned\n\t * horizontally, and will keep its current position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tpanX?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is panned\n\t * vertically, and will keep its current position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tpanY?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is zoomed\n\t * horizontally, and will keep its current zoom/position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tzoomX?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is zoomed\n\t * vertically, and will keep its current zoom/position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tzoomY?: boolean;\n\n\t/**\n\t * A relative distance the axis is allowed to be zoomed/panned beyond its\n\t * actual scope.\n\t *\n\t * @default 0.1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Over_zooming} for more info\n\t */\n\tmaxDeviation?: number;\n\n\t/**\n\t * [[Tooltip]] element to use for axis.\n\t */\n\ttooltip?: Tooltip;\n\n\t/**\n\t * `tooltipLocation` indicates\n\t * which relative place to snap to: `0` beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\ttooltipLocation?: number;\n\n\t/**\n\t * Should tooltip snap to the `tooltipLocation` (`true`) or follow cursor.\n\t *\n\t * @default true\n\t */\n\tsnapTooltip?: boolean;\n\n\t/**\n\t * If set to `true` (default) the axis width will stay constant across all\n\t * zooms, even if actual length of all visible labels changes.\n\t *\n\t * @default true\n\t */\n\tfixAxisSize?: boolean;\n\n\t/**\n\t * A function that will be used to create bullets on each cell.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_bullets} for more info\n\t */\n\tbullet?: (root: Root, axis: Axis<AxisRenderer>, dataItem: DataItem<IAxisDataItem>) => AxisBullet;\n\n}\n\nexport interface IAxisEvents extends IComponentEvents {\n}\n\nexport interface IAxisPrivate extends IComponentPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tname?: \"value\" | \"date\" | \"category\";\n\n\t/**\n\t * @ignore\n\t */\n\tupdateScrollbar?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tmaxZoomFactor?: number;\n}\n\nexport interface IAxisDataItem extends IComponentDataItem {\n\n\t/**\n\t * Axis label element.\n\t */\n\tlabel?: AxisLabel;\n\n\t/**\n\t * Tick element.\n\t */\n\ttick?: AxisTick;\n\n\t/**\n\t * Grid line element.\n\t */\n\tgrid?: Grid;\n\n\t/**\n\t * Axis fill element.\n\t */\n\taxisFill?: Graphics;\n\n\t/**\n\t * Bullet element.\n\t */\n\tbullet?: AxisBullet;\n\n\t/**\n\t * Indicates if this data item represents an axis range.\n\t */\n\tisRange?: boolean;\n\n\t/**\n\t * If set to `true`, the grid and axis fill of this data item will be drawn\n\t * above series.\n\t *\n\t * NOTE: this needs to be set **before** crating an axis range. Updating this\n\t * dynamically won't have any effect.\n\t *\n\t * NOTE: if you need all grid to be drawn above series, you can brig it to\n\t * front with `chart.gridContainer.toFront();`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Grid_fill_above_series} for more info\n\t * @default false\n\t */\n\tabove?: boolean\n\n}\n\n/**\n * A base class for all axes.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Adding_axes} for more info\n */\nexport abstract class Axis<R extends AxisRenderer> extends Component {\n\tpublic static className: string = \"Axis\";\n\tpublic static classNames: Array<string> = Component.classNames.concat([Axis.className]);\n\n\tdeclare public _settings: IAxisSettings<R>;\n\tdeclare public _privateSettings: IAxisPrivate;\n\tdeclare public _dataItemSettings: IAxisDataItem;\n\tdeclare public _events: IAxisEvents;\n\n\tdeclare public _seriesType: XYSeries;\n\n\tprotected _series: Array<this[\"_seriesType\"]> = [];\n\n\tpublic _isPanning: boolean = false;\n\n\t/**\n\t * A [[Container]] that holds all the axis label elements.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly labelsContainer: Container = this.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A [[Container]] that holds all the axis grid and fill elements.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly gridContainer: Container = Container.new(this._root, { width: p100, height: p100 });\n\n\t/**\n\t * A [[Container]] that holds axis grid elements which goes above the series.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly topGridContainer: Container = Container.new(this._root, { width: p100, height: p100 });\n\n\t/**\n\t * A [[Container]] that holds all the axis bullet elements.\n\t *\n\t * @default new Container\n\t */\n\tpublic readonly bulletsContainer: Container = this.children.push(Container.new(this._root, { isMeasured: false, width: p100, height: p100, position: \"absolute\" }));\n\n\t/**\n\t * A referenece to the the chart the axis belongs to.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _rangesDirty: Boolean = false;\n\n\tpublic _panStart: number = 0;\n\tpublic _panEnd: number = 1;\n\n\tprotected _sAnimation?: Animation<this[\"_settings\"][\"start\"]>;\n\tprotected _eAnimation?: Animation<this[\"_settings\"][\"end\"]>;\n\n\tpublic _skipSync:boolean = false;\n\n\t/**\n\t * A list of axis ranges.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @default new List()\n\t */\n\tpublic readonly axisRanges: List<DataItem<this[\"_dataItemSettings\"]>> = new List();\n\n\tpublic _seriesAxisRanges: Array<DataItem<this[\"_dataItemSettings\"]>> = [];\n\n\t/**\n\t * A control label that is invisible but is used to keep width the width of\n\t * the axis constant.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Ghost_label} for more info\n\t */\n\tpublic ghostLabel!: AxisLabel;\n\n\tprotected _cursorPosition: number = -1;\n\n\tprotected _snapToSeries?: Array<XYSeries>;\n\n\tpublic _seriesValuesDirty = false;\n\n\t/**\n\t * A container above the axis that can be used to add additional stuff into\n\t * it. For example a legend, label, or an icon.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\n\t * @default new Container\n\t */\n\tpublic axisHeader: Container = this.children.push(Container.new(this._root, {\n\t\tthemeTags: [\"axis\", \"header\"],\n\t\tposition: \"absolute\",\n\t\tbackground: Rectangle.new(this._root, {\n\t\t\tthemeTags: [\"header\", \"background\"],\n\t\t\tfill: this._root.interfaceColors.get(\"background\")\n\t\t})\n\t}));\n\n\tprotected _dispose() {\n\t\t// these could be in other parents, so disposing just in case\n\t\tthis.gridContainer.dispose();\n\t\tthis.topGridContainer.dispose();\n\t\tthis.bulletsContainer.dispose();\n\t\tthis.labelsContainer.dispose();\n\t\tthis.axisHeader.dispose();\n\t\tsuper._dispose();\n\t}\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\n\t\tthis.setPrivate(\"updateScrollbar\", true);\n\n\t\tthis._disposers.push(this.axisRanges.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (dataItem) => {\n\t\t\t\t\tthis.disposeDataItem(dataItem);\n\t\t\t\t});\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis.disposeDataItem(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tthis._processAxisRange(change.value, [\"range\"]);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IStreamEvent type\");\n\t\t\t}\n\t\t}))\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\tif (renderer) {\n\t\t\trenderer.axis = this;\n\t\t\trenderer.processAxis();\n\t\t}\n\t\tthis.children.push(renderer);\n\t\tthis.ghostLabel = renderer.makeLabel(new DataItem(this, undefined, {}), []);\n\t\tthis.ghostLabel.set(\"opacity\", 0);\n\t}\n\n\t/**\n\t * Zooms the axis to relative locations.\n\t *\n\t * Both `start` and `end` are relative: 0 means start of the axis, 1 - end.\n\t *\n\t * @param   start     Relative start\n\t * @param   end       Relative end\n\t * @param   duration  Duration of the zoom animation in milliseconds\n\t * @return            Zoom animation\n\t */\n\tpublic zoom(start: number, end: number, duration?: number, priority?: \"start\" | \"end\"): Animation<this[\"_settings\"][\"start\"]> | Animation<this[\"_settings\"][\"end\"]> | undefined {\n\n\t\tif (this.get(\"start\") !== start || this.get(\"end\") != end) {\n\n\t\t\tlet sAnimation = this._sAnimation;\n\t\t\tlet eAnimation = this._eAnimation;\n\n\t\t\tlet maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\n\n\t\t\tif (start < - maxDeviation) {\n\t\t\t\tstart = -maxDeviation;\n\t\t\t}\n\n\t\t\tif (end > 1 + maxDeviation) {\n\t\t\t\tend = 1 + maxDeviation;\n\t\t\t}\n\n\t\t\tif (start > end) {\n\t\t\t\t[start, end] = [end, start];\n\t\t\t}\n\n\t\t\tif (!$type.isNumber(duration)) {\n\t\t\t\tduration = this.get(\"interpolationDuration\", 0);\n\t\t\t}\n\n\t\t\tif (!priority) {\n\t\t\t\tpriority = \"end\";\n\t\t\t}\n\n\t\t\tlet maxZoomFactor = this.getPrivate(\"maxZoomFactor\", this.get(\"maxZoomFactor\", 100));\n\t\t\tlet maxZoomFactorReal = maxZoomFactor;\n\n\t\t\tif (end === 1 && start !== 0) {\n\t\t\t\tif (start < this.get(\"start\")) {\n\t\t\t\t\tpriority = \"start\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpriority = \"end\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === 0 && end !== 1) {\n\t\t\t\tif (end > this.get(\"end\")) {\n\t\t\t\t\tpriority = \"end\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpriority = \"start\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet minZoomCount = this.get(\"minZoomCount\");\n\t\t\tlet maxZoomCount = this.get(\"maxZoomCount\");\n\n\t\t\tif ($type.isNumber(minZoomCount)) {\n\t\t\t\tmaxZoomFactor = maxZoomFactorReal / minZoomCount;\n\t\t\t}\n\n\t\t\tlet minZoomFactor: number = 1;\n\n\t\t\tif ($type.isNumber(maxZoomCount)) {\n\t\t\t\tminZoomFactor = maxZoomFactorReal / maxZoomCount;\n\t\t\t}\n\n\t\t\t// most likely we are dragging left scrollbar grip here, so we tend to modify end\n\t\t\tif (priority === \"start\") {\n\t\t\t\tif (maxZoomCount > 0) {\n\t\t\t\t\t// add to the end\n\t\t\t\t\tif (1 / (end - start) < minZoomFactor) {\n\t\t\t\t\t\tend = start + 1 / minZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// add to the end\n\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t\t//unless end is > 0\n\t\t\t\tif (end > 1 && end - start < 1 / maxZoomFactor) {\n\t\t\t\t\t//end = 1;\n\t\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// most likely we are dragging right, so we modify left\n\t\t\telse {\n\t\t\t\tif (maxZoomCount > 0) {\n\t\t\t\t\t// add to the end\n\t\t\t\t\tif (1 / (end - start) < minZoomFactor) {\n\t\t\t\t\t\tstart = end - 1 / minZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// remove from start\n\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t\tif (start < 0 && end - start < 1 / maxZoomFactor) {\n\t\t\t\t\t//start = 0;\n\t\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t}\n\n\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t}\n\n\t\t\tif (maxZoomCount != null && minZoomCount != null && (start == this.get(\"start\") && end == this.get(\"end\"))) {\n\t\t\t\tconst chart = this.chart;\n\t\t\t\tif (chart) {\n\t\t\t\t\tchart._handleAxisSelection(this, true);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (((sAnimation && sAnimation.playing && sAnimation.to == start) || this.get(\"start\") == start) && ((eAnimation && eAnimation.playing && eAnimation.to == end) || this.get(\"end\") == end)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\n\t\t\tif (duration > 0) {\n\t\t\t\tlet easing = this.get(\"interpolationEasing\");\n\t\t\t\tlet sAnimation, eAnimation;\n\t\t\t\tif (this.get(\"start\") != start) {\n\t\t\t\t\tsAnimation = this.animate({ key: \"start\", to: start, duration: duration, easing: easing });\n\t\t\t\t}\n\t\t\t\tif (this.get(\"end\") != end) {\n\t\t\t\t\teAnimation = this.animate({ key: \"end\", to: end, duration: duration, easing: easing });\n\t\t\t\t}\n\n\t\t\t\tthis._sAnimation = sAnimation;\n\t\t\t\tthis._eAnimation = eAnimation;\n\n\t\t\t\tif (sAnimation) {\n\t\t\t\t\treturn sAnimation;\n\t\t\t\t}\n\t\t\t\telse if (eAnimation) {\n\t\t\t\t\treturn eAnimation;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.set(\"start\", start);\n\t\t\t\tthis.set(\"end\", end);\n\t\t\t\t// otherwise bullets and line out of sync, as series is not redrawn\n\t\t\t\tthis._root.events.once(\"frameended\", () => {\n\t\t\t\t\tthis._markDirtyKey(\"start\");\n\t\t\t\t\tthis._root._markDirty();\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (this._sAnimation) {\n\t\t\t\tthis._sAnimation.stop();\n\t\t\t}\n\t\t\tif (this._eAnimation) {\n\t\t\t\tthis._eAnimation.stop();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * A list of series using this axis.\n\t *\n\t * @return Series\n\t */\n\tpublic get series(): Array<this[\"_seriesType\"]> {\n\t\treturn this._series;\n\t}\n\n\n\tpublic _processAxisRange(dataItem: DataItem<this[\"_dataItemSettings\"]>, themeTags: Array<string>) {\n\t\tdataItem.setRaw(\"isRange\", true);\n\t\tthis._createAssets(dataItem, themeTags);\n\t\tthis._rangesDirty = true;\n\t\tthis._prepareDataItem(dataItem);\n\n\t\tconst above = dataItem.get(\"above\");\n\t\tconst container = this.topGridContainer;\n\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (above && grid) {\n\t\t\tcontainer.children.moveValue(grid);\n\t\t}\n\n\t\tconst fill = dataItem.get(\"axisFill\");\n\t\tif (above && fill) {\n\t\t\tcontainer.children.moveValue(fill);\n\t\t}\n\t}\n\n\tpublic _prepareDataItem(_dataItem: DataItem<this[\"_dataItemSettings\"]>, _index?: number) { }\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getX(_value: any, _location: number, baseValue?: any): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getY(_value: any, _location: number, baseValue?: any): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemCoordinateX(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemCoordinateY(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemPositionX(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemPositionY(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyExtremes() {\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtySelectionExtremes() {\n\t}\n\n\tpublic _calculateTotals() {\n\t}\n\n\tprotected _updateAxisRanges() {\n\t\tthis.axisRanges.each((axisRange) => {\n\t\t\tthis._prepareDataItem(axisRange);\n\t\t})\n\n\t\t$array.each(this._seriesAxisRanges, (axisRange) => {\n\t\t\tthis._prepareDataItem(axisRange);\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract baseValue(): any;\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.get(\"fixAxisSize\")) {\n\t\t\tthis.ghostLabel.set(\"visible\", true);\n\t\t}\n\t\telse {\n\t\t\tthis.ghostLabel.set(\"visible\", false);\n\t\t}\n\n\t\tif (this.isDirty(\"start\") || this.isDirty(\"end\")) {\n\t\t\tthis.chart!._updateCursor();\n\n\t\t\tlet start = this.get(\"start\", 0);\n\t\t\tlet end = this.get(\"end\", 1);\n\n\t\t\tlet maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\n\n\t\t\tif (start < -maxDeviation) {\n\t\t\t\tlet delta = start + maxDeviation;\n\t\t\t\tstart = -maxDeviation;\n\t\t\t\tthis.setRaw(\"start\", start);\n\t\t\t\tif (this.isDirty(\"end\")) {\n\t\t\t\t\tthis.setRaw(\"end\", end - delta);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (end > 1 + maxDeviation) {\n\t\t\t\tlet delta = end - 1 - maxDeviation;\n\t\t\t\tend = 1 + maxDeviation;\n\t\t\t\tthis.setRaw(\"end\", end);\n\n\t\t\t\tif (this.isDirty(\"start\")) {\n\t\t\t\t\tthis.setRaw(\"start\", start - delta);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\trenderer._start = this.get(\"start\")!;\n\t\trenderer._end = this.get(\"end\")!;\n\t\trenderer._inversed = renderer.get(\"inversed\", false);\n\t\trenderer._axisLength = renderer.axisLength() / (renderer._end - renderer._start);\n\t\trenderer._updateLC();\n\n\t\tif (this.isDirty(\"tooltip\")) {\n\t\t\tconst tooltip = this.get(\"tooltip\");\n\t\t\tif (tooltip) {\n\t\t\t\tconst rendererTags = renderer.get(\"themeTags\");\n\t\t\t\ttooltip.addTag(\"axis\");\n\t\t\t\ttooltip.addTag(this.className.toLowerCase());\n\t\t\t\ttooltip._applyThemes();\n\n\t\t\t\tif (rendererTags) {\n\t\t\t\t\ttooltip.set(\"themeTags\", $utils.mergeTags(tooltip.get(\"themeTags\"), rendererTags));\n\t\t\t\t\ttooltip.label._applyThemes();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateTooltipBounds() {\n\t\tconst tooltip = this.get(\"tooltip\")!;\n\t\tif (tooltip) {\n\t\t\tthis.get(\"renderer\").updateTooltipBounds(tooltip);\n\t\t}\n\t}\n\n\tpublic _updateBounds() {\n\t\tsuper._updateBounds();\n\t\tthis._updateTooltipBounds();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processChart(chart: XYChart) {\n\t\tthis.chart = chart;\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\trenderer.chart = chart;\n\t\tchart.gridContainer.children.push(this.gridContainer);\n\t\tchart.topGridContainer.children.push(this.topGridContainer);\n\n\t\tchart.axisHeadersContainer.children.push(this.axisHeader);\n\n\t\tthis.on(\"start\", () => {\n\t\t\tchart._handleAxisSelection(this);\n\t\t});\n\t\tthis.on(\"end\", () => {\n\t\t\tchart._handleAxisSelection(this);\n\t\t});\n\n\t\tchart.plotContainer.onPrivate(\"width\", () => {\n\t\t\tthis.markDirtySize();\n\t\t});\n\t\tchart.plotContainer.onPrivate(\"height\", () => {\n\t\t\tthis.markDirtySize();\n\t\t});\n\n\t\tchart.processAxis(this);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic hideDataItem(dataItem: DataItem<IAxisDataItem>): Promise<void> {\n\t\tthis._toggleDataItem(dataItem, false);\n\t\treturn super.hideDataItem(dataItem);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic showDataItem(dataItem: DataItem<IAxisDataItem>): Promise<void> {\n\t\tthis._toggleDataItem(dataItem, true);\n\t\treturn super.showDataItem(dataItem);\n\t}\n\n\n\tpublic _toggleDataItem(dataItem: DataItem<IAxisDataItem>, visible: boolean) {\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\tlabel.setPrivate(\"visible\", visible);\n\t\t}\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (grid) {\n\t\t\tgrid.setPrivate(\"visible\", visible);\n\t\t}\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (tick) {\n\t\t\ttick.setPrivate(\"visible\", visible);\n\t\t}\n\t\tconst axisFill = dataItem.get(\"axisFill\");\n\t\tif (axisFill) {\n\t\t\taxisFill.setPrivate(\"visible\", visible);\n\t\t}\n\n\t\tconst bullet = dataItem.get(\"bullet\");\n\t\tif (bullet) {\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\t\t\t\tsprite.setPrivate(\"visible\", visible);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract basePosition(): number;\n\n\tpublic _createAssets(dataItem: DataItem<this[\"_dataItemSettings\"]>, tags: Array<string>) {\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\tif (!dataItem.get(\"label\")) {\n\t\t\trenderer.makeLabel(dataItem, tags);\n\t\t}\n\n\t\tif (!dataItem.get(\"grid\")) {\n\t\t\trenderer.makeGrid(dataItem, tags);\n\t\t}\n\n\t\tif (!dataItem.get(\"tick\")) {\n\t\t\trenderer.makeTick(dataItem, tags);\n\t\t}\n\n\t\tif (!dataItem.get(\"axisFill\")) {\n\t\t\trenderer.makeAxisFill(dataItem, tags);\n\t\t}\n\n\t\tthis._processBullet(dataItem);\n\t}\n\n\tprotected _processBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet bullet = dataItem.get(\"bullet\");\n\t\tlet axisBullet = this.get(\"bullet\");\n\n\t\tif (!bullet && axisBullet && !dataItem.get(\"isRange\")) {\n\t\t\tbullet = axisBullet(this._root, this, dataItem);\n\t\t}\n\n\t\tif (bullet) {\n\t\t\tbullet.axis = this;\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\n\t\t\tif (sprite) {\n\t\t\t\tsprite._setDataItem(dataItem);\n\t\t\t\tdataItem.setRaw(\"bullet\", bullet);\n\t\t\t\tif (!sprite.parent) {\n\t\t\t\t\tthis.bulletsContainer.children.push(sprite);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _afterChanged() {\n\t\tsuper._afterChanged();\n\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart._updateChartLayout();\n\t\t\tchart.axisHeadersContainer.markDirtySize();\n\t\t}\n\n\t\tthis.get(\"renderer\")._updatePositions();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\trenderer.labels.removeValue(label);\n\t\t\tlabel.dispose();\n\t\t}\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (tick) {\n\t\t\trenderer.ticks.removeValue(tick);\n\t\t\ttick.dispose();\n\t\t}\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (grid) {\n\t\t\trenderer.grid.removeValue(grid);\n\t\t\tgrid.dispose();\n\t\t}\n\t\tconst axisFill = dataItem.get(\"axisFill\");\n\t\tif (axisFill) {\n\t\t\trenderer.axisFills.removeValue(axisFill);\n\t\t\taxisFill.dispose();\n\t\t}\n\t\tconst bullet = dataItem.get(\"bullet\");\n\n\t\tif (bullet) {\n\t\t\tbullet.dispose();\n\t\t}\n\t}\n\n\tprotected _updateGhost() {\n\t\tconst ghostLabel = this.ghostLabel;\n\t\tif (!ghostLabel.isHidden()) {\n\t\t\tconst bounds = ghostLabel.localBounds();\n\t\t\tconst gWidth = bounds.right - bounds.left;\n\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label && !label.isHidden()) {\n\t\t\t\t\tconst bounds = label.localBounds();\n\t\t\t\t\tconst w = bounds.right - bounds.left;\n\n\t\t\t\t\tif (w > gWidth) {\n\t\t\t\t\t\tghostLabel.set(\"text\", label.text._getText());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tlet start = this.get(\"start\", 0);\n\t\tlet end = this.get(\"end\", 1);\n\t\tthis.get(\"renderer\").updateLabel(ghostLabel, start + (end - start) * 0.5);\n\t}\n\n\tpublic _handleCursorPosition(position: number, snapToSeries?: Array<XYSeries>) {\n\t\tconst renderer = this.get(\"renderer\");\n\t\tposition = renderer.toAxisPosition(position);\n\n\t\tthis._cursorPosition = position;\n\t\tthis._snapToSeries = snapToSeries;\n\n\t\tthis.updateTooltip();\n\t}\n\n\t/**\n\t * Can be called when axis zoom changes and you need to update tooltip\n\t * position.\n\t */\n\tpublic updateTooltip() {\n\t\tconst snapToSeries = this._snapToSeries;\n\t\tlet position = this._cursorPosition;\n\t\tconst tooltip = this.get(\"tooltip\")!;\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\tif ($type.isNumber(position)) {\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\tconst dataItem = this.getSeriesItem(series, position!);\n\t\t\t\t\tseries.setRaw(\"tooltipDataItem\", dataItem);\n\t\t\t\t\tif (snapToSeries && snapToSeries.indexOf(series) != -1) {\n\t\t\t\t\t\tseries.updateLegendMarker(dataItem);\n\t\t\t\t\t\tseries.updateLegendValue(dataItem);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tseries.showDataItemTooltip(dataItem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\n\t\t\tif (tooltip) {\n\t\t\t\trenderer.updateTooltipBounds(tooltip);\n\n\t\t\t\tif (this.get(\"snapTooltip\")) {\n\t\t\t\t\tposition = this.roundAxisPosition(position, this.get(\"tooltipLocation\", 0.5));\n\t\t\t\t}\n\t\t\t\tif (!$type.isNaN(position)) {\n\t\t\t\t\tthis._updateTooltipText(tooltip, position);\n\t\t\t\t\trenderer.positionTooltip(tooltip, position);\n\n\t\t\t\t\tif (position < this.get(\"start\") || position > this.get(\"end\")) {\n\t\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttooltip.show(0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip.label.set(\"text\", this.getTooltipText(position));\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic abstract getTooltipText(position: number): string | undefined;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, _location: number): number {\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorShow() {\n\t\tlet tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.show();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorHide() {\n\t\tlet tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.hide();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processSeriesDataItem(_dataItem: DataItem<IXYSeriesDataItem>, _fields: Array<string>) {\n\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._sizeDirty = false;\n\t\tthis._rangesDirty = false;\n\t}\n\n\t/**\n\t * Converts pixel coordinate to a relative position on axis.\n\t *\n\t * @param   coordinate  Coordinate\n\t * @return              Relative position\n\t */\n\tpublic coordinateToPosition(coordinate: number): number {\n\t\tconst renderer = this.get(\"renderer\");\n\t\treturn renderer.toAxisPosition(coordinate / renderer.axisLength());\n\t}\n\n\t/**\n\t * Converts relative position of the plot area to relative position of the\n\t * axis with zoom taken into account.\n\t *\n\t * @param position Position\n\t * @return Relative position\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\treturn this.get(\"renderer\").toAxisPosition(position);\n\t}\n\n\t/**\n\t * Adjusts position with inversed taken into account.\n\t *\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number): number {\n\t\treturn this.get(\"renderer\").fixPosition(position);\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic abstract getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined\n\n\t/**\n\t * @ignore\n\t */\n\tpublic shouldGap(_dataItem: DataItem<IXYSeriesDataItem>, _nextItem: DataItem<IXYSeriesDataItem>, _autoGapCount: number, _fieldName: string): boolean {\n\t\treturn false;\n\t}\n\n\t/**\n\t * Creates and returns an axis range object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @param   axisDataItem  Axis data item\n\t * @return                Axis range\n\t */\n\tpublic createAxisRange(axisDataItem: DataItem<IAxisDataItem>): DataItem<this[\"_dataItemSettings\"]> {\n\t\treturn this.axisRanges.push(axisDataItem);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _groupSeriesData(_series: XYSeries) { }\n}\n","import { Label, ILabelSettings, ILabelPrivate } from \"../../../core/render/Label\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\n\nexport interface IAxisLabel extends Label {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the label will be shown inside plot area.\n\t *\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tmaxPosition?: number;\n\n\t_tickPoints: Array<IPoint>;\n}\n\n\nexport interface IAxisLabelSettings extends ILabelSettings {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the label will be shown inside plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisLabelPrivate extends ILabelPrivate {\n}\n\n/**\n * Draws an axis label.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels} for more info\n * @important\n */\nexport class AxisLabel extends Label implements IAxisLabel {\n\n\tdeclare public _settings: IAxisLabelSettings;\n\tdeclare public _privateSettings: IAxisLabelPrivate;\n\n\tpublic _tickPoints: Array<IPoint> = [];\n\n\tpublic static className: string = \"AxisLabel\";\n\tpublic static classNames: Array<string> = Label.classNames.concat([AxisLabel.className]);\n}\n","import { RadialLabel, IRadialLabelSettings, IRadialLabelPrivate } from \"../../../core/render/RadialLabel\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\n\nexport interface IAxisLabelRadialSettings extends IRadialLabelSettings {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisLabelRadialPrivate extends IRadialLabelPrivate {\n}\n\n/**\n * Draws a label on a circular axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels} for more info\n */\nexport class AxisLabelRadial extends RadialLabel {\n\n\tdeclare public _settings: IAxisLabelRadialSettings;\n\tdeclare public _privateSettings: IAxisLabelRadialPrivate;\n\n\tpublic static className: string = \"AxisLabelRadial\";\n\tpublic static classNames: Array<string> = RadialLabel.classNames.concat([AxisLabelRadial.className]);\n\n\tpublic _tickPoints: Array<IPoint> = [];\n\n}\n","import type { Sprite } from \"../../../core/render/Sprite\";\nimport { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"../../../core/render/Graphics\";\nimport type { Axis, IAxisDataItem } from \"./Axis\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport { AxisTick } from \"./AxisTick\";\nimport { Grid } from \"./Grid\";\nimport { AxisLabel } from \"./AxisLabel\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { XYChart } from \"../XYChart\";\nimport type { DataItem } from \"../../../core/render/Component\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { IPointerEvent } from \"../../../core/render/backend/Renderer\";\n\nexport interface IAxisRendererSettings extends IGraphicsSettings {\n\n\t/**\n\t * The minimum distance between grid lines in pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Grid_density} for more info\n\t */\n\tminGridDistance?: number;\n\n\t/**\n\t * Set to `true` to invert direction of the axis.\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Inversed_axes} for more info\n\t */\n\tinversed?: boolean;\n\n\t/**\n\t * Indicates relative position where \"usable\" space of the cell starts.\n\t *\n\t * `0` - beginning, `1` - end, or anything in-between.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Cell_start_end_locations} for more info\n\t */\n\tcellStartLocation?: number;\n\n\t/**\n\t * Indicates relative position where \"usable\" space of the cell ends.\n\t *\n\t * `0` - beginning, `1` - end, or anything in-between.\n\t *\n\t * @default 1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Cell_start_end_locations} for more info\n\t */\n\tcellEndLocation?: number;\n\n\t/**\n\t * If set to `\"zoom\"` will enable axis zoom by panning it in the axis label\n\t * area.\n\t *\n\t * Works on [[AxisRendererX]] and [[AxisRendererY]] only.\n\t * \n\t * For a better result, set `maxDeviation` to `1` or so on the Axis.\n\t * \n\t * Will not work if `inside` is set to `true`.\n\t *\n\t * @since 5.0.7\n\t * @default \"none\"\n\t */\n\tpan?: \"none\" | \"zoom\"\n\n}\n\nexport interface IAxisRendererPrivate extends IGraphicsPrivate {\n\t/**\n\t * @ignore\n\t */\n\tletter?: \"X\" | \"Y\";\n}\n\n/**\n * Base class for an axis renderer.\n *\n * Should not be used on its own.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n */\nexport abstract class AxisRenderer extends Graphics {\n\tpublic static className: string = \"AxisRenderer\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([AxisRenderer.className]);\n\n\t// save for quick access\n\tpublic _axisLength: number = 100;\n\tpublic _start: number = 0;\n\tpublic _end: number = 1;\n\tpublic _inversed: boolean = false;\n\n\tprotected _minSize: number = 0;\n\n\t/**\n\t * Chart the renderer is used in.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _lc = 1;\n\n\tprotected _ls = 0;\n\n\tprotected _thumbDownPoint?: IPoint;\n\n\tprotected _downStart?: number;\n\tprotected _downEnd?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeTick(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): AxisTick {\n\t\tconst tick = this.ticks.make();\n\t\ttick._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"tick\", tick);\n\t\ttick.set(\"themeTags\", $utils.mergeTags(tick.get(\"themeTags\"), themeTags));\n\t\tthis.axis.labelsContainer.children.push(tick);\n\t\tthis.ticks.push(tick);\n\t\treturn tick;\n\t}\n\n\t/**\n\t * A list of ticks in the axis.\n\t *\n\t * `ticks.template` can be used to configure ticks.\n\t *\n\t * @default new ListTemplate<AxisTick>\n\t */\n\tpublic readonly ticks: ListTemplate<AxisTick> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => AxisTick._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.ticks.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.ticks.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeGrid(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): Grid {\n\t\tconst grid = this.grid.make();\n\t\tgrid._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"grid\", grid);\n\t\tgrid.set(\"themeTags\", $utils.mergeTags(grid.get(\"themeTags\"), themeTags));\n\n\t\tthis.axis.gridContainer.children.push(grid);\n\t\tthis.grid.push(grid);\n\t\treturn grid;\n\t}\n\n\t/**\n\t * A list of grid elements in the axis.\n\t *\n\t * `grid.template` can be used to configure grid.\n\t *\n\t * @default new ListTemplate<Grid>\n\t */\n\tpublic readonly grid: ListTemplate<Grid> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Grid._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.grid.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.grid.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeAxisFill(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): Grid {\n\t\tconst axisFill = this.axisFills.make();\n\t\taxisFill._setDataItem(dataItem);\n\t\taxisFill.set(\"themeTags\", $utils.mergeTags(axisFill.get(\"themeTags\"), themeTags));\n\n\t\tthis.axis.gridContainer.children.push(axisFill);\n\t\tdataItem.setRaw(\"axisFill\", axisFill);\n\t\tthis.axisFills.push(axisFill);\n\t\treturn axisFill;\n\t}\n\n\t/**\n\t * A list of fills in the axis.\n\t *\n\t * `axisFills.template` can be used to configure axis fills.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly axisFills: ListTemplate<Graphics> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.axisFills.template.get(\"themeTags\", [\"axis\", \"fill\"]), this.get(\"themeTags\", []))\n\t\t}, [this.axisFills.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeLabel(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): AxisLabel {\n\n\t\tconst label = this.labels.make();\n\n\t\tlabel.set(\"themeTags\", $utils.mergeTags(label.get(\"themeTags\"), themeTags));\n\t\tthis.axis.labelsContainer.children.moveValue(label, 0);\n\n\t\tlabel._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"label\", label);\n\t\tthis.labels.push(label);\n\t\treturn label;\n\t}\n\n\t/**\n\t * A list of labels in the axis.\n\t *\n\t * `labels.template` can be used to configure axis labels.\n\t *\n\t * @default new ListTemplate<AxisLabel>\n\t */\n\tpublic readonly labels: ListTemplate<AxisLabel> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => AxisLabel._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.labels.template])\n\t);\n\n\n\tdeclare public _settings: IAxisRendererSettings;\n\tdeclare public _privateSettings: IAxisRendererPrivate;\n\n\t/**\n\t * An [[Axis]] renderer is for.\n\t */\n\tpublic axis!: Axis<this>;\n\n\tpublic axisLength(): number {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic gridCount(): number {\n\t\treturn this.axisLength() / this.get(\"minGridDistance\", 50);\n\t}\n\n\tpublic _updatePositions() {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateLabel(_label?: AxisLabel, _position?: number, _endPosition?: number, _count?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateGrid(_grid?: Grid, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateTick(_grid?: AxisTick, _position?: number, _endPosition?: number, _count?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateFill(_fill?: Graphics, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateBullet(_bullet?: AxisBullet, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract positionToPoint(_position: number): IPoint;\n\n\n\tpublic readonly thumb?: Graphics;\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis.set(\"isMeasured\", false);\n\n\t\tconst thumb = this.thumb;\n\t\tif (thumb) {\n\t\t\tthis._disposers.push(thumb.events.on(\"pointerdown\", (event) => {\n\t\t\t\tthis._handleThumbDown(event.originalEvent);\n\t\t\t}));\n\n\t\t\tthis._disposers.push(thumb.events.on(\"globalpointerup\", (event) => {\n\t\t\t\tthis._handleThumbUp(event.originalEvent);\n\t\t\t}));\n\n\t\t\tthis._disposers.push(thumb.events.on(\"globalpointermove\", (event) => {\n\t\t\t\tthis._handleThumbMove(event.originalEvent);\n\t\t\t}));\n\t\t}\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this.isDirty(\"pan\")) {\n\t\t\tconst thumb = this.thumb;\n\t\t\tif (thumb) {\n\t\t\t\tconst labelsContainer = this.axis.labelsContainer;\n\t\t\t\tconst pan = this.get(\"pan\");\n\t\t\t\tif (pan == \"zoom\") {\n\t\t\t\t\tlabelsContainer.children.push(thumb);\n\t\t\t\t}\n\t\t\t\telse if (pan == \"none\") {\n\t\t\t\t\tlabelsContainer.children.removeValue(thumb);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleThumbDown(event: IPointerEvent) {\n\t\tthis._thumbDownPoint = this.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\n\t\tconst axis = this.axis;\n\t\tthis._downStart = axis.get(\"start\");\n\t\tthis._downEnd = axis.get(\"end\");\n\t}\n\n\tprotected _handleThumbUp(_event: IPointerEvent) {\n\t\tthis._thumbDownPoint = undefined;\n\t}\n\n\tprotected _handleThumbMove(event: IPointerEvent) {\n\t\tconst downPoint = this._thumbDownPoint;\n\t\tif (downPoint) {\n\t\t\tconst point = this.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\n\n\t\t\tconst downStart = this._downStart!;\n\t\t\tconst downEnd = this._downEnd!;\n\t\t\tconst extra = this._getPan(point, downPoint) * Math.min(1, (downEnd - downStart)) / 2;\n\t\t\tthis.axis.setAll({ start: downStart - extra, end: downEnd + extra });\n\t\t}\n\t}\n\n\tprotected _getPan(_point1: IPoint, _point2: IPoint): number {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Converts relative position (0-1) on axis to a pixel coordinate.\n\t *\n\t * @param position  Position (0-1)\n\t * @return Coordinate (px)\n\t */\n\tpublic positionToCoordinate(position: number): number {\n\t\tif (this._inversed) {\n\t\t\treturn (this._end - position) * this._axisLength;\n\t\t}\n\t\telse {\n\t\t\treturn (position - this._start) * this._axisLength;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract positionTooltip(_tooltip: Tooltip, _position: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(_tooltip: Tooltip) { }\n\n\tpublic _updateSize() {\n\t\tthis.markDirty()\n\t\tthis._clear = true;\n\t}\n\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition = position * (end - start);\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number) {\n\t\tif (this.get(\"inversed\")) {\n\t\t\treturn 1 - position;\n\t\t}\n\t\treturn position;\n\t}\n\n\tpublic _updateLC() {\n\n\t}\n\n\tprotected toggleVisibility(sprite: Sprite, position: number, minPosition: number, maxPosition: number): void {\n\t\tlet axis = this.axis;\n\n\t\tconst start = axis.get(\"start\", 0);\n\t\tconst end = axis.get(\"end\", 1);\n\n\t\tlet updatedStart = start + (end - start) * (minPosition - 0.0001);\n\t\tlet updatedEnd = start + (end - start) * (maxPosition + 0.0001);\n\n\t\tif (position < updatedStart || position > updatedEnd) {\n\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t}\n\t\telse {\n\t\t\tsprite.setPrivate(\"visible\", true);\n\t\t}\n\t}\n\n\tprotected _positionTooltip(tooltip: Tooltip, point: IPoint) {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tif (chart.inPlot(point)) {\n\t\t\t\ttooltip.set(\"pointTo\", this._display.toGlobal(point));\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttooltip.hide();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic processAxis() { }\n}\n","import { AxisRenderer, IAxisRendererSettings, IAxisRendererPrivate } from \"./AxisRenderer\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Template } from \"../../../core/util/Template\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\n\nexport interface IAxisRendererXSettings extends IAxisRendererSettings {\n\n\t/**\n\t * If set to `true` the axis will be drawn on the opposite side of the plot\n\t * area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_position} for more info\n\t * @default false\n\t */\n\topposite?: boolean;\n\n\t/**\n\t * If set to `true`, all axis elements (ticks, labels) will be drawn inside\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean;\n}\n\nexport interface IAxisRendererXPrivate extends IAxisRendererPrivate {\n}\n\n/**\n * Used to render horizontal axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n * @important\n */\nexport class AxisRendererX extends AxisRenderer {\n\n\tpublic static className: string = \"AxisRendererX\";\n\tpublic static classNames: Array<string> = AxisRenderer.classNames.concat([AxisRendererX.className]);\n\n\tdeclare public _settings: IAxisRendererXSettings;\n\tdeclare public _privateSettings: IAxisRendererXPrivate;\n\n\tdeclare public readonly labelTemplate: Template<AxisLabel>;\n\n\tpublic thumb: Rectangle = Rectangle.new(this._root, { width: p100, isMeasured:false, themeTags: [\"axis\", \"x\", \"thumb\"] });\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"x\"]);\n\n\t\tsuper._afterNew();\n\t\tthis.setPrivateRaw(\"letter\", \"X\");\n\n\t\tconst gridTemplate = this.grid.template;\n\t\tgridTemplate.set(\"height\", p100);\n\t\tgridTemplate.set(\"width\", 0);\n\t\tgridTemplate.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, graphics.height());\n\t\t});\n\n\t\tthis.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(graphics.width(), 0);\n\t\t});\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tconst axis = this.axis;\n\t\taxis.ghostLabel.setPrivate(\"visible\", !this.get(\"inside\"));\n\n\t\tconst opposite = \"opposite\"\n\t\tconst inside = \"inside\";\n\n\t\tif (this.isDirty(opposite) || this.isDirty(inside)) {\n\t\t\tconst chart = this.chart;\n\t\t\tconst axisChildren = axis.children;\n\n\t\t\tif (this.get(inside)) {\n\t\t\t\taxis.addTag(inside);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxis.removeTag(inside);\t\t\t\t\n\t\t\t}\n\n\t\t\tif (chart) {\n\t\t\t\tif (this.get(opposite)) {\n\t\t\t\t\tconst children = chart.topAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.insertIndex(0, axis);\n\t\t\t\t\t}\n\t\t\t\t\taxis.addTag(opposite);\n\t\t\t\t\taxisChildren.moveValue(this);\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst children = chart.bottomAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis);\n\t\t\t\t\t}\n\t\t\t\t\taxis.removeTag(opposite);\n\n\t\t\t\t\taxisChildren.moveValue(this, 0);\n\n\t\t\t\t}\n\n\t\t\t\taxis.ghostLabel._applyThemes();\n\t\t\t\tthis.labels.each((label) => {\n\t\t\t\t\tlabel._applyThemes();\n\t\t\t\t})\n\t\t\t\tthis.root._markDirtyRedraw();\n\t\t\t}\n\t\t\taxis.markDirtySize();\n\t\t}\n\n\t\tthis.thumb.setPrivate(\"height\", axis.labelsContainer.height());\n\t}\n\n\n\tprotected _getPan(point1: IPoint, point2: IPoint): number {\n\t\treturn (point2.x - point1.x) / this.width();\n\t}\n\n\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition -= this._ls;\n\n\t\tposition = position * (end - start) / this._lc;\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\n\tpublic _updateLC() {\n\t\tconst axis = this.axis;\n\t\tconst parent = axis.parent;\n\t\tif (parent) {\n\t\t\tconst w = parent.innerWidth();\n\t\t\tthis._lc = this.axisLength() / w;\n\t\t\tthis._ls = (axis.x() - parent.get(\"paddingLeft\", 0)) / w;\n\t\t}\n\t}\n\n\tpublic _updatePositions() {\n\t\tconst axis = this.axis;\n\t\taxis.gridContainer.set(\"x\", axis.x() - $utils.relativeToValue(axis.get(\"centerX\", 0), axis.width()) - axis.parent!.get(\"paddingLeft\", 0));\n\t\taxis.bulletsContainer.set(\"y\", this.y());\n\n\t\tconst chart = axis.chart;\n\t\tif (chart) {\n\t\t\tconst plotContainer = chart.plotContainer;\n\t\t\tconst axisHeader = axis.axisHeader;\n\t\t\tlet width = axis.get(\"marginLeft\", 0);\n\n\t\t\tlet x = axis.x() - width;\n\n\t\t\tconst parent = axis.parent;\n\t\t\tif (parent) {\n\t\t\t\tx -= parent.get(\"paddingLeft\", 0);\n\t\t\t}\n\n\t\t\tif (axisHeader.children.length > 0) {\n\t\t\t\twidth = axis.axisHeader.width();\n\t\t\t\taxis.set(\"marginLeft\", width);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxisHeader.set(\"width\", width);\n\t\t\t}\n\t\t\taxisHeader.setAll({ x: x, y: -1, height: plotContainer.height() + 2 });\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis() {\n\t\tsuper.processAxis();\n\t\tconst axis = this.axis;\n\t\taxis.set(\"width\", p100);\n\t\tconst verticalLayout = this._root.verticalLayout;\n\t\taxis.set(\"layout\", verticalLayout);\n\t\taxis.labelsContainer.set(\"width\", p100);\n\t\taxis.axisHeader.setAll({ layout: verticalLayout });\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic axisLength(): number {\n\t\treturn this.axis.width();\n\t}\n\n\t/**\n\t * Converts axis relative position to actual coordinate in pixels.\n\t *\n\t * @param   position  Position\n\t * @return            Point\n\t */\n\tpublic positionToPoint(position: number): IPoint {\n\t\treturn { x: this.positionToCoordinate(position), y: 0 };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTick(tick?: AxisTick, position?: number, endPosition?: number, count?: number) {\n\t\tif (tick) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = tick.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = tick.get(\"location\", location)\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\ttick.set(\"x\", this.positionToCoordinate(position));\n\n\t\t\tlet length = tick.get(\"length\", 0);\n\t\t\tconst inside = tick.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\ttick.set(\"y\", p100);\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttick.set(\"y\", 0);\n\t\t\t\tif (inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\ttick.set(\"draw\", (display) => {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(0, length);\n\t\t\t})\n\n\t\t\tthis.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLabel(label?: AxisLabel, position?: number, endPosition?: number, count?: number) {\n\t\tif (label) {\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = label.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = label.get(\"location\", location)\n\t\t\t}\n\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tconst inside = label.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tconst opposite = this.get(\"opposite\");\n\t\t\tif (opposite) {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t\tlabel.set(\"y\", p100);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t\tlabel.set(\"y\", 0)\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlabel.set(\"y\", undefined);\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"y\", 0)\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tlabel.set(\"x\", this.positionToCoordinate(position));\n\t\t\tthis.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateGrid(grid?: Grid, position?: number, endPosition?: number) {\n\t\tif (grid) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = grid.get(\"location\", 0.5);\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tgrid.set(\"x\", Math.round(this.positionToCoordinate(position)));\n\n\t\t\tthis.toggleVisibility(grid, position, 0, 1);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateBullet(bullet?: AxisBullet, position?: number, endPosition?: number) {\n\t\tif (bullet) {\n\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\t\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\t\tposition = 0;\n\t\t\t\t}\n\n\t\t\t\tlet location = bullet.get(\"location\", 0.5);\n\n\t\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t\t}\n\n\n\t\t\t\tsprite.set(\"x\", this.positionToCoordinate(position));\n\t\t\t\tthis.toggleVisibility(sprite, position, 0, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateFill(fill?: Graphics, position?: number, endPosition?: number) {\n\t\tif (fill) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\t\t\tif (!$type.isNumber(endPosition)) {\n\t\t\t\tendPosition = 1;\n\t\t\t}\n\n\t\t\tlet x0 = this.positionToCoordinate(position);\n\t\t\tlet x1 = this.positionToCoordinate(endPosition);\n\n\t\t\tthis.fillDrawMethod(fill, x0, x1);\n\t\t}\n\t}\n\n\tprotected fillDrawMethod(fill: Graphics, x0: number, x1: number) {\n\t\tfill.set(\"draw\", (display) => {\n\t\t\t//display.drawRect(x0, 0, x1 - x0, this.axis!.gridContainer.height());\n\t\t\t// using for holes, so can not be rectangle\n\t\t\tconst h = this.axis!.gridContainer.height();\n\t\t\tconst w = this.width();\n\n\t\t\tif (x1 < x0) {\n\t\t\t\t[x1, x0] = [x0, x1];\n\t\t\t}\n\t\t\tif (x0 > w || x1 < 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t/*\n\t\t\tconst limit = 10000;\n\n\t\t\tx0 = Math.max(-limit, x0);\n\t\t\tx1 = Math.min(limit, x1);\n\t\t\t*/\n\n\t\t\tdisplay.moveTo(x0, 0);\n\t\t\tdisplay.lineTo(x1, 0);\n\t\t\tdisplay.lineTo(x1, h);\n\t\t\tdisplay.lineTo(x0, h);\n\t\t\tdisplay.lineTo(x0, 0);\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic positionTooltip(tooltip: Tooltip, position: number) {\n\t\tthis._positionTooltip(tooltip, { x: this.positionToCoordinate(position), y: 0 })\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(tooltip: Tooltip) {\n\t\tconst inside = this.get(\"inside\");\n\t\tconst num = 100000;\n\n\t\tlet global = this._display.toGlobal({ x: 0, y: 0 });\n\t\tlet x = global.x;\n\t\tlet y = 0;\n\t\tlet w = this.axisLength();\n\t\tlet h = num;\n\n\t\tlet pointerOrientation: \"up\" | \"down\" = \"up\";\n\n\t\tif (this.get(\"opposite\")) {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"up\";\n\t\t\t\ty = global.y;\n\t\t\t\th = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"down\";\n\t\t\t\ty = global.y - num;\n\t\t\t\th = num;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"down\";\n\t\t\t\ty = global.y - num;\n\t\t\t\th = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"up\";\n\t\t\t\ty = global.y;\n\t\t\t\th = num;\n\t\t\t}\n\t\t}\n\n\t\tconst bounds = { left: x, right: x + w, top: y, bottom: y + h };\n\t\tconst oldBounds = tooltip.get(\"bounds\");\n\n\t\tif (!$utils.sameBounds(bounds, oldBounds)) {\n\t\t\ttooltip.set(\"bounds\", bounds);\n\t\t\ttooltip.set(\"pointerOrientation\", pointerOrientation);\n\t\t}\n\t}\n}\n","import { AxisRenderer, IAxisRendererSettings, IAxisRendererPrivate } from \"./AxisRenderer\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Template } from \"../../../core/util/Template\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\nexport interface IAxisRendererYSettings extends IAxisRendererSettings {\n\n\t/**\n\t * If set to `true` the axis will be drawn on the opposite side of the plot\n\t * area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_position} for more info\n\t * @default false\n\t */\n\topposite?: boolean;\n\n\t/**\n\t * If set to `true`, all axis elements (ticks, labels) will be drawn inside\n\t * plot area.\n\t *\n\t * @default false\n\t */\n\tinside?: boolean;\n}\n\nexport interface IAxisRendererYPrivate extends IAxisRendererPrivate {\n}\n\n/**\n * Used to render vertical axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n * @important\n */\nexport class AxisRendererY extends AxisRenderer {\n\n\tpublic static className: string = \"AxisRendererY\";\n\tpublic static classNames: Array<string> = AxisRenderer.classNames.concat([AxisRendererY.className]);\n\n\tdeclare public _settings: IAxisRendererYSettings;\n\tdeclare public _privateSettings: IAxisRendererYPrivate;\n\n\tdeclare public readonly labelTemplate: Template<AxisLabel>;\n\n\tprotected _downY?: number;\n\n\tpublic thumb: Rectangle = Rectangle.new(this._root, { height: p100, isMeasured: false, themeTags: [\"axis\", \"y\", \"thumb\"] });\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"y\"]);\n\t\tif (this._settings.opposite) {\n\t\t\tthis._settings.themeTags.push(\"opposite\");\n\t\t}\n\n\t\tsuper._afterNew();\n\t\tthis.setPrivateRaw(\"letter\", \"Y\");\n\n\t\tconst gridTemplate = this.grid.template;\n\t\tgridTemplate.set(\"width\", p100);\n\t\tgridTemplate.set(\"height\", 0);\n\t\tgridTemplate.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(graphics.width(), 0);\n\t\t});\n\n\t\tthis.set(\"draw\", (display, renderer) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, renderer.height());\n\t\t});\n\t}\n\n\tprotected _getPan(point1: IPoint, point2: IPoint): number {\n\t\treturn (point1.y - point2.y) / this.height();\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tconst axis = this.axis;\n\t\taxis.ghostLabel.setPrivate(\"visible\", !this.get(\"inside\"));\n\n\t\tconst thumb = this.thumb;\n\t\tconst opposite = \"opposite\";\n\t\tconst inside = \"inside\";\n\n\t\tif (this.isDirty(opposite) || this.isDirty(inside)) {\n\t\t\tconst chart = this.chart;\n\t\t\tconst axisChildren = axis.children;\n\n\t\t\tif (this.get(inside)) {\n\t\t\t\taxis.addTag(inside);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxis.removeTag(inside);\n\t\t\t}\n\n\t\t\tif (chart) {\n\t\t\t\tif (this.get(opposite)) {\n\t\t\t\t\tconst children = chart.rightAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis, 0);\n\t\t\t\t\t}\n\t\t\t\t\taxis.addTag(opposite);\n\t\t\t\t\taxisChildren.moveValue(this, 0);\n\t\t\t\t\tthumb.set(\"centerX\", 0);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst children = chart.leftAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis);\n\t\t\t\t\t}\n\t\t\t\t\taxis.removeTag(opposite);\n\n\t\t\t\t\taxisChildren.moveValue(this);\n\t\t\t\t\tthumb.set(\"centerX\", p100);\n\t\t\t\t}\n\n\t\t\t\taxis.ghostLabel._applyThemes();\n\t\t\t\tthis.labels.each((label) => {\n\t\t\t\t\tlabel._applyThemes();\n\t\t\t\t})\n\t\t\t\tthis.root._markDirtyRedraw();\n\t\t\t}\n\t\t\taxis.markDirtySize();\n\t\t}\n\t\tthumb.setPrivate(\"width\", axis.labelsContainer.width());\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis() {\n\t\tsuper.processAxis();\n\t\tconst axis = this.axis;\n\t\tif (axis.get(\"height\") == null) {\n\t\t\taxis.set(\"height\", p100);\n\t\t}\n\t\tconst horizontalLayout = this._root.horizontalLayout;\n\t\taxis.set(\"layout\", horizontalLayout);\n\t\taxis.labelsContainer.set(\"height\", p100);\n\t\taxis.axisHeader.set(\"layout\", horizontalLayout);\n\t}\n\n\tpublic _updatePositions() {\n\t\tconst axis = this.axis;\n\t\taxis.gridContainer.set(\"y\", axis.y() - $utils.relativeToValue(axis.get(\"centerY\", 0), axis.height()));\n\t\taxis.bulletsContainer.set(\"x\", this.x());\n\n\t\tconst chart = axis.chart;\n\t\tif (chart) {\n\t\t\tconst plotContainer = chart.plotContainer;\n\t\t\tconst axisHeader = axis.axisHeader;\n\t\t\tlet height = axis.get(\"marginTop\", 0);\n\n\t\t\tif (axisHeader.children.length > 0) {\n\t\t\t\theight = axis.axisHeader.height();\n\t\t\t\taxis.set(\"marginTop\", height);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxisHeader.set(\"height\", height);\n\t\t\t}\n\t\t\taxisHeader.setAll({ y: axis.y() - height, x: -1, width: plotContainer.width() + 2 });\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic axisLength(): number {\n\t\treturn this.axis.innerHeight();\n\t}\n\n\t/**\n\t * Converts axis relative position to actual coordinate in pixels.\n\t *\n\t * @param   position  Position\n\t * @return            Point\n\t */\n\tpublic positionToPoint(position: number): IPoint {\n\t\treturn { x: 0, y: this.positionToCoordinate(position) };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLabel(label?: AxisLabel, position?: number, endPosition?: number, count?: number) {\n\t\tif (label) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = label.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = label.get(\"location\", location)\n\t\t\t}\n\n\t\t\tconst opposite = this.get(\"opposite\");\n\t\t\tconst inside = label.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (opposite) {\n\t\t\t\tlabel.set(\"x\", 0);\n\n\t\t\t\tif (inside) {\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (inside) {\n\t\t\t\t\tlabel.set(\"x\", 0);\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"x\", undefined);\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tlabel.set(\"y\", this.positionToCoordinate(position));\n\t\t\tthis.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateGrid(grid?: Grid, position?: number, endPosition?: number) {\n\t\tif (grid) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = grid.get(\"location\", 0.5);\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tlet y = this.positionToCoordinate(position);\n\n\t\t\tgrid.set(\"y\", y);\n\n\t\t\tthis.toggleVisibility(grid, position, 0, 1);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTick(tick?: AxisTick, position?: number, endPosition?: number, count?: number) {\n\t\tif (tick) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = tick.get(\"multiLocation\", location);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = tick.get(\"location\", location);\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\ttick.set(\"y\", this.positionToCoordinate(position));\n\n\t\t\tlet length = tick.get(\"length\", 0);\n\t\t\tconst inside = tick.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\ttick.set(\"x\", 0);\n\t\t\t\tif (inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\ttick.set(\"draw\", (display) => {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(length, 0);\n\t\t\t})\n\n\t\t\tthis.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateBullet(bullet?: AxisBullet, position?: number, endPosition?: number) {\n\t\tif (bullet) {\n\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\n\t\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\t\tposition = 0;\n\t\t\t\t}\n\n\t\t\t\tlet location = bullet.get(\"location\", 0.5);\n\t\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t\t}\n\n\t\t\t\tsprite.set(\"y\", this.positionToCoordinate(position));\n\n\t\t\t\tthis.toggleVisibility(sprite, position, 0, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateFill(fill?: Graphics, position?: number, endPosition?: number) {\n\t\tif (fill) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\t\t\tif (!$type.isNumber(endPosition)) {\n\t\t\t\tendPosition = 1;\n\t\t\t}\n\n\t\t\tlet y0 = this.positionToCoordinate(position);\n\t\t\tlet y1 = this.positionToCoordinate(endPosition);\n\n\t\t\tthis.fillDrawMethod(fill, y0, y1);\n\t\t}\n\t}\n\n\tprotected fillDrawMethod(fill: Graphics, y0: number, y1: number) {\n\t\tfill.set(\"draw\", (display) => {\n\t\t\t// using for holes, so can not be rectangle\n\t\t\tconst w = this.axis!.gridContainer.width();\n\t\t\tconst h = this.height();\n\n\t\t\tif (y1 < y0) {\n\t\t\t\t[y1, y0] = [y0, y1];\n\t\t\t}\n\n\t\t\tif (y0 > h || y1 < 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//y0 = Math.max(0, y0);\n\t\t\t//y1 = Math.min(h, y1);\n\n\t\t\tdisplay.moveTo(0, y0);\n\t\t\tdisplay.lineTo(w, y0);\n\t\t\tdisplay.lineTo(w, y1);\n\t\t\tdisplay.lineTo(0, y1);\n\t\t\tdisplay.lineTo(0, y0);\n\t\t})\n\t}\n\n\t/**\n\t * Converts relative position (0-1) on axis to a pixel coordinate.\n\t *\n\t * @param position  Position (0-1)\n\t * @return Coordinate (px)\n\t */\n\tpublic positionToCoordinate(position: number): number {\n\t\tif (!this._inversed) {\n\t\t\treturn (this._end - position) * this._axisLength;\n\t\t}\n\t\telse {\n\t\t\treturn (position - this._start) * this._axisLength;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic positionTooltip(tooltip: Tooltip, position: number) {\n\t\tthis._positionTooltip(tooltip, { x: 0, y: this.positionToCoordinate(position) });\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(tooltip: Tooltip) {\n\t\tconst inside = this.get(\"inside\");\n\t\tconst num = 100000;\n\n\t\tlet global = this._display.toGlobal({ x: 0, y: 0 });\n\t\tlet y = global.y;\n\t\tlet x = 0;\n\t\tlet h = this.axisLength();\n\t\tlet w = num;\n\n\t\tlet pointerOrientation: \"left\" | \"right\" = \"right\";\n\n\t\tif (this.get(\"opposite\")) {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"right\";\n\t\t\t\tx = global.x - num;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"left\";\n\t\t\t\tx = global.x;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"left\";\n\t\t\t\tx = global.x;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"right\";\n\t\t\t\tx = global.x - num;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t}\n\n\t\tconst bounds = { left: x, right: x + w, top: y, bottom: y + h };\n\t\tconst oldBounds = tooltip.get(\"bounds\");\n\n\t\tif (!$utils.sameBounds(bounds, oldBounds)) {\n\t\t\ttooltip.set(\"bounds\", bounds);\n\t\t\ttooltip.set(\"pointerOrientation\", pointerOrientation);\n\t\t}\n\t}\n\n\tpublic _updateLC() {\n\t\tconst axis = this.axis;\n\t\tconst parent = axis.parent;\n\t\tif (parent) {\n\t\t\tconst h = parent.innerHeight();\n\t\t\tthis._lc = this.axisLength() / h;\n\t\t\tthis._ls = axis.y() / h;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition -= this._ls;\n\n\t\tposition = position * (end - start) / this._lc;\n\n\t\tif (this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number) {\n\t\tif (!this.get(\"inversed\")) {\n\t\t\treturn 1 - position;\n\t\t}\n\t\treturn position;\n\t}\n\n}\n","import type { IPoint } from \"../../../core/util/IPoint\";\n\nimport { Tick, ITickSettings, ITickPrivate } from \"../../../core/render/Tick\";\n\n\nexport interface IAxisTickSettings extends ITickSettings {\n\n\t/**\n\t * Relative location of the tick within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the tick within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the tick will be shown inside plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the tick can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that tick will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the tick can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that tick will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t * @default 1\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisTickPrivate extends ITickPrivate {\n}\n\n/**\n * Draws an axis tick.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Ticks} for more info\n * @important\n */\nexport class AxisTick extends Tick {\n\n\tdeclare public _settings: IAxisTickSettings;\n\tdeclare public _privateSettings: IAxisTickPrivate;\n\n\tprotected _tickPoints: Array<IPoint> = [];\n\n\tpublic static className: string = \"AxisTick\";\n\tpublic static classNames: Array<string> = Tick.classNames.concat([AxisTick.className]);\n}\n","import { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport type { XYSeries, IXYSeriesDataItem } from \"../series/XYSeries\";\nimport { ValueAxis, IValueAxisSettings, IValueAxisPrivate, IValueAxisDataItem, IMinMaxStep, IValueAxisEvents } from \"./ValueAxis\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $order from \"../../../core/util/Order\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $object from \"../../../core/util/Object\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport * as $time from \"../../../core/util/Time\";\nimport type { ITimeInterval } from \"../../../core/util/Time\";\n\nexport interface IDateAxisSettings<R extends AxisRenderer> extends IValueAxisSettings<R> {\n\n\t/**\n\t * Indicates granularity of data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Data_granularity} for more info\n\t */\n\tbaseInterval: ITimeInterval;\n\n\t/**\n\t * Relative location of where axis cell starts: 0 - beginning, 1 - end.\n\t *\n\t * @default 0\n\t */\n\tstartLocation?: number;\n\n\t/**\n\t * Relative location of where axis cell ends: 0 - beginning, 1 - end.\n\t *\n\t * @default 1\n\t */\n\tendLocation?: number;\n\n\t/**\n\t * Should axis group data items togeter dynamically?\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupData?: boolean;\n\n\t/**\n\t * Maximum number of data items in the view before data grouping kicks in.\n\t *\n\t * @default 500\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupCount?: number;\n\n\t/**\n\t * Force data item grouping to specific interval.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupInterval?: ITimeInterval;\n\n\t/**\n\t * A list of intervals the axis is allowed to group data items into.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupIntervals?: Array<ITimeInterval>;\n\n\t/**\n\t * A list of intervals the axis is allowed to show grid/labels on.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Grid_granularity} for more info\n\t */\n\tgridIntervals?: Array<ITimeInterval>;\n\n\t/**\n\t * Display \"period change\" labels using different format.\n\t *\n\t * If set to `true`, will use `periodChangeDateFormats` instead\n\t * of `dateFormats` for such labels, e.g. for month start.\n\t *\n\t * @default true\n\t */\n\tmarkUnitChange?: boolean;\n\n\t/**\n\t * Date formats used for intermediate labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tdateFormats?: { [index: string]: string | Intl.DateTimeFormatOptions };\n\n\t/**\n\t * Date formats used for \"period change\" labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tperiodChangeDateFormats?: { [index: string]: string | Intl.DateTimeFormatOptions };\n\n\t/**\n\t * A date format to use for axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Axis_tooltip} for more info\n\t */\n\ttooltipDateFormat?: string | Intl.DateTimeFormatOptions;\n\n\t/**\n\t * Time unit-specific formats to use for axis tooltip.\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Axis_tooltip} for more info\n\t * @since 5.1.4\n\t */\n\ttooltipDateFormats?: { [index: string]: string | Intl.DateTimeFormatOptions };\n\n\t/**\n\t * A value which indicates relative position within axis cell to get timestamp\n\t * for the tooltip from.\n\t *\n\t * Values are from `0` (zero) to `1` (one), meaning start and end of the cell.\n\t *\n\t * If not set, it will use cell's start tiemstamp.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Axis_tooltip} for more info\n\t * @since 5.1.4\n\t */\n\ttooltipIntervalOffset?: number;\n\n}\n\nexport interface IDateAxisDataItem extends IValueAxisDataItem {\n}\n\nexport interface IDateAxisPrivate extends IValueAxisPrivate {\n\n\t/**\n\t * Current group interval.\n\t */\n\tgroupInterval?: ITimeInterval;\n\n\t/**\n\t * Current base interval.\n\t */\n\tbaseInterval: ITimeInterval;\n\n\t/**\n\t * Current grid interval.\n\t */\n\tgridInterval: ITimeInterval;\n}\n\nexport interface IDateAxisEvents extends IValueAxisEvents {\n}\n\n/**\n * Creates a date axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/} for more info\n * @important\n */\nexport class DateAxis<R extends AxisRenderer> extends ValueAxis<R> {\n\tpublic static className: string = \"DateAxis\";\n\tpublic static classNames: Array<string> = ValueAxis.classNames.concat([DateAxis.className]);\n\n\tdeclare public _settings: IDateAxisSettings<R>;\n\tdeclare public _privateSettings: IDateAxisPrivate;\n\tdeclare public _dataItemSettings: IDateAxisDataItem;\n\tdeclare public _events: IDateAxisEvents;\n\n\tprotected _dataGrouped: boolean = false;\n\tprotected _seriesDataGrouped: boolean = false;\n\tprotected _groupingCalculated: boolean = false;\n\tprotected _intervalDuration: number = 1;\n\tprotected _baseDuration: number = 1;\n\n\tprotected _intervalMax: { [index: string]: number } = {};\n\tprotected _intervalMin: { [index: string]: number } = {};\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tsuper._afterNew();\n\t\tthis._setBaseInterval(this.get(\"baseInterval\"));\n\t\tthis.on(\"baseInterval\", () => {\n\t\t\tthis._setBaseInterval(this.get(\"baseInterval\"));\n\t\t})\n\t}\n\n\tprotected _setBaseInterval(interval: ITimeInterval) {\n\t\tthis.setPrivateRaw(\"baseInterval\", interval);\n\t\tthis._baseDuration = $time.getIntervalDuration(interval);\n\t}\n\n\tprotected _fixZoomFactor() {\n\t\tthis.setPrivateRaw(\"maxZoomFactor\", Math.round((this.getPrivate(\"max\", 0) - this.getPrivate(\"min\", 0)) / this.baseMainDuration()));\n\t}\n\n\tprotected _groupData() {\n\t\tconst min = this.getPrivate(\"min\");\n\t\tconst max = this.getPrivate(\"max\");\n\n\t\tif (($type.isNumber(min) && $type.isNumber(max))) {\n\n\t\t\tthis._fixZoomFactor();\n\n\t\t\tconst groupInterval = this.getPrivate(\"groupInterval\")!;\n\t\t\tif (groupInterval) {\n\t\t\t\tthis._setBaseInterval(groupInterval);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._setBaseInterval(this.get(\"baseInterval\"));\n\t\t\t}\n\n\n\t\t\tif (this.isDirty(\"groupInterval\")) {\n\t\t\t\tlet groupInterval = this.get(\"groupInterval\")!;\n\t\t\t\tif (groupInterval) {\n\t\t\t\t\tthis.setRaw(\"groupIntervals\", [groupInterval]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.isDirty(\"groupData\")) {\n\t\t\t\tif (!this._dataGrouped) {\n\t\t\t\t\tif (this.get(\"groupData\")) {\n\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\tthis._groupSeriesData(series);\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tthis._handleRangeChange();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet baseInterval = this.get(\"baseInterval\");\n\t\t\t\t\t\tlet mainDataSetId: string = baseInterval.timeUnit + baseInterval.count;\n\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\tseries.setDataSet(mainDataSetId);\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tthis._setBaseInterval(baseInterval);\n\t\t\t\t\t\tthis.setPrivateRaw(\"groupInterval\", undefined);\n\t\t\t\t\t\tthis.markDirtyExtremes();\n\t\t\t\t\t}\n\t\t\t\t\tthis._dataGrouped = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic _groupSeriesData(series: XYSeries) {\n\t\tif (this.get(\"groupData\") && !series.get(\"groupDataDisabled\")) {\n\n\t\t\tthis._seriesDataGrouped = true;\n\n\t\t\t// make array of intervals which will be used;\n\t\t\tlet intervals: ITimeInterval[] = [];\n\t\t\tlet baseDuration = this.baseMainDuration();\n\n\t\t\tlet groupIntervals = this.get(\"groupIntervals\")!;\n\t\t\tif (groupIntervals) { }\n\t\t\t$array.each(groupIntervals, (interval) => {\n\t\t\t\tlet intervalDuration = $time.getIntervalDuration(interval);\n\t\t\t\tif (intervalDuration > baseDuration) {\n\t\t\t\t\tintervals.push(interval);\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tseries._dataSets = {};\n\n\t\t\tconst key = this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!;\n\t\t\tlet fields: Array<string>;\n\n\t\t\tconst baseAxis = series.get(\"baseAxis\");\n\n\t\t\tif (series.get(\"xAxis\") === baseAxis) {\n\t\t\t\tfields = series._valueYFields;\n\t\t\t}\n\t\t\telse if (series.get(\"yAxis\") === baseAxis) {\n\t\t\t\tfields = series._valueXFields;\n\t\t\t}\n\n\t\t\tlet dataItems = series._mainDataItems;\n\t\t\tlet baseInterval = this.get(\"baseInterval\");\n\t\t\tlet mainDataSetId: string = baseInterval.timeUnit + baseInterval.count;\n\n\t\t\tseries._dataSets[mainDataSetId] = dataItems;\n\n\t\t\tconst groupCallback = series.get(\"groupDataCallback\");\n\t\t\tlet groupOriginals = series.get(\"groupDataWithOriginals\", false);\n\t\t\tif (groupCallback) {\n\t\t\t\tgroupOriginals = true;\n\t\t\t}\n\n\t\t\t$array.each(intervals, (interval) => {\n\n\t\t\t\tlet previousTime = -Infinity;\n\t\t\t\tlet dataSetId = interval.timeUnit + interval.count;\n\t\t\t\tseries._dataSets[dataSetId] = [];\n\n\t\t\t\tlet newDataItem: DataItem<IXYSeriesDataItem>;\n\n\t\t\t\tlet sum: { [index: string]: number } = {};\n\t\t\t\tlet count: { [index: string]: number } = {};\n\n\t\t\t\tlet groupFieldValues: { [index: string]: string } = {};\n\t\t\t\tlet workingFields: { [index: string]: string } = {};\n\n\t\t\t\t$array.each(fields, (field) => {\n\t\t\t\t\tsum[field] = 0;\n\t\t\t\t\tcount[field] = 0;\n\t\t\t\t\tgroupFieldValues[field] = series.get((field + \"Grouped\") as any);\n\t\t\t\t\tworkingFields[field] = field + \"Working\";\n\t\t\t\t})\n\n\t\t\t\tlet intervalDuration = $time.getDuration(interval.timeUnit);\n\n\t\t\t\tlet firstItem = dataItems[0];\n\t\t\t\tlet firstDate: Date;\n\t\t\t\tif (firstItem) {\n\t\t\t\t\tfirstDate = new Date(dataItems[0].get(key as any));\n\t\t\t\t}\n\n\t\t\t\tlet prevNewDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\n\t\t\t\t$array.each(dataItems, (dataItem) => {\n\t\t\t\t\tlet time = dataItem.get(key as any);\n\t\t\t\t\tlet roundedTime = $time.round(new Date(time), interval.timeUnit, interval.count, this._root.locale.firstDayOfWeek, this._root.utc, firstDate, this._root.timezone).getTime();\n\t\t\t\t\tlet dataContext: any;\n\n\t\t\t\t\tif (previousTime < roundedTime - intervalDuration / 24) {\n\t\t\t\t\t\tdataContext = $object.copy(dataItem.dataContext);\n\n\t\t\t\t\t\tnewDataItem = new DataItem(series, dataContext, series._makeDataItem(dataContext));\n\t\t\t\t\t\tnewDataItem.setRaw(key as any, roundedTime);\n\n\t\t\t\t\t\tseries._dataSets[dataSetId].push(newDataItem);\n\n\t\t\t\t\t\t$array.each(fields, (field) => {\n\t\t\t\t\t\t\tlet value = dataItem.get(field as any);\n\t\t\t\t\t\t\tif ($type.isNumber(value)) {\n\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\tnewDataItem.setRaw(workingFields[field] as any, value);\n\t\t\t\t\t\t\t\tcount[field]++;\n\t\t\t\t\t\t\t\tsum[field] += value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tif (groupOriginals) {\n\t\t\t\t\t\t\tnewDataItem.set(\"originals\", [dataItem]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (groupCallback && prevNewDataItem) {\n\t\t\t\t\t\t\tgroupCallback(prevNewDataItem, interval);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tprevNewDataItem = newDataItem;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t$array.each(fields, (field) => {\n\t\t\t\t\t\t\tlet groupKey = groupFieldValues[field];\n\t\t\t\t\t\t\tlet value = dataItem.get(field as any);\n\n\t\t\t\t\t\t\tif (value !== undefined) {\n\n\t\t\t\t\t\t\t\tlet currentValue = newDataItem.get(field as any);\n\n\t\t\t\t\t\t\t\tswitch (groupKey) {\n\t\t\t\t\t\t\t\t\tcase \"close\":\n\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"sum\":\n\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, currentValue + value);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"open\":\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"low\":\n\t\t\t\t\t\t\t\t\t\tif (value < currentValue) {\n\t\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"high\":\n\t\t\t\t\t\t\t\t\t\tif (value > currentValue) {\n\t\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"average\":\n\t\t\t\t\t\t\t\t\t\tcount[field]++;\n\t\t\t\t\t\t\t\t\t\tsum[field] += value;\n\t\t\t\t\t\t\t\t\t\tlet average = sum[field] / count[field];\n\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, average);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"extreme\":\n\t\t\t\t\t\t\t\t\t\tif (Math.abs(value) > Math.abs(currentValue)) {\n\t\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tnewDataItem.setRaw(workingFields[field] as any, newDataItem.get(field as any));\n\t\t\t\t\t\t\t\tlet dataContext: any = $object.copy(dataItem.dataContext);\n\t\t\t\t\t\t\t\tdataContext[key as any] = roundedTime;\n\t\t\t\t\t\t\t\tnewDataItem.dataContext = dataContext;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tif (groupOriginals) {\n\t\t\t\t\t\t\tnewDataItem.get(\"originals\")!.push(dataItem);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpreviousTime = roundedTime;\n\t\t\t\t})\n\n\t\t\t\tif (groupCallback && prevNewDataItem) {\n\t\t\t\t\tgroupCallback(prevNewDataItem, interval);\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (series._dataSetId) {\n\t\t\t\tseries.setDataSet(series._dataSetId);\n\t\t\t}\n\t\t\tthis.markDirtySize();\n\t\t}\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._groupingCalculated = false;\n\t\tthis._dataGrouped = false;\n\t}\n\n\t/**\n\t * Returns a time interval axis would group data to for a specified duration.\n\t *\n\t * @since 5.2.1\n\t */\n\tpublic getGroupInterval(duration: number): ITimeInterval {\n\t\tlet baseInterval = this.get(\"baseInterval\");\n\t\tlet groupInterval = $time.chooseInterval(0, duration, this.get(\"groupCount\", Infinity), this.get(\"groupIntervals\")!);\n\t\tif ($time.getIntervalDuration(groupInterval) < $time.getIntervalDuration(baseInterval)) {\n\t\t\tgroupInterval = { ...baseInterval };\n\t\t}\n\t\treturn groupInterval;\n\t}\n\n\t/**\n\t * Return `max` of a specified time interval.\n\t * \n\t * Will work only if the axis was grouped to this interval at least once.\n\t * \n\t * @since 5.2.1\n\t * @param   interval  Interval\n\t * @return            Max\n\t */\n\tpublic getIntervalMax(interval: ITimeInterval): number {\n\t\treturn this._intervalMax[interval.timeUnit + interval.count];\n\t}\n\n\t/**\n\t * Return `min` of a specified time interval.\n\t * \n\t * Will work only if the axis was grouped to this interval at least once.\n\t * \n\t * @since 5.2.1\n\t * @param   interval  Interval\n\t * @return            Max\n\t */\n\tpublic getIntervalMin(interval: ITimeInterval): number {\n\t\treturn this._intervalMin[interval.timeUnit + interval.count];\n\t}\n\n\tprotected _handleRangeChange() {\n\t\tsuper._handleRangeChange();\n\n\t\tconst selectionMin = this.getPrivate(\"selectionMin\");\n\t\tconst selectionMax = this.getPrivate(\"selectionMax\");\n\n\t\tif ($type.isNumber(selectionMin) && $type.isNumber(selectionMax)) {\n\n\t\t\tif (this.get(\"groupData\") && !this._groupingCalculated) {\n\t\t\t\tthis._groupingCalculated = true;\n\n\t\t\t\tlet modifiedDifference = (selectionMax - selectionMin) + (this.get(\"startLocation\", 0) + (1 - this.get(\"endLocation\", 1)) * this.baseDuration());\n\t\t\t\tlet groupInterval = this.get(\"groupInterval\");\n\n\t\t\t\tif (!groupInterval) {\n\t\t\t\t\tgroupInterval = this.getGroupInterval(modifiedDifference);\n\t\t\t\t}\n\n\t\t\t\tlet current = this.getPrivate(\"groupInterval\");\n\n\t\t\t\tif (groupInterval && (!current || (current.timeUnit !== groupInterval.timeUnit || current.count !== groupInterval.count) || this._seriesDataGrouped)) {\n\t\t\t\t\tthis._seriesDataGrouped = false;\n\t\t\t\t\tthis.setPrivateRaw(\"groupInterval\", groupInterval);\n\t\t\t\t\tthis._setBaseInterval(groupInterval)\n\n\t\t\t\t\tif (groupInterval) {\n\t\t\t\t\t\tlet newId = groupInterval.timeUnit + groupInterval.count;\n\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\t\t\t\tseries.setDataSet(newId);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\tthis.markDirtyExtremes();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\n\t\t\t\t\tconst start = $array.getSortedIndex(series.dataItems, (dataItem) => {\n\t\t\t\t\t\treturn $order.compare(dataItem.get(fieldName), selectionMin);\n\t\t\t\t\t});\n\n\t\t\t\t\tlet startIndex = start.index;\n\n\t\t\t\t\tif (startIndex > 0) {\n\t\t\t\t\t\tstartIndex -= 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst end = $array.getSortedIndex(series.dataItems, (dataItem) => {\n\t\t\t\t\t\treturn $order.compare(dataItem.get(fieldName), selectionMax);\n\t\t\t\t\t});\n\t\t\t\t\tlet endIndex = end.index;\n\n\t\t\t\t\tlet endIndex2 = endIndex;\n\t\t\t\t\tif (endIndex2 > 0) {\n\t\t\t\t\t\tendIndex2--;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst firstDataItem = series.dataItems[startIndex];\n\t\t\t\t\tconst lastDataItem = series.dataItems[endIndex2];\n\n\t\t\t\t\tlet lastDate: number | undefined;\n\t\t\t\t\tlet firstDate: number | undefined;\n\t\t\t\t\tif (firstDataItem) {\n\t\t\t\t\t\tfirstDate = firstDataItem.get(fieldName);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (lastDataItem) {\n\t\t\t\t\t\tlastDate = lastDataItem.get(fieldName);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet outOfSelection = false;\n\t\t\t\t\tif (lastDate != null && firstDate != null) {\n\t\t\t\t\t\tif (lastDate < selectionMin || firstDate > selectionMax) {\n\t\t\t\t\t\t\toutOfSelection = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tseries.setPrivate(\"outOfSelection\", outOfSelection);\n\t\t\t\t\tseries.setPrivate(\"startIndex\", startIndex);\n\t\t\t\t\tseries.setPrivate(\"endIndex\", endIndex);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, _strictMode?: boolean): IMinMaxStep {\n\t\treturn { min: min, max: max, step: (max - min) / gridCount };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic intervalDuration(): number {\n\t\treturn this._intervalDuration;\n\t}\n\n\tprotected _saveMinMax(min: number, max: number) {\n\t\tlet groupInterval = this.getPrivate(\"groupInterval\");\n\n\t\tif (!groupInterval) {\n\t\t\tgroupInterval = this.get(\"baseInterval\");\n\t\t}\n\n\t\tlet id = groupInterval.timeUnit + groupInterval.count;\n\t\tthis._intervalMin[id] = min;\n\t\tthis._intervalMax[id] = max;\n\t}\n\n\tprotected _prepareAxisItems() {\n\t\tconst min = this.getPrivate(\"min\");\n\t\tconst max = this.getPrivate(\"max\");\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\t\t\tconst selectionMin = this.getPrivate(\"selectionMin\")! as number;\n\t\t\tconst selectionMax = this.getPrivate(\"selectionMax\")! as number;\n\t\t\tconst renderer = this.get(\"renderer\");\n\t\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\n\t\t\tlet value = selectionMin;\n\t\t\tlet i = 0;\n\n\t\t\tconst intervals = this.get(\"gridIntervals\")!;\n\t\t\tlet gridInterval = $time.chooseInterval(0, selectionMax - selectionMin, renderer.gridCount(), intervals);\n\n\t\t\tif ($time.getIntervalDuration(gridInterval) < this.baseDuration()) {\n\t\t\t\tgridInterval = { ...baseInterval };\n\t\t\t}\n\n\t\t\tconst intervalDuration = $time.getIntervalDuration(gridInterval);\n\t\t\tthis._intervalDuration = intervalDuration;\n\n\t\t\tconst nextGridUnit = $time.getNextUnit(gridInterval.timeUnit);\n\n\t\t\tvalue = $time.round(new Date(selectionMin - intervalDuration), gridInterval.timeUnit, gridInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, new Date(min), this._root.timezone).getTime();\n\t\t\tlet previousValue = value - intervalDuration;\n\t\t\tlet format: string | Intl.DateTimeFormatOptions;\n\t\t\tconst formats = this.get(\"dateFormats\")!;\n\n\t\t\tthis.setPrivateRaw(\"gridInterval\", gridInterval);\n\n\t\t\twhile (value < selectionMax + intervalDuration) {\n\t\t\t\tlet dataItem: DataItem<this[\"_dataItemSettings\"]>;\n\t\t\t\tif (this.dataItems.length < i + 1) {\n\t\t\t\t\tdataItem = new DataItem(this, undefined, {});\n\t\t\t\t\tthis._dataItems.push(dataItem);\n\t\t\t\t\tthis.processDataItem(dataItem);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdataItem = this.dataItems[i];\n\t\t\t\t}\n\n\t\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\t\tif (dataItem.isHidden()) {\n\t\t\t\t\tdataItem.show();\n\t\t\t\t}\n\n\t\t\t\tdataItem.setRaw(\"value\", value);\n\t\t\t\tdataItem.setRaw(\"endValue\", $time.add(new Date(value), gridInterval.timeUnit, gridInterval.count, this._root.utc).getTime()) //$time.round(new Date(value + intervalDuration * 1.1), gridInterval.timeUnit, gridInterval.count).getTime());\n\n\t\t\t\tlet date = new Date(value);\n\n\t\t\t\tformat = formats[gridInterval.timeUnit];\n\t\t\t\tif (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\n\t\t\t\t\tif (gridInterval.timeUnit != \"year\") {\n\t\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, this._root.utc, this._root.timezone)) {\n\t\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![gridInterval.timeUnit];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", this._root.dateFormatter.format(date, format!));\n\t\t\t\t}\n\n\t\t\t\tthis._prepareDataItem(dataItem, gridInterval.count);\n\n\t\t\t\tpreviousValue = value;\n\n\t\t\t\tvalue = $time.add(new Date(value), gridInterval.timeUnit, gridInterval.count, this._root.utc).getTime();\n\n\t\t\t\ti++;\n\t\t\t}\n\n\t\t\tfor (let j = i; j < this.dataItems.length; j++) {\n\t\t\t\tthis.dataItems[j].hide();\n\t\t\t}\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.inited) {\n\t\t\t\t\tseries._markDirtyAxes();\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tthis._updateGhost();\n\t}\n\n\tprotected _fixMin(min: number) {\n\t\tlet baseInterval = this.getPrivate(\"baseInterval\");\n\t\tlet startTime = $time.round(new Date(min), baseInterval.timeUnit, baseInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\n\t\tlet endTime = $time.add(new Date(startTime), baseInterval.timeUnit, baseInterval.count, this._root.utc).getTime();\n\n\t\treturn startTime + (endTime - startTime) * this.get(\"startLocation\", 0);\n\t}\n\t/* goes up to the year\n\tprotected _getFormat(timeUnit: TimeUnit, value: number, previousValue: number) {\n\t\tconst formats = this.get(\"dateFormats\")!;\n\t\tlet format = formats[timeUnit];\n\n\t\tif (this.get(\"markUnitChange\")) {\n\t\t\tlet nextGridUnit = $time.getNextUnit(timeUnit);\n\n\t\t\twhile (nextGridUnit != undefined) {\n\n\t\t\t\tif (nextGridUnit) {\n\t\t\t\t\tif (timeUnit != \"year\") {\n\t\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, this._root.utc, this._root.timezone)) {\n\t\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![timeUnit];\n\t\t\t\t\t\t\ttimeUnit = nextGridUnit;\n\t\t\t\t\t\t\tnextGridUnit = $time.getNextUnit(nextGridUnit);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tnextGridUnit = undefined;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tnextGridUnit = undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn format;\n\t}\n\t*/\n\tprotected _fixMax(max: number) {\n\t\tlet baseInterval = this.getPrivate(\"baseInterval\");\n\t\tlet startTime = $time.round(new Date(max), baseInterval.timeUnit, baseInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\n\t\tlet endTime = $time.add(new Date(startTime), baseInterval.timeUnit, baseInterval.count, this._root.utc).getTime();\n\n\t\treturn startTime + (endTime - startTime) * this.get(\"endLocation\", 1);\n\t}\n\n\tprotected _updateDates(_date: number) {\n\n\t}\n\n\t/**\n\t * Returns a duration of currently active `baseInterval` in milliseconds.\n\t * \n\t * @return Duration\n\t */\n\tpublic baseDuration(): number {\n\t\treturn this._baseDuration;\n\t\t//return $time.getIntervalDuration(this.getPrivate(\"baseInterval\"));\n\t}\n\n\t/**\n\t * Returns a duration of user-defined `baseInterval` in milliseconds.\n\t *\n\t * @return Duration\n\t */\n\tpublic baseMainDuration(): number {\n\t\treturn $time.getIntervalDuration(this.get(\"baseInterval\"));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processSeriesDataItem(dataItem: DataItem<IXYSeriesDataItem>, fields: Array<string>) {\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\n\t\tdataItem.open = {};\n\t\tdataItem.close = {};\n\n\t\t$array.each(fields, (field) => {\n\t\t\tlet value = dataItem.get(field as any);\n\t\t\tif ($type.isNumber(value)) {\n\t\t\t\tlet startTime = $time.round(new Date(value), baseInterval.timeUnit, baseInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\n\t\t\t\tlet endTime = $time.add(new Date(startTime), baseInterval.timeUnit, baseInterval.count, this._root.utc).getTime();\n\t\t\t\tdataItem.open![field] = startTime;\n\t\t\t\tdataItem.close![field] = endTime;\n\n\t\t\t\tthis._updateDates(startTime);\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\n\t\tlet openValue;\n\t\tlet closeValue;\n\n\t\tif (dataItem.open && dataItem.close) {\n\t\t\topenValue = dataItem.open[field];\n\t\t\tcloseValue = dataItem.close[field];\n\t\t}\n\t\telse {\n\t\t\topenValue = dataItem.get(field as any)\n\t\t\tcloseValue = openValue;\n\t\t}\n\n\t\tlet value = openValue + (closeValue - openValue) * cellLocation;\n\n\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\t\tlet openValue;\n\t\tlet closeValue;\n\n\t\tif (dataItem.open && dataItem.close) {\n\t\t\topenValue = dataItem.open[field];\n\t\t\tcloseValue = dataItem.close[field];\n\t\t}\n\t\telse {\n\t\t\topenValue = dataItem.get(field as any)\n\t\t\tcloseValue = openValue;\n\t\t}\n\n\t\tlet value = openValue + (closeValue - openValue) * cellLocation;\n\n\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, location: number): number {\n\t\tlet value = this.positionToValue(position);\n\t\tlet baseInterval = this.getPrivate(\"baseInterval\");\n\t\tvalue = $time.round(new Date(value), baseInterval.timeUnit, baseInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, new Date(this.getPrivate(\"min\", 0)), this._root.timezone).getTime();\n\t\tlet endValue = value;\n\t\tif (location > 0) {\n\t\t\tendValue = $time.add(new Date(value), baseInterval.timeUnit, baseInterval.count, this._root.utc).getTime();\n\t\t}\n\t\treturn this.valueToPosition(value + (endValue - value) * location);\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number): string | undefined {\n\t\t//@todo number formatter + tag\n\n\t\tlet format = this.get(\"tooltipDateFormats\")![this.getPrivate(\"baseInterval\").timeUnit];\n\t\tlet date = new Date(this.positionToValue(position));\n\t\tlet baseInterval = this.getPrivate(\"baseInterval\");\n\t\tlet duration = $time.getDateIntervalDuration(baseInterval, date, this._root.locale.firstDayOfWeek, this._root.utc, this._root.timezone);\n\t\treturn this._root.dateFormatter.format(new Date(this.positionToValue(position) + this.get(\"tooltipIntervalOffset\", -this.get(\"tooltipLocation\", 0.5)) * duration), this.get(\"tooltipDateFormat\", format));\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined {\n\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\tlet value = this.positionToValue(position);\n\t\tconst result = $array.getSortedIndex(series.dataItems, (dataItem) => {\n\t\t\tvar diValue = 0;\n\t\t\tif (dataItem.open) {\n\t\t\t\tdiValue = dataItem.open[fieldName];\n\t\t\t}\n\n\t\t\treturn $order.compare(diValue, value);\n\t\t});\n\n\t\tif (series.get(\"snapTooltip\")) {\n\t\t\tlet first = series.dataItems[result.index - 1];\n\t\t\tlet second = series.dataItems[result.index];\n\n\t\t\tif (first && second) {\n\t\t\t\tif (first.open && second.close) {\n\t\t\t\t\tlet open = first.open[fieldName];\n\t\t\t\t\tlet close = second.close[fieldName];\n\n\t\t\t\t\tif (Math.abs(value - open) > Math.abs(value - close)) {\n\t\t\t\t\t\treturn second;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn first;\n\t\t}\n\t\telse {\n\t\t\t// @todo check if is in range\n\t\t\tconst dataItem = series.dataItems[result.index - 1];\n\n\t\t\tif (dataItem) {\n\t\t\t\tif (dataItem.open && dataItem.close) {\n\t\t\t\t\tlet open = dataItem.open[fieldName];\n\t\t\t\t\tlet close = dataItem.close[fieldName];\n\n\t\t\t\t\tif (value >= open && value <= close) {\n\t\t\t\t\t\treturn dataItem;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic shouldGap(dataItem: DataItem<IXYSeriesDataItem>, nextItem: DataItem<IXYSeriesDataItem>, autoGapCount: number, fieldName: string): boolean {\n\t\tconst value1 = dataItem.get(fieldName as any);\n\t\tconst value2 = nextItem.get(fieldName as any);\n\n\t\tif (value2 - value1 > this.baseDuration() * autoGapCount) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` dates.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start Date\n\t * @param  end       End Date\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToDates(start: Date, end: Date, duration?: number) {\n\t\tthis.zoomToValues(start.getTime(), end.getTime(), duration);\n\t}\n\n\t/**\n\t * Returns a `Date` object corresponding to specific position within plot\n\t * area.\n\t *\n\t * @param   position  Pposition\n\t * @return            Date\n\t */\n\tpublic positionToDate(position: number): Date {\n\t\treturn new Date(this.positionToValue(position));\n\t}\n\n\t/**\n\t * Returns a relative position within plot area that corresponds to specific\n\t * date.\n\t *\n\t * @param   date  Date\n\t * @return        Position\n\t */\n\tpublic dateToPosition(date: Date): number {\n\t\treturn this.valueToPosition(date.getTime());\n\t}\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\r\n\r\nimport { DateAxis, IDateAxisSettings, IDateAxisPrivate, IDateAxisDataItem, IDateAxisEvents } from \"./DateAxis\";\r\nimport { DataItem } from \"../../../core/render/Component\";\r\n\r\nimport * as $array from \"../../../core/util/Array\"\r\nimport * as $order from \"../../../core/util/Order\";\r\nimport * as $time from \"../../../core/util/Time\";\r\nimport * as $type from \"../../../core/util/Type\";\r\n\r\nexport interface IGaplessDateAxisSettings<R extends AxisRenderer> extends IDateAxisSettings<R> {\r\n\r\n}\r\n\r\nexport interface IGaplessDateAxisDataItem extends IDateAxisDataItem {\r\n\r\n\t/**\r\n\t * An index of a data item.\r\n\t */\r\n\tindex?: number\r\n\r\n}\r\n\r\nexport interface IGaplessDateAxisPrivate extends IDateAxisPrivate {\r\n\r\n}\r\n\r\nexport interface IGaplessDateAxisEvents extends IDateAxisEvents {\r\n}\r\n\r\n/**\r\n * A version of a [[DateAxis]] which removes intervals that don't have any data\r\n * items in them.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/gapless-date-axis/} for more info\r\n * @important\r\n */\r\nexport class GaplessDateAxis<R extends AxisRenderer> extends DateAxis<R> {\r\n\tpublic static className: string = \"GaplessDateAxis\";\r\n\tpublic static classNames: Array<string> = DateAxis.classNames.concat([GaplessDateAxis.className]);\r\n\r\n\tdeclare public _settings: IGaplessDateAxisSettings<R>;\r\n\tdeclare public _privateSettings: IGaplessDateAxisPrivate;\r\n\tdeclare public _dataItemSettings: IGaplessDateAxisDataItem;\r\n\tdeclare public _events: IGaplessDateAxisEvents;\r\n\r\n\tprotected _frequency: number = 1;\r\n\r\n\tpublic _afterNew() {\r\n\t\tthis.valueFields.push(\"date\");\r\n\t\tsuper._afterNew();\r\n\t}\r\n\r\n\tprotected _dates: Array<number> = [];\r\n\r\n\tprotected _updateDates(date: number) {\r\n\t\tconst dates = this._dates;\r\n\t\tconst result = $array.getSortedIndex(dates, (x) => $order.compare(x, date));\r\n\t\tif (!result.found) {\r\n\t\t\t$array.insertIndex(dates, result.index, date);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _updateAllDates() {\r\n\t\tthis._dates.length = 0;\r\n\r\n\t\t$array.each(this.series, (series) => {\r\n\t\t\tlet field = \"valueX\";\r\n\t\t\tif (series.get(\"yAxis\") == this) {\r\n\t\t\t\tfield = \"valueY\"\r\n\t\t\t}\r\n\t\t\t$array.each(series.dataItems, (dataItem) => {\r\n\t\t\t\tlet value = dataItem.get(field as any);\r\n\t\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\t\tif (dataItem.open) {\r\n\t\t\t\t\t\tthis._updateDates(dataItem.open![field]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Convers value to a relative position on axis.\r\n\t *\r\n\t * @param   value  Value\r\n\t * @return         Relative position\r\n\t */\r\n\tpublic valueToPosition(value: number): number {\r\n\t\tconst dates = this._dates;\r\n\t\tconst len = dates.length;\r\n\t\tconst result = $array.getSortedIndex(dates, (x) => $order.compare(x, value));\r\n\t\tlet index = result.index;\r\n\r\n\t\tif (result.found) {\r\n\t\t\treturn index / len;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (index > 0) {\r\n\t\t\t\tindex -= 1;\r\n\t\t\t}\r\n\r\n\t\t\tlet itemValue = dates[index];\r\n\r\n\t\t\tlet d = 0;\r\n\t\t\tif (itemValue > value) {\r\n\t\t\t\td = itemValue - value;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\td = value - itemValue;\r\n\t\t\t}\r\n\r\n\t\t\treturn index / len + d / this.baseDuration() / len;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts numeric value from axis scale to index.\r\n\t * \r\n\t * @param  value  Value\r\n\t * @return        Index\r\n\t */\r\n\tpublic valueToIndex(value: number): number {\r\n\t\tconst dates = this._dates;\r\n\t\tconst result = $array.getSortedIndex(dates, (x) => $order.compare(x, value));\r\n\t\tlet index = result.index;\r\n\r\n\t\tif (result.found) {\r\n\t\t\treturn index;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (index > 0) {\r\n\t\t\t\tindex -= 1;\r\n\t\t\t}\r\n\r\n\t\t\treturn index;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a relative position to a corresponding numeric value from axis\r\n\t * scale.\r\n\t *\r\n\t * @param   position  Relative position\r\n\t * @return            Value\r\n\t */\r\n\tpublic positionToValue(position: number): number {\r\n\r\n\t\tlet len = this._dates.length;\r\n\t\tlet index = position * len;\r\n\t\tlet findex = Math.floor(index);\r\n\t\tif (findex < 0) {\r\n\t\t\tfindex = 0;\r\n\t\t}\r\n\r\n\t\tif (findex > len - 1) {\r\n\t\t\tfindex = len - 1\r\n\t\t}\r\n\r\n\t\treturn this._dates[findex] + (index - findex) * this.baseDuration();\r\n\t}\r\n\r\n\tprotected _fixZoomFactor() {\r\n\t\tthis.setPrivateRaw(\"maxZoomFactor\", this._dates.length);\r\n\t}\r\n\r\n\tprotected _prepareAxisItems() {\r\n\t\tlet startTime = this.getPrivate(\"selectionMin\", 0);\r\n\t\tlet endTime = this.getPrivate(\"selectionMax\", 0);\r\n\r\n\t\tif ($type.isNumber(startTime) && $type.isNumber(endTime)) {\r\n\r\n\t\t\tif (this._seriesValuesDirty) {\r\n\t\t\t\tthis._seriesValuesDirty = false;\r\n\t\t\t\tthis._updateAllDates();\r\n\t\t\t}\r\n\r\n\t\t\tconst dates = this._dates;\r\n\t\t\tconst renderer = this.get(\"renderer\");\r\n\t\t\tconst len = dates.length;\r\n\r\n\t\t\tlet startIndex = this.valueToIndex(startTime);\r\n\t\t\tif (startIndex > 0) {\r\n\t\t\t\tstartIndex--;\r\n\t\t\t}\r\n\r\n\t\t\tlet endIndex = this.valueToIndex(endTime);\r\n\t\t\tif (endIndex < len - 1) {\r\n\t\t\t\tendIndex++;\r\n\t\t\t}\r\n\t\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1 / Number.MAX_SAFE_INTEGER);\r\n\t\t\tlet frequency = Math.min(len, Math.ceil((endIndex - startIndex) / maxCount));\r\n\r\n\t\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\r\n\t\t\tthis._frequency = frequency;\r\n\r\n\t\t\tfor (let j = 0, length = this.dataItems.length; j < length; j++) {\r\n\t\t\t\tthis.dataItems[j].hide();\r\n\t\t\t}\r\n\r\n\t\t\tlet realDuration = (endTime - startTime) - ((endTime - startTime) / this.baseDuration() - (endIndex - startIndex)) * this.baseDuration();\r\n\r\n\t\t\t// if all items are on axis\r\n\t\t\tlet gridInterval = $time.chooseInterval(0, realDuration, maxCount, this.get(\"gridIntervals\")!);\r\n\r\n\t\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\r\n\t\t\tlet intervalDuration = $time.getIntervalDuration(gridInterval);\r\n\r\n\t\t\tif (intervalDuration < this.baseDuration()) {\r\n\t\t\t\tgridInterval = { ...baseInterval };\r\n\t\t\t\tintervalDuration = $time.getIntervalDuration(gridInterval);\r\n\t\t\t}\r\n\r\n\r\n\t\t\tthis._intervalDuration = intervalDuration;\r\n\r\n\t\t\tconst formats = this.get(\"dateFormats\")!;\r\n\r\n\t\t\tlet selectedItems: Array<number> = [];\r\n\r\n\t\t\tlet value = $time.round(new Date(this.getPrivate(\"min\", 0)), gridInterval.timeUnit, gridInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime() - intervalDuration;\r\n\t\t\tlet selectionMax = this.getPrivate(\"selectionMax\")\r\n\r\n\t\t\tlet previousPosition = -Infinity;\r\n\t\t\tlet minDifference = (this.get(\"end\", 1) - this.get(\"start\", 0)) / maxCount;\r\n\r\n\t\t\twhile (value <= selectionMax) {\r\n\t\t\t\tlet index = this.valueToIndex(value);\r\n\t\t\t\tlet realValue = this._dates[index];\r\n\t\t\t\tlet position = this.valueToPosition(realValue);\r\n\t\t\t\tif (position - previousPosition >= minDifference * 0.95) {\r\n\t\t\t\t\t$array.move(selectedItems, index);\r\n\t\t\t\t\tpreviousPosition = position;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvalue = $time.add(new Date(value), gridInterval.timeUnit, gridInterval.count, this._root.utc).getTime();\r\n\t\t\t}\r\n\r\n\t\t\tif (selectedItems.length > 0) {\r\n\t\t\t\tlet i = 0;\r\n\t\t\t\tlet previousValue = -Infinity;\r\n\t\t\t\tconst nextGridUnit = $time.getNextUnit(gridInterval.timeUnit);\r\n\r\n\t\t\t\t$array.each(selectedItems, (index) => {\r\n\t\t\t\t\tlet dataItem: DataItem<this[\"_dataItemSettings\"]>;\r\n\t\t\t\t\tif (this.dataItems.length < i + 1) {\r\n\t\t\t\t\t\tdataItem = new DataItem<this[\"_dataItemSettings\"]>(this, undefined, {});\r\n\t\t\t\t\t\tthis._dataItems.push(dataItem);\r\n\t\t\t\t\t\tthis.processDataItem(dataItem);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tdataItem = this.dataItems[i];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet value = dates[index];\r\n\t\t\t\t\tlet date = new Date(value);\r\n\r\n\t\t\t\t\tlet endValue = value;\r\n\t\t\t\t\tif (i < selectedItems.length - 1) {\r\n\t\t\t\t\t\tendValue = dates[selectedItems[i + 1]];\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tendValue += intervalDuration;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdataItem.setRaw(\"value\", value);\r\n\t\t\t\t\tdataItem.setRaw(\"endValue\", endValue);\r\n\t\t\t\t\tdataItem.setRaw(\"index\", i);\r\n\r\n\t\t\t\t\tif (index > startIndex - 100 && index < endIndex + 100) {\r\n\r\n\t\t\t\t\t\tlet format = formats[gridInterval.timeUnit];\r\n\r\n\t\t\t\t\t\tformat = formats[gridInterval.timeUnit];\r\n\t\t\t\t\t\tif (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\r\n\t\t\t\t\t\t\tif (gridInterval.timeUnit != \"year\") {\r\n\t\t\t\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, this._root.utc, this._root.timezone)) {\r\n\t\t\t\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![gridInterval.timeUnit];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tthis._createAssets(dataItem, []);\r\n\r\n\t\t\t\t\t\tconst label = dataItem.get(\"label\");\r\n\t\t\t\t\t\tif (label) {\r\n\t\t\t\t\t\t\tlabel.set(\"text\", this._root.dateFormatter.format(date, format!));\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (dataItem.isHidden()) {\r\n\t\t\t\t\t\t\tdataItem.show();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis._prepareDataItem(dataItem, gridInterval.count);\r\n\t\t\t\t\t}\r\n\t\t\t\t\ti++;\r\n\t\t\t\t\tpreviousValue = value;\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\t$array.each(this.series, (series) => {\r\n\t\t\t\tif (series.inited) {\r\n\t\t\t\t\tseries._markDirtyAxes();\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tthis._updateGhost();\r\n\t}\r\n}","import { Graphics, IGraphicsPrivate, IGraphicsSettings } from \"../../../core/render/Graphics\";\n\nexport interface IGridSettings extends IGraphicsSettings {\n\n\t/**\n\t * Relative location of the grid line within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n}\n\nexport interface IGridPrivate extends IGraphicsPrivate {\n}\n\n/**\n * Creates an axis grid line.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Grid} for more info\n * @important\n */\nexport class Grid extends Graphics {\n\n\tdeclare public _settings: IGridSettings;\n\tdeclare public _privateSettings: IGridPrivate;\n\n\tpublic static className: string = \"Grid\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([Grid.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\nimport type { IXYSeriesDataItem, XYSeries } from \"../series/XYSeries\";\n\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Axis, IAxisSettings, IAxisPrivate, IAxisDataItem, IAxisEvents } from \"./Axis\";\nimport { MultiDisposer } from \"../../../core/util/Disposer\";\n\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $math from \"../../../core/util/Math\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IValueAxisSettings<R extends AxisRenderer> extends IAxisSettings<R> {\n\n\t/**\n\t * Override minimum value for the axis scale.\n\t *\n\t * NOTE: the axis might modify the minimum value to fit into its scale better,\n\t * unless `strictMinMax` is set to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tmin?: number;\n\n\t/**\n\t * Override maximum value for the axis scale.\n\t *\n\t * NOTE: the axis might modify the maximum value to fit into its scale better,\n\t * unless `strictMinMax` is set to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tmax?: number;\n\n\t/**\n\t * Force axis scale to be precisely at values as set in `min` and/or `max`.\n\t *\n\t * In case `min` and/or `max` is not set, the axis will fix its scale to\n\t * precise lowest and highest values available through all of the series\n\t * attached to it.\n\t *\n\t * This effectively locks the axis from auto-zooming itself when chart\n\t * is zoomed in.\n\t *\n\t * If you need to zoom to actual low/high values within currently visible\n\t * scope, use `strictMinMaxSelection` instead.\n\t *\n\t * Use `extraMin` and `extraMax` to add extra \"padding\".\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tstrictMinMax?: boolean;\n\n\t/**\n\t * Force axis to auto-zoom to exact lowest and highest values from attached\n\t * series' data items within ucurrently visible range.\n\t * \n\t * This is a good feature when your series is plotted from derivative values,\n\t * like `valueYChangeSelection` as it helps to avoid frequent jumping of\n\t * series to adjusted min and max of the axis.\n\t * \n\t * Use `extraMin` and `extraMax` to add extra \"padding\".\n\t *\n\t * @since 5.1.11\n\t */\n\tstrictMinMaxSelection?: boolean;\n\n\t/**\n\t * If set to `true` axis will use logarithmic scale.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Logarithmic_scale} for more info\n\t */\n\tlogarithmic?: boolean;\n\n\t/**\n\t * Treat zero values as some other value.\n\t *\n\t * Useful in situations where zero would result in error, i.e. logarithmic\n\t * scale.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Logarithmic_scale} for more info\n\t */\n\ttreatZeroAs?: number;\n\n\t/**\n\t * Relative extension to the automatically-calculated minimum value of the\n\t * axis scale.\n\t *\n\t * E..g. `0.1` will extend the scale by 10%, so if max value is `1000` and\n\t * minimum value is `0`, the new minimum value will be `-100`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Relative_scope_extension} for more info\n\t */\n\textraMin?: number;\n\n\t/**\n\t * Relative extension to the automatically-calculated maximum value of the\n\t * axis scale.\n\t *\n\t * E..g. `0.1` will extend the scale by 10%, so if max value is `1000`, the\n\t * axis will now show maximum value of `1100`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Relative_scope_extension} for more info\n\t */\n\textraMax?: number;\n\n\t/**\n\t * Base value, which indicates the threshold between \"positive\" and \"negative\"\n\t * values.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Base_value} for more info\n\t */\n\tbaseValue?: number;\n\n\t/**\n\t * Maximum number of decimals to allow in axis labels.\n\t *\n\t * This setting not only affects formatting of the labels, but also where and\n\t * how many grid/labels are placed on the axis.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Label_format} for more info\n\t */\n\tmaxPrecision?: number;\n\n\t/**\n\t * A function that can be used to specify how to configure axis fills.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_fills} for more info\n\t */\n\tfillRule?: (dataItem: DataItem<IValueAxisDataItem>) => void;\n\n\t/**\n\t * Number format to use for axis labels.\n\t *\n\t * If not set, will use format set in global number formatter.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Label_format} for more info\n\t */\n\tnumberFormat?: string;\n\n\t/**\n\t * A numeric format used for numbers displayed in axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Tooltip_number_format} for more info\n\t */\n\ttooltipNumberFormat?: string | Intl.NumberFormatOptions;\n\n\t/**\n\t * If set, will use greater precision for the axis fooltip than the one for\n\t * axis' actual labels.\n\t *\n\t * E.g. if axis displays labels with one decimal (`1.0`, `1.1`, `1.2`) setting\n\t * this setting to `1` would allow two decimals in axis tooltip, e.g. `1.15`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Tooltip_number_format} for more info\n\t */\n\textraTooltipPrecision?: number;\n\n\t/**\n\t * If your series relies on dynamically calculated values, like value\n\t * changes, percents, or total sums, set this to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Calculated_values} for more info\n\t */\n\tcalculateTotals?: boolean;\n\n\t/**\n\t * This setting can be set to an instance of another [[ValueAxis]].\n\t *\n\t * If set the grid of this axis will be synced with grid of the target axis.\n\t *\n\t * NOTE: this is not 100% guaranteed to work. In some rare cases perfect\n\t * sync might not be possible.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Syncing_grid} for more info\n\t */\n\tsyncWithAxis?: ValueAxis<AxisRenderer>;\n\n}\n\nexport interface IValueAxisDataItem extends IAxisDataItem {\n\n\t/**\n\t * Value of the data item.\n\t */\n\tvalue?: number;\n\n\t/**\n\t * End value for axis items that span multiple values, like axis ranges.\n\t */\n\tendValue?: number;\n\n\t/**\n\t * If set to `true` the values fo this data item will be factored in when\n\t * calculating scale of the [[ValueAxis]]. Useful for axis ranges.\n\t * \n\t * @since 5.1.4\n\t */\n\taffectsMinMax?: boolean;\n\n}\n\nexport interface IMinMaxStep {\n\tmin: number;\n\tmax: number;\n\tstep: number;\n}\n\nexport interface IValueAxisPrivate extends IAxisPrivate {\n\n\t/**\n\t * Calculated current minimum value of the axis scale.\n\t * \n\t * @readonly\n\t */\n\tmin?: number;\n\n\t/**\n\t * Calculated current maximum value of the axis scale.\n\t * \n\t * @readonly\n\t */\n\tmax?: number;\n\n\t/**\n\t * A minimum value of the axis scale.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `min` is reflecting current intermediate value, whereas `minFinal` will\n\t * show target value.\n\t * \n\t * @readonly\n\t */\n\tminFinal?: number;\n\n\t/**\n\t * A maximum value of the axis scale.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `max` is reflecting current intermediate value, whereas `maxFinal` will\n\t * show target value.\n\t * \n\t * @readonly\n\t */\n\tmaxFinal?: number;\n\n\t/**\n\t * Calculated minimum value of the currently viewable (zoomed) scope.\n\t * \n\t * @readonly\n\t */\n\tselectionMin?: number;\n\n\t/**\n\t * Calculated maximum value of the currently viewable (zoomed) scope.\n\t * \n\t * @readonly\n\t */\n\tselectionMax?: number;\n\n\t/**\n\t * A target minimum value of the viewable value scope.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `selectionMin` is reflecting current intermediate value,\n\t * whereas `selectionMinFinal` will show target value.\n\t * \n\t * @readonly\n\t */\n\tselectionMinFinal?: number;\n\n\t/**\n\t * A target maximum value of the viewable value scope.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `selectionMax` is reflecting current intermediate value,\n\t * whereas `selectionMaxFinal` will show target value.\n\t * \n\t * @readonly\n\t */\n\tselectionMaxFinal?: number;\n\n\t/**\n\t * When selection step changes, it might change during axis zoom animation.\n\t *\n\t * `selectionStepFinal` will show what step will be when animation is\n\t * finished.\n\t * \n\t * @readonly\n\t */\n\tselectionStepFinal?: number;\n\n\t/**\n\t * Value step between grid lines.\n\t * \n\t * @readonly\n\t */\n\tstep?: number;\n\n\t/**\n\t * Decimal places used when formatting axis labels.\n\t * \n\t * @readonly\n\t */\n\tstepDecimalPlaces?: number;\n\n}\n\nexport interface IValueAxisEvents extends IAxisEvents {\n\n}\n\n/**\n * Creates a value axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/} for more info\n * @important\n */\nexport class ValueAxis<R extends AxisRenderer> extends Axis<R> {\n\tpublic static className: string = \"ValueAxis\";\n\tpublic static classNames: Array<string> = Axis.classNames.concat([ValueAxis.className]);\n\n\tdeclare public _settings: IValueAxisSettings<R>;\n\tdeclare public _privateSettings: IValueAxisPrivate;\n\tdeclare public _dataItemSettings: IValueAxisDataItem;\n\tdeclare public _events: IValueAxisEvents;\n\n\tprotected _dirtyExtremes: boolean = false;\n\tprotected _dirtySelectionExtremes: boolean = false;\n\tprotected _deltaMinMax: number = 1;\n\tprotected _minReal: number | undefined;\n\tprotected _maxReal: number | undefined;\n\n\tprotected _baseValue: number = 0;\n\tprotected _syncDp?: MultiDisposer;\n\tprotected _minLogAdjusted: number = 1;\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyExtremes() {\n\t\tthis._dirtyExtremes = true;\n\t\tthis.markDirty();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtySelectionExtremes() {\n\t\tthis._dirtySelectionExtremes = true;\n\t\tthis.markDirty();\n\t}\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.setPrivateRaw(\"name\", \"value\");\n\t\tthis.addTag(\"value\");\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"syncWithAxis\")) {\n\t\t\tlet previousValue = this._prevSettings.syncWithAxis;\n\t\t\tif (previousValue) {\n\t\t\t\tif (this._syncDp) {\n\t\t\t\t\tthis._syncDp.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet syncWithAxis = this.get(\"syncWithAxis\");\n\t\t\tif (syncWithAxis) {\n\t\t\t\tthis._syncDp = new MultiDisposer([\n\t\t\t\t\tsyncWithAxis.onPrivate(\"selectionMinFinal\", () => {\n\t\t\t\t\t\tthis._dirtySelectionExtremes = true;\n\t\t\t\t\t}),\n\t\t\t\t\tsyncWithAxis.onPrivate(\"selectionMaxFinal\", () => {\n\t\t\t\t\t\tthis._dirtySelectionExtremes = true;\n\t\t\t\t\t})\n\t\t\t\t])\n\t\t\t}\n\t\t}\n\n\t\t//if (this._dirtyExtremes || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"min\") || this.isDirty(\"max\") || this.isDirty(\"extraMin\") || this.isDirty(\"extraMax\") || this.isDirty(\"logarithmic\") || this.isDirty(\"treatZeroAs\") || this.isDirty(\"baseValue\") || this.isDirty(\"strictMinMax\") || this.isDirty(\"maxPrecision\")) {\n\t\tif (this._sizeDirty || this._dirtyExtremes || this._valuesDirty || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"min\") || this.isDirty(\"max\") || this.isDirty(\"extraMin\") || this.isDirty(\"extraMax\") || this.isDirty(\"logarithmic\") || this.isDirty(\"treatZeroAs\") || this.isDirty(\"baseValue\") || this.isDirty(\"strictMinMax\") || this.isDirty(\"strictMinMaxSelection\") || this.isDirty(\"maxPrecision\") || this.isDirty(\"numberFormat\")) {\n\t\t\tthis._getMinMax();\n\t\t\tthis.ghostLabel.set(\"text\", \"\");\n\t\t\tthis._dirtyExtremes = false;\n\t\t}\n\n\t\tif (this._dirtySelectionExtremes && !this._isPanning) {\n\t\t\tthis._getSelectionMinMax();\n\t\t\tthis._dirtySelectionExtremes = false;\n\t\t}\n\n\t\tthis._groupData();\n\n\t\tif (this._sizeDirty || this._valuesDirty || this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"min\") || this.isPrivateDirty(\"selectionMax\") || this.isPrivateDirty(\"selectionMin\") || this.isPrivateDirty(\"max\") || this.isPrivateDirty(\"step\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"logarithmic\")) {\n\t\t\tthis._handleRangeChange();\n\t\t\tthis._prepareAxisItems();\n\t\t\tthis._updateAxisRanges();\n\t\t}\n\n\t\tthis._baseValue = this.baseValue();\n\n\t}\n\n\tprotected _groupData() {\n\n\t}\n\n\tprotected _formatText(value: number) {\n\t\tconst numberFormat = this.get(\"numberFormat\");\n\t\tconst formatter = this.getNumberFormatter();\n\n\t\tlet text = \"\";\n\n\t\tif (numberFormat) {\n\t\t\ttext = formatter.format(value, numberFormat);\n\t\t}\n\t\telse {\n\t\t\ttext = formatter.format(value, undefined, this.getPrivate(\"stepDecimalPlaces\"));\n\t\t}\n\t\treturn text;\n\t}\n\n\tprotected _prepareAxisItems() {\n\t\tconst min = this.getPrivate(\"min\");\n\t\tconst max = this.getPrivate(\"max\");\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\n\t\t\tconst logarithmic = this.get(\"logarithmic\");\n\t\t\tconst step = this.getPrivate(\"step\")!;\n\t\t\tconst selectionMin = this.getPrivate(\"selectionMin\")!;\n\t\t\tconst selectionMax = this.getPrivate(\"selectionMax\")! + step;\n\n\t\t\tlet value = selectionMin - step;\n\t\t\tlet i = 0;\n\t\t\tlet differencePower = 1;\n\t\t\tlet minLog = min;\n\n\t\t\tif (logarithmic) {\n\t\t\t\tvalue = this._minLogAdjusted;\n\n\t\t\t\tif (value < selectionMin) {\n\t\t\t\t\twhile (value < selectionMin) {\n\t\t\t\t\t\tvalue += step;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tminLog = value;\n\n\t\t\t\tif (minLog <= 0) {\n\t\t\t\t\tminLog = 1;\n\t\t\t\t\tif (step < 1) {\n\t\t\t\t\t\tminLog = step;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tdifferencePower = Math.log(selectionMax - step) * Math.LOG10E - Math.log(minLog) * Math.LOG10E;\n\n\t\t\t\tif (differencePower > 2) {\n\t\t\t\t\tvalue = Math.pow(10, Math.log(minLog) * Math.LOG10E - 5);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twhile (value < selectionMax) {\n\t\t\t\tlet dataItem: DataItem<this[\"_dataItemSettings\"]>;\n\t\t\t\tif (this.dataItems.length < i + 1) {\n\t\t\t\t\tdataItem = new DataItem(this, undefined, {});\n\t\t\t\t\tthis._dataItems.push(dataItem);\n\t\t\t\t\tthis.processDataItem(dataItem);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdataItem = this.dataItems[i];\n\t\t\t\t}\n\n\t\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\t\tif (dataItem.isHidden()) {\n\t\t\t\t\tdataItem.show();\n\t\t\t\t}\n\n\t\t\t\tdataItem.setRaw(\"value\", value);\n\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", this._formatText(value));\n\t\t\t\t}\n\n\t\t\t\tthis._prepareDataItem(dataItem);\n\n\t\t\t\tif (!logarithmic) {\n\t\t\t\t\tvalue += step;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (differencePower > 2) {\n\t\t\t\t\t\tvalue = Math.pow(10, Math.log(minLog) * Math.LOG10E + i - 5);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tvalue += step;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\n\t\t\t\tif (stepPower < 1) {\n\t\t\t\t\t// exponent is less then 1 too. Count decimals of exponent\n\t\t\t\t\tlet decCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 2;\n\t\t\t\t\t// round value to avoid floating point issues\n\t\t\t\t\tvalue = $math.round(value, decCount);\n\t\t\t\t}\n\t\t\t\ti++;\n\t\t\t}\n\n\t\t\tfor (let j = i; j < this.dataItems.length; j++) {\n\t\t\t\tthis.dataItems[j].hide();\n\t\t\t}\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.inited) {\n\t\t\t\t\tseries._markDirtyAxes();\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tthis._updateGhost();\n\t\t}\n\t}\n\n\n\tpublic _prepareDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, count?: number) {\n\t\tlet renderer = this.get(\"renderer\");\n\t\tlet value = dataItem.get(\"value\")!;\n\t\tlet endValue = dataItem.get(\"endValue\");\n\n\t\tlet position = this.valueToPosition(value);\n\n\t\tlet endPosition = position;\n\t\tlet fillEndPosition = this.valueToPosition(value + this.getPrivate(\"step\")!);\n\n\t\tif ($type.isNumber(endValue)) {\n\t\t\tendPosition = this.valueToPosition(endValue);\n\t\t\tfillEndPosition = endPosition;\n\t\t}\n\n\t\trenderer.updateLabel(dataItem.get(\"label\"), position, endPosition, count);\n\n\t\tconst grid = dataItem.get(\"grid\");\n\t\trenderer.updateGrid(grid, position, endPosition);\n\t\tif (grid) {\n\t\t\tif (value == this.get(\"baseValue\", 0)) {\n\t\t\t\tgrid.addTag(\"base\");\n\t\t\t\tgrid._applyThemes();\n\t\t\t}\n\t\t\telse if (grid.hasTag(\"base\")) {\n\t\t\t\tgrid.removeTag(\"base\");\n\t\t\t\tgrid._applyThemes();\n\t\t\t}\n\t\t}\n\n\t\trenderer.updateTick(dataItem.get(\"tick\"), position, endPosition, count);\n\t\trenderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\n\n\t\tthis._processBullet(dataItem);\n\t\trenderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\n\n\t\tif (!dataItem.get(\"isRange\")) {\n\t\t\tconst fillRule = this.get(\"fillRule\");\n\t\t\tif (fillRule) {\n\t\t\t\tfillRule(dataItem)\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _handleRangeChange() {\n\t\tlet selectionMin: number = this.positionToValue(this.get(\"start\", 0));\n\t\tlet selectionMax: number = this.positionToValue(this.get(\"end\", 1));\n\n\t\tconst gridCount = this.get(\"renderer\").gridCount();\n\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\tlet stepDecimalPlaces = $utils.decimalPlaces(minMaxStep.step);\n\t\tthis.setPrivateRaw(\"stepDecimalPlaces\", stepDecimalPlaces);\n\n\t\tselectionMin = $math.round(selectionMin, stepDecimalPlaces);\n\t\tselectionMax = $math.round(selectionMax, stepDecimalPlaces);\n\n\t\tminMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\tlet step = minMaxStep.step;\n\t\tselectionMin = minMaxStep.min;\n\t\tselectionMax = minMaxStep.max;\n\n\t\tif (this.getPrivate(\"selectionMin\") !== selectionMin || this.getPrivate(\"selectionMax\") !== selectionMax || this.getPrivate(\"step\") !== step) {\n\t\t\t// do not change to setPrivate, will cause SO\n\t\t\tthis.setPrivateRaw(\"selectionMin\", selectionMin);\n\t\t\tthis.setPrivateRaw(\"selectionMax\", selectionMax);\n\t\t\tthis.setPrivateRaw(\"step\", step);\n\t\t}\n\t}\n\n\t/**\n\t * Converts a relative position to a corresponding numeric value from axis\n\t * scale.\n\t *\n\t * @param   position  Relative position\n\t * @return            Value\n\t */\n\tpublic positionToValue(position: number): number {\n\t\tconst min = this.getPrivate(\"min\")!;\n\t\tconst max = this.getPrivate(\"max\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn position * (max - min) + min;\n\t\t}\n\t\telse {\n\t\t\treturn Math.pow(Math.E, (position * ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E)) + Math.log(min) * Math.LOG10E) / Math.LOG10E);\n\t\t}\n\t}\n\n\t/**\n\t * Convers value to a relative position on axis.\n\t *\n\t * @param   value  Value\n\t * @return         Relative position\n\t */\n\tpublic valueToPosition(value: number): number {\n\n\t\tconst min = this.getPrivate(\"min\")!;\n\t\tconst max = this.getPrivate(\"max\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn (value - min) / (max - min);\n\t\t}\n\t\telse {\n\t\t\tif (value <= 0) {\n\t\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\t\tvalue = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn (Math.log(value) * Math.LOG10E - Math.log(min) * Math.LOG10E) / ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic valueToFinalPosition(value: number): number {\n\n\t\tconst min = this.getPrivate(\"minFinal\")!;\n\t\tconst max = this.getPrivate(\"maxFinal\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn (value - min) / (max - min);\n\t\t}\n\t\telse {\n\t\t\tif (value <= 0) {\n\t\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\t\tvalue = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn (Math.log(value) * Math.LOG10E - Math.log(min) * Math.LOG10E) / ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E));\n\t\t}\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific value.\n\t *\n\t * @param   value     Numeric value\n\t * @param   location  Location\n\t * @param   baseValue Base value\n\t * @return            X coordinate\n\t */\n\tpublic getX(value: number, location: number, baseValue: number) {\n\t\tvalue = baseValue + (value - baseValue) * location;\n\n\t\tconst position = this.valueToPosition(value);\n\t\treturn this._settings.renderer.positionToCoordinate(position);\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific value.\n\t *\n\t * @param   value     Numeric value\n\t * @param   location  Location\n\t * @param   baseValue Base value\n\t * @return            X coordinate\n\t */\n\tpublic getY(value: number, location: number, baseValue: number) {\n\t\tvalue = baseValue + (value - baseValue) * location;\n\n\t\tconst position = this.valueToPosition(value)\n\t\treturn this._settings.renderer.positionToCoordinate(position);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, _cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number) {\n\t\tlet value = dataItem.get(field as any);\n\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\t\tif (stackToItem) {\n\t\t\tconst series = dataItem.component as XYSeries;\n\t\t\tvalue = value * axisLocation + series.getStackedXValueWorking(dataItem, field);\n\t\t}\n\t\telse {\n\t\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\t}\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, _cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\tlet value = dataItem.get(field as any);\n\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\t\tif (stackToItem) {\n\t\t\tconst series = dataItem.component as XYSeries;\n\t\t\tvalue = value * axisLocation + series.getStackedYValueWorking(dataItem, field);\n\t\t}\n\t\telse {\n\t\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\t}\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * Returns relative position of axis' `baseValue`.\n\t *\n\t * @return  Base value position\n\t */\n\tpublic basePosition(): number {\n\t\treturn this.valueToPosition(this.baseValue());\n\t}\n\n\t/**\n\t * Base value of the [[ValueAxis]], which determines positive and negative\n\t * values.\n\t *\n\t * @return Base value\n\t */\n\tpublic baseValue(): number {\n\t\tconst min = Math.min(this.getPrivate(\"minFinal\", -Infinity), this.getPrivate(\"selectionMin\", -Infinity));\n\t\tconst max = Math.max(this.getPrivate(\"maxFinal\", Infinity), this.getPrivate(\"selectionMax\", Infinity));\n\t\tlet baseValue = this.get(\"baseValue\", 0);\n\n\t\tif (baseValue < min) {\n\t\t\tbaseValue = min;\n\t\t}\n\n\t\tif (baseValue > max) {\n\t\t\tbaseValue = max\n\t\t}\n\n\t\treturn baseValue;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic cellEndValue(value: number): number {\n\t\treturn value;\n\t}\n\n\tprotected fixSmallStep(step: number): number {\n\t\t// happens because of floating point error\n\t\tif (1 + step === 1) {\n\t\t\tstep *= 2;\n\t\t\treturn this.fixSmallStep(step);\n\t\t}\n\t\treturn step;\n\t}\n\n\tprotected _fixMin(min: number) {\n\t\treturn min;\n\t}\n\n\tprotected _fixMax(max: number) {\n\t\treturn max;\n\t}\n\n\tpublic _calculateTotals() {\n\t\tif (this.get(\"calculateTotals\")) {\n\t\t\tlet series = this.series[0];\n\t\t\tif (series) {\n\t\t\t\tlet startIndex = series.startIndex();\n\n\t\t\t\tif (series.dataItems.length > 0) {\n\n\t\t\t\t\tif (startIndex > 0) {\n\t\t\t\t\t\tstartIndex--;\n\t\t\t\t\t}\n\t\t\t\t\tlet endIndex = series.endIndex();\n\t\t\t\t\tif (endIndex < series.dataItems.length) {\n\t\t\t\t\t\tendIndex++;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet field: string | undefined;\n\t\t\t\t\tlet vc: string | undefined;\n\n\t\t\t\t\tif (series.get(\"yAxis\") == this) {\n\t\t\t\t\t\tfield = \"valueY\";\n\t\t\t\t\t\tvc = \"vcy\";\n\t\t\t\t\t}\n\t\t\t\t\telse if (series.get(\"xAxis\") == this) {\n\t\t\t\t\t\tfield = \"valueX\";\n\t\t\t\t\t\tvc = \"vcx\";\n\t\t\t\t\t}\n\n\t\t\t\t\tlet fieldWorking = field + \"Working\";\n\n\t\t\t\t\tif (field) {\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tlet sum = 0;\n\t\t\t\t\t\t\tlet total = 0;\n\n\t\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\t\tif (!series.get(\"excludeFromTotal\")) {\n\t\t\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\t\t\t\t\tlet value = dataItem.get(fieldWorking as any) * series.get(vc as any);\n\n\t\t\t\t\t\t\t\t\t\tif (!$type.isNaN(value)) {\n\t\t\t\t\t\t\t\t\t\t\tsum += value;\n\t\t\t\t\t\t\t\t\t\t\ttotal += Math.abs(value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\t\tif (!series.get(\"excludeFromTotal\")) {\n\t\t\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\t\t\t\t\tlet value = dataItem.get(fieldWorking as any) * series.get(vc as any);\n\n\t\t\t\t\t\t\t\t\t\tif (!$type.isNaN(value)) {\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"Total\") as any, total);\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"Sum\") as any, sum);\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"TotalPercent\") as any, value / total * 100);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getSelectionMinMax() {\n\t\tconst min = this.getPrivate(\"minFinal\");\n\t\tconst max = this.getPrivate(\"maxFinal\");\n\n\t\tconst minDefined = this.get(\"min\");\n\t\tconst maxDefined = this.get(\"max\");\n\n\t\tlet extraMin = this.get(\"extraMin\", 0);\n\t\tlet extraMax = this.get(\"extraMax\", 0);\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tif (this.get(\"extraMin\") == null) {\n\t\t\t\textraMin = 0.1;\n\t\t\t}\n\t\t\tif (this.get(\"extraMax\") == null) {\n\t\t\t\textraMax = 0.2;\n\t\t\t}\n\t\t}\n\n\t\tconst gridCount = this.get(\"renderer\").gridCount();\n\t\tconst selectionStrictMinMax = this.get(\"strictMinMaxSelection\");\n\t\tconst strictMinMax = this.get(\"strictMinMax\");\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\t\t\tlet selectionMin = max;\n\t\t\tlet selectionMax = min;\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (!series.get(\"ignoreMinMax\")) {\n\t\t\t\t\tlet seriesMin: number | undefined;\n\t\t\t\t\tlet seriesMax: number | undefined;\n\t\t\t\t\tconst outOfSelection = series.getPrivate(\"outOfSelection\");\n\t\t\t\t\tif (series.get(\"xAxis\") === this) {\n\t\t\t\t\t\tif (!outOfSelection) {\n\t\t\t\t\t\t\tseriesMin = series.getPrivate(\"selectionMinX\", series.getPrivate(\"minX\"));\n\t\t\t\t\t\t\tseriesMax = series.getPrivate(\"selectionMaxX\", series.getPrivate(\"maxX\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (series.get(\"yAxis\") === this) {\n\t\t\t\t\t\tif (!outOfSelection) {\n\t\t\t\t\t\t\tseriesMin = series.getPrivate(\"selectionMinY\", series.getPrivate(\"minY\"));\n\t\t\t\t\t\t\tseriesMax = series.getPrivate(\"selectionMaxY\", series.getPrivate(\"maxY\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (!series.isHidden() && !series.isShowing()) {\n\t\t\t\t\t\tif ($type.isNumber(seriesMin)) {\n\t\t\t\t\t\t\tselectionMin = Math.min(selectionMin, seriesMin);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ($type.isNumber(seriesMax)) {\n\t\t\t\t\t\t\tselectionMax = Math.max(selectionMax, seriesMax);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tthis.axisRanges.each((range) => {\n\t\t\t\tif (range.get(\"affectsMinMax\")) {\n\t\t\t\t\tlet value = range.get(\"value\");\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tselectionMin = Math.min(selectionMin, value);\n\t\t\t\t\t\tselectionMax = Math.max(selectionMax, value);\n\t\t\t\t\t}\n\t\t\t\t\tvalue = range.get(\"endValue\");\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tselectionMin = Math.min(selectionMin, value);\n\t\t\t\t\t\tselectionMax = Math.max(selectionMax, value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (selectionMin > selectionMax) {\n\t\t\t\t[selectionMin, selectionMax] = [selectionMax, selectionMin]\n\t\t\t}\n\n\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\tif (strictMinMax) {\n\t\t\t\t\tselectionMin = minDefined;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tselectionMin = min;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (strictMinMax) {\n\t\t\t\tif ($type.isNumber(this._minReal)) {\n\t\t\t\t\tselectionMin = this._minReal;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\tif (strictMinMax) {\n\t\t\t\t\tselectionMax = maxDefined;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tselectionMax = max;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (strictMinMax) {\n\t\t\t\tif ($type.isNumber(this._maxReal)) {\n\t\t\t\t\tselectionMax = this._maxReal;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (selectionMin === selectionMax) {\n\t\t\t\tselectionMin -= this._deltaMinMax;\n\t\t\t\tselectionMax += this._deltaMinMax;\n\n\t\t\t\tlet minMaxStep2 = this._adjustMinMax(selectionMin, selectionMax, gridCount, strictMinMax);\n\t\t\t\tselectionMin = minMaxStep2.min;\n\t\t\t\tselectionMax = minMaxStep2.max;\n\t\t\t}\n\n\t\t\tlet selectionMinReal = selectionMin;\n\t\t\tlet selectionMaxReal = selectionMax;\n\n\t\t\tselectionMin -= (selectionMax - selectionMin) * extraMin;\n\t\t\tselectionMax += (selectionMax - selectionMin) * extraMax;\n\n\t\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount);\n\n\t\t\tselectionMin = minMaxStep.min;\n\t\t\tselectionMax = minMaxStep.max;\n\n\t\t\tselectionMin = $math.fitToRange(selectionMin, min, max);\n\t\t\tselectionMax = $math.fitToRange(selectionMax, min, max);\n\n\t\t\t// do it for the second time !important\t\t\t\n\t\t\tminMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\t\tif (!strictMinMax) {\n\t\t\t\tselectionMin = minMaxStep.min;\n\t\t\t\tselectionMax = minMaxStep.max;\n\t\t\t}\n\n\t\t\tconst syncWithAxis = this.get(\"syncWithAxis\");\n\t\t\tif (syncWithAxis) {\n\t\t\t\tminMaxStep = this._syncAxes(selectionMin, selectionMax, minMaxStep.step, syncWithAxis.getPrivate(\"selectionMinFinal\", syncWithAxis.getPrivate(\"minFinal\", 0)), syncWithAxis.getPrivate(\"selectionMaxFinal\", syncWithAxis.getPrivate(\"maxFinal\", 1)), syncWithAxis.getPrivate(\"selectionStepFinal\", syncWithAxis.getPrivate(\"step\", 1)));\n\n\t\t\t\tselectionMin = minMaxStep.min;\n\t\t\t\tselectionMax = minMaxStep.max;\n\t\t\t}\n\n\t\t\tif (strictMinMax) {\n\t\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\t\tselectionMin = Math.max(selectionMin, minDefined);\n\t\t\t\t}\n\n\t\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\t\tselectionMax = Math.min(selectionMax, maxDefined);\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif (selectionStrictMinMax) {\n\t\t\t\tselectionMin = selectionMinReal - (selectionMax - selectionMin) * extraMin;\n\t\t\t\tselectionMax = selectionMaxReal + (selectionMax - selectionMin) * extraMax;\n\t\t\t}\n\n\t\t\tif (this.get(\"logarithmic\")) {\n\n\t\t\t\tif (selectionMin <= 0) {\n\t\t\t\t\tselectionMin = selectionMinReal * (1 - Math.min(extraMin, 0.99));\n\t\t\t\t}\n\n\t\t\t\tif (selectionMin < min) {\n\t\t\t\t\tselectionMin = min;\n\t\t\t\t}\n\t\t\t\tif (selectionMax > max) {\n\t\t\t\t\tselectionMax = max;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet start = this.valueToFinalPosition(selectionMin);\n\t\t\tlet end = this.valueToFinalPosition(selectionMax);\n\n\t\t\tthis.setPrivateRaw(\"selectionMinFinal\", selectionMin);\n\t\t\tthis.setPrivateRaw(\"selectionMaxFinal\", selectionMax);\n\t\t\tthis.setPrivateRaw(\"selectionStepFinal\", minMaxStep.step);\n\n\t\t\tthis.zoom(start, end);\n\t\t}\n\t}\n\n\n\tprotected _getMinMax() {\n\t\tlet minDefined = this.get(\"min\");\n\t\tlet maxDefined = this.get(\"max\");\n\n\t\tlet min = Infinity;\n\t\tlet max = -Infinity;\n\n\t\tlet extraMin = this.get(\"extraMin\", 0);\n\t\tlet extraMax = this.get(\"extraMax\", 0);\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tif (this.get(\"extraMin\") == null) {\n\t\t\t\textraMin = 0.1;\n\t\t\t}\n\t\t\tif (this.get(\"extraMax\") == null) {\n\t\t\t\textraMax = 0.2;\n\t\t\t}\n\t\t}\n\n\t\tlet minDiff = Infinity;\n\n\t\t$array.each(this.series, (series) => {\n\t\t\tif (!series.get(\"ignoreMinMax\")) {\n\t\t\t\tlet seriesMin: number | undefined;\n\t\t\t\tlet seriesMax: number | undefined;\n\t\t\t\tif (series.get(\"xAxis\") === this) {\n\t\t\t\t\tseriesMin = series.getPrivate(\"minX\");\n\t\t\t\t\tseriesMax = series.getPrivate(\"maxX\");\n\t\t\t\t}\n\t\t\t\telse if (series.get(\"yAxis\") === this) {\n\t\t\t\t\tseriesMin = series.getPrivate(\"minY\");\n\t\t\t\t\tseriesMax = series.getPrivate(\"maxY\");\n\t\t\t\t}\n\n\t\t\t\tif ($type.isNumber(seriesMin) && $type.isNumber(seriesMax)) {\n\t\t\t\t\tmin = Math.min(min, seriesMin);\n\t\t\t\t\tmax = Math.max(max, seriesMax);\n\n\t\t\t\t\tlet diff = seriesMax - seriesMin;\n\n\t\t\t\t\tif (diff <= 0) {\n\t\t\t\t\t\tdiff = Math.abs(seriesMax / 100);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (diff < minDiff) {\n\t\t\t\t\t\tminDiff = diff;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tthis.axisRanges.each((range) => {\n\t\t\tif (range.get(\"affectsMinMax\")) {\n\t\t\t\tlet value = range.get(\"value\");\n\t\t\t\tif (value != null) {\n\t\t\t\t\tmin = Math.min(min, value);\n\t\t\t\t\tmax = Math.max(max, value);\n\t\t\t\t}\n\t\t\t\tvalue = range.get(\"endValue\");\n\t\t\t\tif (value != null) {\n\t\t\t\t\tmin = Math.min(min, value);\n\t\t\t\t\tmax = Math.max(max, value);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\tif (min <= 0) {\n\t\t\t\t\tmin = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (min <= 0) {\n\t\t\t\tnew Error(\"Logarithmic value axis can not have values <= 0.\");\n\t\t\t}\n\t\t}\n\n\t\tif (min === 0 && max === 0) {\n\t\t\tmax = 0.9;\n\t\t\tmin = -0.9;\n\t\t}\n\n\t\tif ($type.isNumber(minDefined)) {\n\t\t\tmin = minDefined;\n\t\t}\n\t\tif ($type.isNumber(maxDefined)) {\n\t\t\tmax = maxDefined;\n\t\t}\n\n\t\t// meaning no min/max found on series/ranges and no min/max was defined\n\t\tif (min === Infinity || max === -Infinity) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst initialMin = min;\n\t\tconst initialMax = max;\n\n\t\t// adapter\n\t\tlet minAdapted = this.adapters.fold(\"min\", min);\n\t\tlet maxAdapted = this.adapters.fold(\"max\", max);\n\n\t\tif ($type.isNumber(minAdapted)) {\n\t\t\tmin = minAdapted;\n\t\t}\n\n\t\tif ($type.isNumber(maxAdapted)) {\n\t\t\tmax = maxAdapted;\n\t\t}\n\n\t\t// DateAxis does some magic here\n\t\tmin = this._fixMin(min);\n\t\tmax = this._fixMax(max);\n\n\t\t// this happens if starLocation and endLocation are 0.5 and DateAxis has only one date\n\t\tif (max - min <= 1 / Math.pow(10, 15)) {\n\t\t\tif (max - min !== 0) {\n\t\t\t\tthis._deltaMinMax = (max - min) / 2;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// the number by which we need to raise 10 to get difference\n\t\t\t\tlet exponent: number = Math.log(Math.abs(max)) * Math.LOG10E;\n\n\t\t\t\t// here we find a number which is power of 10 and has the same count of numbers as difference has\n\t\t\t\tlet power = Math.pow(10, Math.floor(exponent));\n\n\t\t\t\t// reduce this number by 10 times\n\t\t\t\tpower = power / 10;\n\n\t\t\t\tthis._deltaMinMax = power;\n\t\t\t}\n\n\t\t\tmin -= this._deltaMinMax;\n\t\t\tmax += this._deltaMinMax;\n\t\t}\n\n\t\t// add extras\n\t\tmin -= (max - min) * extraMin;\n\t\tmax += (max - min) * extraMax;\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\t// don't let min go below 0 if real min is >= 0\n\t\t\tif (min < 0 && initialMin >= 0) {\n\t\t\t\tmin = 0;\n\t\t\t}\n\t\t\t// don't let max go above 0 if real max is <= 0\n\t\t\tif (max > 0 && initialMax <= 0) {\n\t\t\t\tmax = 0;\n\t\t\t}\n\t\t}\n\n\t\tthis._minReal = min;\n\t\tthis._maxReal = max;\n\t\tlet strictMinMax = this.get(\"strictMinMax\");\n\t\tlet strictMinMaxSelection = this.get(\"strictMinMaxSelection\", false);\n\t\tif (strictMinMaxSelection) {\n\t\t\tstrictMinMax = strictMinMaxSelection;\n\t\t}\n\n\t\tlet strict = strictMinMax;\n\t\tif ($type.isNumber(maxDefined)) {\n\t\t\tstrict = true;\n\t\t}\n\n\t\tlet gridCount = this.get(\"renderer\").gridCount();\n\n\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(min, max, gridCount, strict);\n\n\t\tmin = minMaxStep.min;\n\t\tmax = minMaxStep.max;\n\n\t\t// do it for the second time with strict true (importat!)\n\t\tminMaxStep = this._adjustMinMax(min, max, gridCount, true);\n\n\t\tmin = minMaxStep.min;\n\t\tmax = minMaxStep.max;\n\n\t\t// return min max if strict\n\t\tif (strictMinMax) {\n\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\tmin = minDefined;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmin = this._minReal;\n\t\t\t}\n\n\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\tmax = maxDefined;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmax = this._maxReal;\n\t\t\t}\n\n\t\t\tif (max - min <= 0.00000001) {\n\t\t\t\tmin -= this._deltaMinMax;\n\t\t\t\tmax += this._deltaMinMax;\n\t\t\t}\n\n\t\t\tmin -= (max - min) * extraMin;\n\t\t\tmax += (max - min) * extraMax;\n\t\t}\n\n\t\tminAdapted = this.adapters.fold(\"min\", min);\n\t\tmaxAdapted = this.adapters.fold(\"max\", max);\n\n\t\tif ($type.isNumber(minAdapted)) {\n\t\t\tmin = minAdapted;\n\t\t}\n\n\t\tif ($type.isNumber(maxAdapted)) {\n\t\t\tmax = maxAdapted;\n\t\t}\n\n\t\tif (minDiff == Infinity) {\n\t\t\tminDiff = (max - min)\n\t\t}\n\n\t\tconst syncWithAxis = this.get(\"syncWithAxis\");\n\t\tif (syncWithAxis) {\n\t\t\tminMaxStep = this._syncAxes(min, max, minMaxStep.step, syncWithAxis.getPrivate(\"minFinal\", syncWithAxis.getPrivate(\"min\", 0)), syncWithAxis.getPrivate(\"maxFinal\", syncWithAxis.getPrivate(\"max\", 1)), syncWithAxis.getPrivate(\"step\", 1));\n\t\t\tmin = minMaxStep.min;\n\t\t\tmax = minMaxStep.max;\n\t\t}\n\n\t\tthis.setPrivateRaw(\"maxZoomFactor\", (max - min) / minDiff * this.get(\"maxZoomFactor\", 100));\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tthis._minLogAdjusted = min;\n\t\t\tmin = this._minReal;\n\t\t\tmax = this._maxReal;\n\n\t\t\tif (min <= 0) {\n\t\t\t\tmin = initialMin * (1 - Math.min(extraMin, 0.99));\n\t\t\t}\n\t\t}\n\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\t\t\tif (this.getPrivate(\"minFinal\") !== min || this.getPrivate(\"maxFinal\") !== max) {\n\t\t\t\tthis.setPrivate(\"minFinal\", min);\n\t\t\t\tthis.setPrivate(\"maxFinal\", max);\n\n\t\t\t\tthis._saveMinMax(min, max);\n\n\t\t\t\tconst duration = this.get(\"interpolationDuration\", 0);\n\t\t\t\tconst easing = this.get(\"interpolationEasing\");\n\n\t\t\t\tthis.animatePrivate({ key: \"min\", to: min, duration, easing });\n\t\t\t\tthis.animatePrivate({ key: \"max\", to: max, duration, easing });\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _saveMinMax(_min:number, _max:number){\n\n\t}\n\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, strictMode?: boolean): IMinMaxStep {\n\t\t// will fail if 0\n\t\tif (gridCount <= 1) {\n\t\t\tgridCount = 1;\n\t\t}\n\n\t\tgridCount = Math.round(gridCount);\n\n\t\tlet initialMin: number = min;\n\t\tlet initialMax: number = max;\n\n\t\tlet difference = max - min;\n\n\t\t// in case min and max is the same, use max\n\t\tif (difference === 0) {\n\t\t\tdifference = Math.abs(max);\n\t\t}\n\n\t\t// the number by which we need to raise 10 to get difference\n\t\tlet exponent: number = Math.log(Math.abs(difference)) * Math.LOG10E;\n\n\t\t// here we find a number which is power of 10 and has the same count of numbers as difference has\n\t\tlet power = Math.pow(10, Math.floor(exponent));\n\n\t\t// reduce this number by 10 times\n\t\tpower = power / 10;\n\n\t\tlet extra: number = power;\n\t\tif (strictMode) {\n\t\t\textra = 0;\n\t\t}\n\n\t\t// round down min\n\t\tif (strictMode) {\n\t\t\tmin = Math.floor(min / power) * power;\n\t\t\t// round up max\n\t\t\tmax = Math.ceil(max / power) * power;\n\t\t}\n\t\telse {\n\t\t\tmin = Math.ceil(min / power) * power - extra;\n\t\t\t// round up max\n\t\t\tmax = Math.floor(max / power) * power + extra;\n\t\t}\n\n\t\t// don't let min go below 0 if real min is >= 0\n\t\tif (min < 0 && initialMin >= 0) {\n\t\t\tmin = 0;\n\t\t}\n\t\t// don't let max go above 0 if real max is <= 0\n\t\tif (max > 0 && initialMax <= 0) {\n\t\t\tmax = 0;\n\t\t}\n\n\t\texponent = Math.log(Math.abs(difference)) * Math.LOG10E;\n\t\tpower = Math.pow(10, Math.floor(exponent));\n\t\tpower = power / 100; // used to be 10 in v4, but this caused issue that there could be limited number of grids with even very small minGridDistance\n\n\t\t// approximate difference between two grid lines\n\t\tlet step = Math.ceil((difference / gridCount) / power) * power;\n\t\tlet stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\n\n\t\t// the step should divide by  2, 5, and 10.\n\t\tlet stepDivisor: number = Math.ceil(step / stepPower); // number 0 - 10\n\n\t\tif (stepDivisor > 5) {\n\t\t\tstepDivisor = 10;\n\t\t}\n\t\telse if (stepDivisor <= 5 && stepDivisor > 2) {\n\t\t\tstepDivisor = 5;\n\t\t}\n\n\t\t// now get real step\n\t\tstep = Math.ceil(step / (stepPower * stepDivisor)) * stepPower * stepDivisor;\n\n\t\tlet maxPrecision = this.get(\"maxPrecision\");\n\t\tif ($type.isNumber(maxPrecision)) {\n\t\t\tlet ceiledStep = $math.ceil(step, maxPrecision);\n\t\t\tif (maxPrecision < Number.MAX_VALUE && step !== ceiledStep) {\n\t\t\t\tstep = ceiledStep;\n\t\t\t}\n\t\t}\n\n\t\tlet decCount: number = 0;\n\t\t// in case numbers are smaller than 1\n\t\tif (stepPower < 1) {\n\t\t\t// exponent is less then 1 too. Count decimals of exponent\n\t\t\tdecCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 1;\n\t\t\t// round step\n\t\t\tstep = $math.round(step, decCount);\n\t\t}\n\n\t\t// final min and max\n\t\tlet minCount = Math.floor(min / step);\n\n\t\tmin = $math.round(step * minCount, decCount);\n\n\t\tlet maxCount: number;\n\n\t\tif (!strictMode) {\n\t\t\tmaxCount = Math.ceil(max / step);\n\t\t}\n\t\telse {\n\t\t\tmaxCount = Math.floor(max / step);\n\t\t}\n\n\t\tif (maxCount === minCount) {\n\t\t\tmaxCount++;\n\t\t}\n\n\t\tmax = $math.round(step * maxCount, decCount);\n\n\t\tif (max < initialMax) {\n\t\t\tmax = max + step;\n\t\t}\n\n\t\tif (min > initialMin) {\n\t\t\tmin = min - step;\n\t\t}\n\n\n\t\tstep = this.fixSmallStep(step);\n\n\t\treturn { min: min, max: max, step: step };\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number): string | undefined {\n\t\tconst numberFormat = this.get(\"tooltipNumberFormat\", this.get(\"numberFormat\"));\n\t\tconst formatter = this.getNumberFormatter();\n\t\tconst extraDecimals = this.get(\"extraTooltipPrecision\", 0);\n\t\tconst decimals = this.getPrivate(\"stepDecimalPlaces\", 0) + extraDecimals;\n\t\tconst value = $math.round(this.positionToValue(position), decimals);\n\n\t\tif (numberFormat) {\n\t\t\treturn formatter.format(value, numberFormat);\n\t\t}\n\t\telse {\n\t\t\treturn formatter.format(value, undefined, decimals);\n\t\t\t//label.set(\"text\", this.getNumberFormatter().format(value, undefined, this.getPrivate(\"stepDecimalPlaces\")));\n\t\t}\n\n\t\t// //@todo number formatter + tag\n\t\t// return $math.round(this.positionToValue(position), this.getPrivate(\"stepDecimalPlaces\")).toString();\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined {\n\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\tlet value = this.positionToValue(position);\n\n\t\tlet index: number | undefined = undefined;\n\t\tlet oldDiff: number;\n\t\t$array.each(series.dataItems, (dataItem, i) => {\n\t\t\tconst diff = Math.abs(dataItem.get(fieldName) - value);\n\t\t\tif (index === undefined || diff < oldDiff) {\n\t\t\t\tindex = i;\n\t\t\t\toldDiff = diff;\n\t\t\t}\n\t\t});\n\n\t\tif (index != null) {\n\t\t\treturn series.dataItems[index];\n\t\t}\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` values.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start value\n\t * @param  end       End value\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToValues(start: number, end: number, duration?: number) {\n\t\tconst min = this.getPrivate(\"minFinal\", 0);\n\t\tconst max = this.getPrivate(\"maxFinal\", 0);\n\t\tif (this.getPrivate(\"min\") != null && this.getPrivate(\"max\") != null) {\n\t\t\tthis.zoom((start - min) / (max - min), (end - min) / (max - min), duration);\n\t\t}\n\t}\n\n\n\t/**\n\t * Syncs with a target axis.\n\t *\n\t * @param  min  Min\n\t * @param  max  Max\n\t * @param  step Step\n\t */\n\tprotected _syncAxes(min: number, max: number, step: number, syncMin: number, syncMax: number, syncStep: number) {\n\t\tlet axis = this.get(\"syncWithAxis\");\n\t\tif (axis) {\n\t\t\tlet count: number = Math.round(syncMax - syncMin) / syncStep;\n\t\t\tlet currentCount = Math.round((max - min) / step);\n\n\t\t\tlet gridCount = this.get(\"renderer\").gridCount();\n\n\t\t\tif ($type.isNumber(count) && $type.isNumber(currentCount)) {\n\t\t\t\tlet synced = false;\n\t\t\t\tlet c = 0\n\t\t\t\tlet diff = (max - min) * 0.01;\n\t\t\t\tlet omin = min;\n\t\t\t\tlet omax = max;\n\t\t\t\tlet ostep = step;\n\n\t\t\t\twhile (synced != true) {\n\t\t\t\t\tsynced = this._checkSync(omin, omax, ostep, count);\n\t\t\t\t\tc++;\n\t\t\t\t\tif (c > 500) {\n\t\t\t\t\t\tsynced = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (!synced) {\n\t\t\t\t\t\tif (c / 3 == Math.round(c / 3)) {\n\t\t\t\t\t\t\tomin = min - diff * c;\n\t\t\t\t\t\t\tif (min >= 0 && omin < 0) {\n\t\t\t\t\t\t\t\tomin = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tomax = max + diff * c;\n\t\t\t\t\t\t\tif (omax <= 0 && omax > 0) {\n\t\t\t\t\t\t\t\tomax = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet minMaxStep = this._adjustMinMax(omin, omax, gridCount, true);\n\t\t\t\t\t\tomin = minMaxStep.min;\n\t\t\t\t\t\tomax = minMaxStep.max;\n\t\t\t\t\t\tostep = minMaxStep.step;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tmin = omin;\n\t\t\t\t\t\tmax = omax;\n\t\t\t\t\t\tstep = ostep;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { min: min, max: max, step: step };\n\t}\n\n\t/**\n\t * Returns `true` if axis needs to be resunced with some other axis.\n\t */\n\tprotected _checkSync(min: number, max: number, step: number, count: number): boolean {\n\t\tlet currentCount = (max - min) / step;\n\t\tfor (let i = 1; i < count; i++) {\n\t\t\tif ($math.round(currentCount / i, 1) == count || currentCount * i == count) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Template } from \"../../../core/util/Template\";\nimport type { ListTemplate } from \"../../../core/util/List\";\nimport type { CategoryAxis } from \"../axes/CategoryAxis\";\nimport type { DateAxis } from \"../axes/DateAxis\";\nimport type { ValueAxis } from \"../axes/ValueAxis\";\nimport type { ILegendDataItem } from \"../../../core/render/Legend\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\n\nimport { XYSeries, IXYSeriesPrivate, IXYSeriesSettings, IXYSeriesDataItem, IXYSeriesAxisRange } from \"./XYSeries\";\nimport { Percent } from \"../../../core/util/Percent\";\nimport { visualSettings } from \"../../../core/render/Graphics\";\n\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\n\nexport interface IBaseColumnSeriesDataItem extends IXYSeriesDataItem {\n\n\t/**\n\t * An actual [[Graphics]] element (Column/Slice/Candlestick/OHLC).\n\t */\n\tgraphics?: Graphics;\n\n\t/**\n\t * In case axis ranges are added to the series, it creates a separate\n\t * element ([[Graphics]]) for each axis range. This array holds them all.\n\t */\n\trangeGraphics?: Array<Graphics>;\n\n\t/**\n\t * If data items from this series are used to feed a [[Legend]], this\n\t * will hold a reference to the equivalent Legend data item.\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/legend/#Data_item_list} for more info\n\t */\n\tlegendDataItem?: DataItem<ILegendDataItem>;\n}\n\nexport interface IBaseColumnSeriesSettings extends IXYSeriesSettings {\n\n\t/**\n\t * Indicates if series must divvy up available space with other column\n\t * series (`true`; default) or take up the whole available space (`false`).\n\t *\n\t * @default true\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/column-series/#Clustering} for more info\n\t */\n\tclustered?: boolean;\n\n\t/**\n\t * Whether positions of bullets should be calculated based on portion of\n\t * column currently visual (`true`) or the whole length/height of the\n\t * column (`false`).\n\t *\n\t * @default true\n\t */\n\tadjustBulletPosition?: boolean;\n\n\t/**\n\t * If set to `true` will use color of the last visible column for legend\n\t * marker. Otherwise, series `fill`/`stroke` will be used.\n\t *\n\t * @since 5.1.13\n\t */\n\tuseLastColorForLegendMarker?: boolean\n\n}\n\nexport interface IBaseColumnSeriesPrivate extends IXYSeriesPrivate { }\n\nexport interface IBaseColumnSeriesAxisRange extends IXYSeriesAxisRange {\n\n\t/**\n\t * A list of actual [[Graphics]] elements for an axis range.\n\t *\n\t * Can be used to ajust the look of the axis range columns.\n\t */\n\tcolumns: ListTemplate<Graphics>;\n\n}\n\n/**\n * Base class for all \"column-based\" series\n */\nexport abstract class BaseColumnSeries extends XYSeries {\n\n\tdeclare public _settings: IBaseColumnSeriesSettings;\n\tdeclare public _privateSettings: IBaseColumnSeriesPrivate;\n\tdeclare public _dataItemSettings: IBaseColumnSeriesDataItem;\n\tdeclare public _axisRangeType: IBaseColumnSeriesAxisRange;\n\n\tpublic static className: string = \"BaseColumnSeries\";\n\tpublic static classNames: Array<string> = XYSeries.classNames.concat([BaseColumnSeries.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<Graphics>): Graphics\n\n\t/**\n\t * ListTemplate of columns in series.\n\t */\n\tpublic abstract columns: ListTemplate<Graphics>;\n\n\tprotected _makeGraphics(listTemplate: ListTemplate<Graphics>, dataItem: DataItem<this[\"_dataItemSettings\"]>): Graphics {\n\t\treturn this.makeColumn(dataItem, listTemplate);\n\t}\n\n\tprotected _ph: number = 0;\n\tprotected _pw: number = 0;\n\n\tpublic _makeFieldNames() {\n\t\tsuper._makeFieldNames();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tconst categoryAxis = \"CategoryAxis\";\n\t\tconst valueAxis = \"ValueAxis\";\n\n\t\tif (xAxis.isType<CategoryAxis<any>>(categoryAxis)) {\n\t\t\tif (!this.get(\"openCategoryXField\")) {\n\t\t\t\tthis._xOpenField = this._xField;\n\t\t\t}\n\t\t}\n\n\t\tif (xAxis.isType<DateAxis<any>>(valueAxis)) {\n\t\t\tif (!this.get(\"openValueXField\")) {\n\t\t\t\tthis._xOpenField = this._xField;\n\t\t\t}\n\t\t}\n\n\t\tif (yAxis.isType<CategoryAxis<any>>(categoryAxis)) {\n\t\t\tif (!this.get(\"openCategoryYField\")) {\n\t\t\t\tthis._yOpenField = this._yField;\n\t\t\t}\n\t\t}\n\n\t\tif (yAxis.isType<DateAxis<any>>(valueAxis)) {\n\t\t\tif (!this.get(\"openValueYField\")) {\n\t\t\t\tthis._yOpenField = this._yField;\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tconst len = this.dataItems.length;\n\t\tconst startIndex = Math.max(0, this.startIndex() - 2);\n\t\tconst endIndex = Math.min(this.endIndex() + 2, len - 1);\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\tthis._createGraphics(dataItem);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateChildren() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tthis._ph = chart.plotContainer.height();\n\t\t\tthis._pw = chart.plotContainer.width();\n\t\t}\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\")!;\n\n\t\tconst columnsTemplate = this.columns.template;\n\t\tif (this.isDirty(\"fill\")) {\n\t\t\tif (columnsTemplate.get(\"fill\") == null) {\n\t\t\t\tcolumnsTemplate.set(\"fill\", this.get(\"fill\"));\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"stroke\")) {\n\t\t\tif (columnsTemplate.get(\"stroke\") == null) {\n\t\t\t\tcolumnsTemplate.set(\"stroke\", this.get(\"stroke\"));\n\t\t\t}\n\t\t}\n\n\t\tlet index = 0;\n\t\tlet clusterCount = 0;\n\t\tlet i = 0;\n\n\t\t$array.each(baseAxis.series, (series) => {\n\t\t\tif (series instanceof BaseColumnSeries) {\n\t\t\t\tconst stacked = series.get(\"stacked\");\n\n\t\t\t\tif (stacked && i == 0) {\n\t\t\t\t\tclusterCount++;\n\t\t\t\t}\n\n\t\t\t\tif (!stacked && series.get(\"clustered\")) {\n\t\t\t\t\tclusterCount++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (series === this) {\n\t\t\t\tindex = clusterCount - 1;\n\t\t\t}\n\t\t\ti++;\n\t\t})\n\n\t\tif (!this.get(\"clustered\")) {\n\t\t\tindex = 0;\n\t\t\tclusterCount = 1;\n\t\t}\n\n\t\tif (clusterCount === 0) {\n\t\t\tclusterCount = 1;\n\t\t\tindex = 0;\n\t\t}\n\n\t\tconst xRenderer = xAxis.get(\"renderer\");\n\t\tconst yRenderer = yAxis.get(\"renderer\");\n\n\t\tconst cellStartLocation = \"cellStartLocation\";\n\t\tconst cellEndLocation = \"cellEndLocation\";\n\n\t\tconst cellLocationX0 = xRenderer.get(cellStartLocation, 0);\n\t\tconst cellLocationX1 = xRenderer.get(cellEndLocation, 1);\n\n\t\tconst cellLocationY0 = yRenderer.get(cellStartLocation, 0);\n\t\tconst cellLocationY1 = yRenderer.get(cellEndLocation, 1);\n\n\t\tthis._aLocationX0 = cellLocationX0 + (index / clusterCount) * (cellLocationX1 - cellLocationX0);\n\t\tthis._aLocationX1 = cellLocationX0 + (index + 1) / clusterCount * (cellLocationX1 - cellLocationX0);;\n\n\t\tthis._aLocationY0 = cellLocationY0 + (index / clusterCount) * (cellLocationY1 - cellLocationY0);\n\t\tthis._aLocationY1 = cellLocationY0 + (index + 1) / clusterCount * (cellLocationY1 - cellLocationY0);\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tif (this._axesDirty || this._valuesDirty || this._stackDirty || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._sizeDirty) {\n\t\t\t\tconst len = this.dataItems.length;\n\n\t\t\t\tlet startIndex = Math.max(0, this.startIndex() - 2);\n\t\t\t\tlet endIndex = Math.min(this.endIndex() + 2, len - 1);\n\n\t\t\t\tfor (let i = 0; i < startIndex; i++) {\n\t\t\t\t\tthis._toggleColumn(this.dataItems[i], false);\n\t\t\t\t}\n\t\t\t\tlet previous = this.dataItems[startIndex];\n\n\t\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tif (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n\t\t\t\t\t\tprevious = dataItem;\n\t\t\t\t\t\tif (i > 0 && startIndex > 0) {\n\t\t\t\t\t\t\tfor (let j = i - 1; j >= 0; j--) {\n\t\t\t\t\t\t\t\tlet dataItem = this.dataItems[j];\n\t\t\t\t\t\t\t\tif (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n\t\t\t\t\t\t\t\t\tprevious = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tthis._updateGraphics(dataItem, previous);\n\t\t\t\t\tif (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n\t\t\t\t\t\tprevious = dataItem;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (let i = endIndex + 1; i < len; i++) {\n\t\t\t\t\tthis._toggleColumn(this.dataItems[i], false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis._skipped = true;\n\t\t}\n\t\tthis.updateLegendMarker();\n\t\tsuper._updateChildren();\n\t}\n\n\tprotected _createGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet graphics = dataItem.get(\"graphics\");\n\t\tif (!graphics) {\n\t\t\tgraphics = this._makeGraphics(this.columns, dataItem);\n\t\t\tdataItem.set(\"graphics\", graphics);\n\t\t\tgraphics._setDataItem(dataItem);\n\n\t\t\tconst legendDataItem = dataItem.get(\"legendDataItem\");\n\t\t\tif (legendDataItem) {\n\t\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\t\t\t\tif (markerRectangle) {\n\t\t\t\t\tmarkerRectangle.setAll({ fill: graphics.get(\"fill\"), stroke: graphics.get(\"stroke\") });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\tconst container = axisRange.container!;\n\t\t\t\tconst graphicsArray: Array<Graphics> = dataItem.get(\"rangeGraphics\", []);\n\t\t\t\tdataItem.set(\"rangeGraphics\", graphicsArray);\n\n\t\t\t\tconst rangeGraphics = this._makeGraphics(axisRange.columns, dataItem);\n\t\t\t\tgraphicsArray.push(rangeGraphics);\n\t\t\t\trangeGraphics.setPrivate(\"list\", axisRange.columns);\n\t\t\t\tcontainer.children.push(rangeGraphics);\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _updateGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet graphics = dataItem.get(\"graphics\")!;\n\n\t\t//if (!graphics) {\n\t\t//\tthis._createGraphics(dataItem);\n\t\t//\tgraphics = dataItem.get(\"graphics\")!;\n\t\t//}\n\n\t\tconst xField = this._xField;\n\t\tconst yField = this._yField;\n\n\t\tconst valueX = dataItem.get(xField as any);\n\t\tconst valueY = dataItem.get(yField as any);\n\n\t\tif (valueX != null && valueY != null) {\n\t\t\tconst xOpenField = this._xOpenField;\n\t\t\tconst yOpenField = this._yOpenField;\n\n\t\t\tconst locationX = this.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\t\tconst locationY = this.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\t\tconst openLocationX = this.get(\"openLocationX\", dataItem.get(\"openLocationX\", locationX));\n\t\t\tconst openLocationY = this.get(\"openLocationY\", dataItem.get(\"openLocationY\", locationY));\n\n\t\t\tconst width = graphics.get(\"width\");\n\t\t\tconst height = graphics.get(\"height\");\n\n\t\t\tconst stacked = this.get(\"stacked\");\n\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\t\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\t\tconst xStart = xAxis.get(\"start\");\n\t\t\tconst xEnd = xAxis.get(\"end\");\n\n\t\t\tconst yStart = yAxis.get(\"start\");\n\t\t\tconst yEnd = yAxis.get(\"end\");\n\n\t\t\tlet l!: number;\n\t\t\tlet r!: number;\n\t\t\tlet t!: number;\n\t\t\tlet b!: number;\n\n\t\t\tlet vcy = this.get(\"vcy\", 1);\n\t\t\tlet vcx = this.get(\"vcx\", 1);\n\n\t\t\tlet fitW = false;\n\t\t\tlet fitH = false;\n\n\t\t\tif (yAxis.isType<CategoryAxis<any>>(\"CategoryAxis\") && xAxis.isType<CategoryAxis<any>>(\"CategoryAxis\")) {\n\n\t\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\t\tif (width instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - width.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, startLocation, vcx);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, endLocation, vcx);\n\n\t\t\t\tstartLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\t\tendLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\t\tif (height instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - height.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yOpenField, startLocation, vcy);\n\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yField, endLocation, vcy);\n\n\t\t\t\tdataItem.setRaw(\"point\", { x: l + (r - l) / 2, y: t + (b - t) / 2 });\n\t\t\t}\n\t\t\telse if (xAxis === baseAxis) {\n\n\t\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\t\tif (width instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - width.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, startLocation, vcx);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, endLocation, vcx);\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yField, locationY, vcy);\n\n\t\t\t\tif (this._yOpenField !== this._yField) {\n\t\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yOpenField, openLocationY, vcy);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\tb = yAxis.getDataItemPositionY(stackToItemY, yField, openLocationY, (stackToItemY.component as XYSeries).get(\"vcy\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tb = yAxis.basePosition();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tb = yAxis.basePosition();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tdataItem.setRaw(\"point\", { x: l + (r - l) / 2, y: t });\n\n\t\t\t\tfitH = true;\n\t\t\t}\n\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\tlet startLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\t\tlet endLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\t\tif (height instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - height.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yOpenField, startLocation, vcy);\n\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yField, endLocation, vcy);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, locationX, vcx);\n\n\t\t\t\tif (this._xOpenField !== this._xField) {\n\t\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, openLocationX, vcx);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\tl = xAxis.getDataItemPositionX(stackToItemX, xField, openLocationX, (stackToItemX.component as XYSeries).get(\"vcx\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tl = xAxis.basePosition();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tl = xAxis.basePosition();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfitW = true;\n\n\t\t\t\tdataItem.setRaw(\"point\", { x: r, y: t + (b - t) / 2 });\n\t\t\t}\n\n\t\t\tthis._updateSeriesGraphics(dataItem, graphics!, l, r, t, b, fitW, fitH);\n\n\t\t\tif ((l < xStart && r < xStart) || (l > xEnd && r > xEnd) || (t < yStart && b < yStart) || (t > yEnd && b > yEnd)) {\n\t\t\t\tthis._toggleColumn(dataItem, false);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._toggleColumn(dataItem, true);\n\t\t\t}\n\n\t\t\tlet rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\t\tif (rangeGraphics) {\n\t\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\t\tthis._updateSeriesGraphics(dataItem, graphics, l, r, t, b, fitW, fitH);\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tthis._applyGraphicsStates(dataItem, previousDataItem);\n\t\t}\n\t}\n\n\tprotected _updateSeriesGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, graphics: Graphics, l: number, r: number, t: number, b: number, fitW: boolean, fitH: boolean) {\n\t\tconst width = graphics.get(\"width\");\n\t\tconst height = graphics.get(\"height\");\n\t\tconst maxWidth = graphics.get(\"maxWidth\");\n\t\tconst maxHeight = graphics.get(\"maxHeight\");\n\n\t\tconst ptl = this.getPoint(l, t);\n\t\tconst pbr = this.getPoint(r, b);\n\n\t\tconst tooltipPoint = dataItem.get(\"point\");\n\n\t\tif (tooltipPoint) {\n\t\t\tconst point = this.getPoint(tooltipPoint.x, tooltipPoint.y);\n\t\t\ttooltipPoint.x = point.x + this._x;\n\t\t\ttooltipPoint.y = point.y + this._y;\n\t\t}\n\n\t\tl = ptl.x;\n\t\tr = pbr.x;\n\n\t\tt = ptl.y;\n\t\tb = pbr.y;\n\n\t\tif ($type.isNumber(width)) {\n\t\t\tconst offset: number = ((r - l) - width) / 2;\n\t\t\tl += offset;\n\t\t\tr -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(maxWidth) && maxWidth < Math.abs(r - l)) {\n\t\t\tconst offset: number = ((r - l) - maxWidth) / 2;\n\t\t\tl += offset;\n\t\t\tr -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(height)) {\n\t\t\tconst offset: number = ((b - t) - height) / 2;\n\t\t\tt += offset;\n\t\t\tb -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(maxHeight) && maxHeight < Math.abs(b - t)) {\n\t\t\tconst offset: number = ((b - t) - maxHeight) / 2;\n\t\t\tt += offset;\n\t\t\tb -= offset;\n\t\t}\n\n\t\tif (this.get(\"adjustBulletPosition\")) {\n\t\t\tif (fitW) {\n\t\t\t\tr = Math.min(Math.max(0, r), this._pw);\n\t\t\t\tl = Math.min(Math.max(0, l), this._pw);\n\t\t\t}\n\n\t\t\tif (fitH) {\n\t\t\t\tt = Math.min(Math.max(0, t), this._ph);\n\t\t\t\tb = Math.min(Math.max(0, b), this._ph);\n\t\t\t}\n\t\t}\n\n\t\tdataItem.setRaw(\"left\", l);\n\t\tdataItem.setRaw(\"right\", r);\n\t\tdataItem.setRaw(\"top\", t);\n\t\tdataItem.setRaw(\"bottom\", b);\n\n\t\tgraphics.setPrivate(\"width\", r - l);\n\t\tgraphics.setPrivate(\"height\", b - t);\n\t\tgraphics.set(\"x\", l);\n\t\tgraphics.set(\"y\", b - (b - t));\n\t}\n\n\tprotected _handleDataSetChange() {\n\t\tsuper._handleDataSetChange();\n\t\t$array.each(this._dataItems, (dataItem) => {\n\t\t\tthis._toggleColumn(dataItem, false);\n\t\t})\n\t}\n\n\tpublic _applyGraphicsStates(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t\tconst graphics = dataItem.get(\"graphics\")!;\n\n\t\tconst dropFromOpen = graphics.states.lookup(\"dropFromOpen\");\n\t\tconst riseFromOpen = graphics.states.lookup(\"riseFromOpen\");\n\n\t\tconst dropFromPrevious = graphics.states.lookup(\"dropFromPrevious\");\n\t\tconst riseFromPrevious = graphics.states.lookup(\"riseFromPrevious\");\n\n\t\tif (dropFromOpen || dropFromPrevious || riseFromOpen || riseFromPrevious) {\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\t\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\t\tlet open: number | undefined;\n\t\t\tlet close: number | undefined;\n\t\t\tlet previousClose: number | undefined;\n\n\t\t\tif (baseAxis === xAxis && yAxis.isType<ValueAxis<any>>(\"ValueAxis\")) {\n\t\t\t\topen = dataItem.get(this._yOpenField as any);\n\t\t\t\tclose = dataItem.get(this._yField as any);\n\n\t\t\t\tpreviousClose = previousDataItem.get(this._yField as any);\n\t\t\t}\n\t\t\telse if (baseAxis === yAxis && xAxis.isType<ValueAxis<any>>(\"ValueAxis\")) {\n\t\t\t\topen = dataItem.get(this._xOpenField as any);\n\t\t\t\tclose = dataItem.get(this._xField as any);\n\n\t\t\t\tpreviousClose = previousDataItem.get(this._xField as any);\n\t\t\t}\n\n\t\t\tif ($type.isNumber(open) && $type.isNumber(close)) {\n\t\t\t\tif (close < open) {\n\t\t\t\t\tif (dropFromOpen) {\n\t\t\t\t\t\tdropFromOpen.apply();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (riseFromOpen) {\n\t\t\t\t\t\triseFromOpen.apply();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ($type.isNumber(previousClose)) {\n\t\t\t\t\tif (close < previousClose) {\n\t\t\t\t\t\tif (dropFromPrevious) {\n\t\t\t\t\t\t\tdropFromPrevious.apply();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (riseFromPrevious) {\n\t\t\t\t\t\t\triseFromPrevious.apply();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tthis.columns.removeValue(graphics);\n\t\t\tgraphics.dispose();\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tconst list = graphics.getPrivate(\"list\");\n\t\t\t\tif (list) {\n\t\t\t\t\tlist.removeValue(graphics);\n\t\t\t\t}\n\t\t\t\tgraphics.dispose();\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Hides series's data item.\n\t * \n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tpromises.push(graphics.hide(duration));\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tpromises.push(graphics.hide(duration));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\tprotected _toggleColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, visible: boolean) {\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tgraphics.setPrivate(\"visible\", visible);\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tgraphics.setPrivate(\"visible\", visible);\n\t\t\t})\n\t\t}\n\n\t\tconst bullets = dataItem.bullets;\n\t\tif (bullets) {\n\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\tbullet.setPrivate(\"hidden\", !visible);\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Shows series's data item.\n\t * \n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tpromises.push(graphics.show(duration));\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tpromises.push(graphics.show(duration));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLegendMarker(dataItem?: DataItem<IBaseColumnSeriesDataItem>) {\n\t\tlet legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (this.get(\"useLastColorForLegendMarker\")) {\n\t\t\tif (!dataItem) {\n\t\t\t\tconst lastDataItem = this.dataItems[this.endIndex() - 1];\n\t\t\t\tif (lastDataItem) {\n\t\t\t\t\tdataItem = lastDataItem;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (legendDataItem) {\n\n\t\t\tlet graphics: Template<Graphics> | Graphics = this.columns.template;\n\t\t\tif (dataItem) {\n\t\t\t\tlet column = dataItem.get(\"graphics\");\n\t\t\t\tif (column) {\n\t\t\t\t\tgraphics = column;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\n\t\t\tif (markerRectangle) {\n\t\t\t\tif (!legendDataItem.get(\"itemContainer\").get(\"disabled\")) {\n\t\t\t\t\t$array.each(visualSettings, (setting: any) => {\n\t\t\t\t\t\tmarkerRectangle.set(setting, graphics.get(setting, this.get(setting)));\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\tprotected _getTooltipTarget(dataItem: DataItem<this[\"_dataItemSettings\"]>): Sprite {\n\t\tif (this.get(\"seriesTooltipTarget\") == \"bullet\") {\n\t\t\treturn super._getTooltipTarget(dataItem);\n\t\t}\n\n\t\tlet column = dataItem.get(\"graphics\");\n\t\tif (column) {\n\t\t\treturn column;\n\t\t}\n\t\treturn this;\n\t}\n}\n","import { RoundedRectangle, IRoundedRectangleSettings, IRoundedRectanglePrivate } from \"../../../core/render/RoundedRectangle\";\n\n\nexport interface ICandlestickSettings extends IRoundedRectangleSettings {\n\n\t/**\n\t * X0 position of the low value in pixels.\n\t */\n\tlowX0?: number;\n\n\t/**\n\t * Y0 position of the low value in pixels.\n\t */\n\tlowY0?: number;\n\n\t/**\n\t * X2 position of the low value in pixels.\n\t */\n\tlowX1?: number;\n\n\t/**\n\t * Y1 position of the low value in pixels.\n\t */\n\tlowY1?: number;\n\n\t/**\n\t * X0 position of the high value in pixels.\n\t */\n\thighX0?: number;\n\n\t/**\n\t * Y0 position of the high value in pixels.\n\t */\n\thighY0?: number;\n\n\t/**\n\t * Xz position of the high value in pixels.\n\t */\n\thighX1?: number;\n\n\t/**\n\t * Y1 position of the high value in pixels.\n\t */\n\thighY1?: number;\n\n\t/**\n\t * Orientation of the cnadlestick.\n\t */\n\torientation?: \"horizontal\" | \"vertical\"\n\n}\n\nexport interface ICandlestickPrivate extends IRoundedRectanglePrivate {\n}\n\n/**\n * A candle element used in a [[CandlestickSeries]].\n */\nexport class Candlestick extends RoundedRectangle {\n\n\tdeclare public _settings: ICandlestickSettings;\n\tdeclare public _privateSettings: ICandlestickPrivate;\n\n\tpublic static className: string = \"Candlestick\";\n\tpublic static classNames: Array<string> = RoundedRectangle.classNames.concat([Candlestick.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"lowX0\") || this.isDirty(\"lowY0\") || this.isDirty(\"lowX1\") || this.isDirty(\"lowY1\") || this.isDirty(\"highX0\") || this.isDirty(\"highX1\") || this.isDirty(\"highY0\") || this.isDirty(\"highY1\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n\n\tpublic _draw() {\n\t\tsuper._draw();\n\n\t\tconst display = this._display;\n\n\t\tdisplay.moveTo(this.get(\"lowX0\", 0), this.get(\"lowY0\", 0));\n\t\tdisplay.lineTo(this.get(\"lowX1\", 0), this.get(\"lowY1\", 0));\n\n\t\tdisplay.moveTo(this.get(\"highX0\", 0), this.get(\"highY0\", 0));\n\t\tdisplay.lineTo(this.get(\"highX1\", 0), this.get(\"highY1\", 0));\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\n\nimport { ColumnSeries, IColumnSeriesPrivate, IColumnSeriesSettings, IColumnSeriesDataItem, IColumnSeriesAxisRange } from \"./ColumnSeries\";\nimport { Candlestick } from \"./Candlestick\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\n\nimport * as $utils from \"../../../core/util/Utils\";\nimport * as $array from \"../../../core/util/Array\";\n\nexport interface ICandlestickSeriesDataItem extends IColumnSeriesDataItem {\n}\n\nexport interface ICandlestickSeriesSettings extends IColumnSeriesSettings {\n}\n\nexport interface ICandlestickSeriesPrivate extends IColumnSeriesPrivate {\n}\n\nexport interface ICandlestickSeriesAxisRange extends IColumnSeriesAxisRange {\n\n\t/**\n\t * A list of [[Candlestick]] element in series.\n\t *\n\t * @readonly\n\t */\n\tcolumns: ListTemplate<Candlestick>\n\n}\n\n/**\n * Candlestick series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n * @important\n */\nexport class CandlestickSeries extends ColumnSeries {\n\n\tdeclare public _settings: ICandlestickSeriesSettings;\n\tdeclare public _privateSettings: ICandlestickSeriesPrivate;\n\tdeclare public _dataItemSettings: ICandlestickSeriesDataItem;\n\tdeclare public _axisRangeType: ICandlestickSeriesAxisRange;\n\n\tpublic static className: string = \"CandlestickSeries\";\n\tpublic static classNames: Array<string> = ColumnSeries.classNames.concat([CandlestickSeries.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<Candlestick>): Candlestick {\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\n\t\tcolumn._setDataItem(dataItem);\n\t\tlistTemplate.push(column);\n\t\treturn column;\n\t}\n\n\t/**\n\t * A list of candles in the series.\n\t *\n\t * `columns.template` can be used to configure candles.\n\t *\n\t * @default new ListTemplate<Candlestick>\n\t */\n\tpublic readonly columns: ListTemplate<Candlestick> = new ListTemplate(\n\t\tTemplate.new({\n\t\t\tthemeTags: [\"autocolor\"]\n\t\t}),\n\t\t() => Candlestick._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"candlestick\", \"series\", \"column\"])\n\t\t}, [this.columns.template])\n\t);\n\n\tprotected _updateGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._updateGraphics(dataItem, previousDataItem);\n\n\t\tconst xAxis = this.getRaw(\"xAxis\");\n\t\tconst yAxis = this.getRaw(\"yAxis\");\n\t\tconst baseAxis = this.getRaw(\"baseAxis\");\n\n\t\tlet vcy = this.get(\"vcy\", 1);\n\t\tlet vcx = this.get(\"vcx\", 1);\n\n\t\tlet lx0: number;\n\t\tlet lx1: number;\n\t\tlet ly0: number;\n\t\tlet ly1: number;\n\n\t\tlet hx0: number;\n\t\tlet hx1: number;\n\t\tlet hy0: number;\n\t\tlet hy1: number;\n\n\t\tlet locationX = this.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\tlet locationY = this.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\tlet openLocationX = this.get(\"openLocationX\", dataItem.get(\"openLocationX\", locationX));\n\t\tlet openLocationY = this.get(\"openLocationY\", dataItem.get(\"openLocationY\", locationY));\n\n\t\tlet orientation: \"horizontal\" | \"vertical\";\n\n\t\tif (yAxis === baseAxis) {\n\t\t\tlet open = xAxis.getDataItemPositionX(dataItem, this._xOpenField, 1, vcx);\n\t\t\tlet close = xAxis.getDataItemPositionX(dataItem, this._xField, 1, vcx);\n\n\t\t\tlx1 = xAxis.getDataItemPositionX(dataItem, this._xLowField, 1, vcx);\n\t\t\thx1 = xAxis.getDataItemPositionX(dataItem, this._xHighField, 1, vcx);\n\n\t\t\thx0 = Math.max(open, close);\n\t\t\tlx0 = Math.min(open, close);\n\n\t\t\tlet startLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\tlet endLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\tly0 = yAxis.getDataItemPositionY(dataItem, this._yField, startLocation + (endLocation - startLocation) / 2, vcy);\n\t\t\tly1 = ly0;\n\t\t\thy0 = ly0;\n\t\t\thy1 = ly0;\n\n\t\t\torientation = \"horizontal\";\n\t\t}\n\t\telse {\n\t\t\tlet open = yAxis.getDataItemPositionY(dataItem, this._yOpenField, 1, vcy);\n\t\t\tlet close = yAxis.getDataItemPositionY(dataItem, this._yField, 1, vcy);\n\n\t\t\tly1 = yAxis.getDataItemPositionY(dataItem, this._yLowField, 1, vcy);\n\t\t\thy1 = yAxis.getDataItemPositionY(dataItem, this._yHighField, 1, vcy);\n\n\t\t\thy0 = Math.max(open, close);\n\t\t\tly0 = Math.min(open, close);\n\n\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\tlx0 = xAxis.getDataItemPositionX(dataItem, this._xField, startLocation + (endLocation - startLocation) / 2, vcx);\n\t\t\tlx1 = lx0;\n\t\t\thx0 = lx0;\n\t\t\thx1 = lx0;\n\n\t\t\torientation = \"vertical\";\n\t\t}\n\n\t\tthis._updateCandleGraphics(dataItem, lx0, lx1, ly0, ly1, hx0, hx1, hy0, hy1, orientation)\n\t}\n\n\tprotected _updateCandleGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, lx0: number, lx1: number, ly0: number, ly1: number, hx0: number, hx1: number, hy0: number, hy1: number, orientation: \"horizontal\" | \"vertical\") {\n\t\tlet column = dataItem.get(\"graphics\") as Candlestick;\n\n\t\tif (column) {\n\t\t\tlet pl0 = this.getPoint(lx0, ly0);\n\t\t\tlet pl1 = this.getPoint(lx1, ly1);\n\n\t\t\tlet ph0 = this.getPoint(hx0, hy0);\n\t\t\tlet ph1 = this.getPoint(hx1, hy1);\n\n\t\t\tlet x = column.x();\n\t\t\tlet y = column.y();\n\n\t\t\tcolumn.set(\"lowX0\", pl0.x - x);\n\t\t\tcolumn.set(\"lowY0\", pl0.y - y);\n\n\t\t\tcolumn.set(\"lowX1\", pl1.x - x);\n\t\t\tcolumn.set(\"lowY1\", pl1.y - y);\n\n\t\t\tcolumn.set(\"highX0\", ph0.x - x);\n\t\t\tcolumn.set(\"highY0\", ph0.y - y);\n\n\t\t\tcolumn.set(\"highX1\", ph1.x - x);\n\t\t\tcolumn.set(\"highY1\", ph1.y - y);\n\n\t\t\tcolumn.set(\"orientation\", orientation);\n\n\t\t\tlet rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\t\tif (rangeGraphics) {\n\t\t\t\t$array.each(rangeGraphics, (column: any) => {\n\t\t\t\t\tcolumn.set(\"lowX0\", pl0.x - x);\n\t\t\t\t\tcolumn.set(\"lowY0\", pl0.y - y);\n\n\t\t\t\t\tcolumn.set(\"lowX1\", pl1.x - x);\n\t\t\t\t\tcolumn.set(\"lowY1\", pl1.y - y);\n\n\t\t\t\t\tcolumn.set(\"highX0\", ph0.x - x);\n\t\t\t\t\tcolumn.set(\"highY0\", ph0.y - y);\n\n\t\t\t\t\tcolumn.set(\"highX1\", ph1.x - x);\n\t\t\t\t\tcolumn.set(\"highY1\", ph1.y - y);\n\n\t\t\t\t\tcolumn.set(\"orientation\", orientation);\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tsuper._processAxisRange(axisRange);\n\t\taxisRange.columns = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Candlestick._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"candlestick\", \"series\", \"column\"]),\n\t\t\t}, [this.columns.template, axisRange.columns.template])\n\t\t);\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\r\n\r\nimport { BaseColumnSeries, IBaseColumnSeriesPrivate, IBaseColumnSeriesSettings, IBaseColumnSeriesDataItem, IBaseColumnSeriesAxisRange } from \"./BaseColumnSeries\";\r\nimport { Template } from \"../../../core/util/Template\";\r\nimport { ListTemplate } from \"../../../core/util/List\";\r\nimport { RoundedRectangle } from \"../../../core/render/RoundedRectangle\";\r\n\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n\r\nexport interface IColumnSeriesDataItem extends IBaseColumnSeriesDataItem { }\r\n\r\nexport interface IColumnSeriesSettings extends IBaseColumnSeriesSettings { }\r\n\r\nexport interface IColumnSeriesPrivate extends IBaseColumnSeriesPrivate { }\r\n\r\nexport interface IColumnSeriesAxisRange extends IBaseColumnSeriesAxisRange {\r\n\t/**\r\n\t * A list of actual columns in a range.\r\n\t */\r\n\tcolumns: ListTemplate<RoundedRectangle>\r\n}\r\n\r\nexport class ColumnSeries extends BaseColumnSeries {\r\n\r\n\tdeclare public _settings: IColumnSeriesSettings;\r\n\tdeclare public _privateSettings: IColumnSeriesPrivate;\r\n\tdeclare public _dataItemSettings: IColumnSeriesDataItem;\r\n\tdeclare public _axisRangeType: IColumnSeriesAxisRange;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<RoundedRectangle>): RoundedRectangle {\r\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\r\n\t\tcolumn._setDataItem(dataItem);\r\n\t\tlistTemplate.push(column);\r\n\t\treturn column;\r\n\t}\r\n\r\n\t/**\r\n\t * A [[TemplateList]] of all columns in series.\r\n\t *\r\n\t * `columns.template` can be used to set default settings for all columns,\r\n\t * or to change on existing ones.\r\n\t */\r\n\tpublic readonly columns: ListTemplate<RoundedRectangle> = new ListTemplate(\r\n\t\tTemplate.new({}),\r\n\t\t() => RoundedRectangle._new(this._root, {\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"series\", \"column\"])\r\n\t\t}, [this.columns.template])\r\n\t);\r\n\r\n\tpublic static className: string = \"ColumnSeries\";\r\n\tpublic static classNames: Array<string> = BaseColumnSeries.classNames.concat([ColumnSeries.className]);\r\n\r\n\r\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\r\n\t\tsuper._processAxisRange(axisRange);\r\n\t\taxisRange.columns = new ListTemplate(\r\n\t\t\tTemplate.new({}),\r\n\t\t\t() => RoundedRectangle._new(this._root, {\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"series\", \"column\"]),\r\n\t\t\t}, [this.columns.template, axisRange.columns.template])\r\n\t\t);\r\n\t}\r\n}\r\n","import { XYSeries, IXYSeriesPrivate, IXYSeriesSettings, IXYSeriesDataItem, IXYSeriesAxisRange } from \"./XYSeries\";\nimport { Graphics } from \"../../../core/render/Graphics\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport { CurveFactory, line, area } from \"d3-shape\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport { color } from \"../../../core/util/Color\";\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\nimport type { Axis } from \"../axes/Axis\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IPointOptions {\n}\n\nexport interface ILineSeriesDataItem extends IXYSeriesDataItem {\n}\n\nexport interface ILineSeriesSettings extends IXYSeriesSettings {\n\n\t/**\n\t * If set to `true` the line will connect over \"gaps\" - categories or time\n\t * intervals with no data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Gaps} for more info\n\t * @default true\n\t */\n\tconnect?: boolean;\n\n\t/**\n\t * If there are more than `autoGapCount` base time intervals (e.g. days) with\n\t * no data, the line will break and will display gap.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Auto_gaps_with_dates} for more info\n\t * @default 1.1\n\t */\n\tautoGapCount?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tcurveFactory?: CurveFactory;\n}\n\nexport interface ILineSeriesPrivate extends IXYSeriesPrivate {\n}\n\n/**\n * Interface representing a [[LineSeries]] axis range.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Series_axis_ranges} for more info\n */\nexport interface ILineSeriesAxisRange extends IXYSeriesAxisRange {\n\n\t/**\n\t * A list template to use when applying line settings to the line segments covered\n\t * by an axis range.\n\t */\n\tstrokes?: ListTemplate<Graphics>;\n\n\t/**\n\t * A list template to use when applying fill settings to the fill segments covered\n\t * by an axis range.\n\t */\n\tfills?: ListTemplate<Graphics>;\n}\n\n/**\n * Used to plot line and/or area series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/} for more info\n * @important\n */\nexport class LineSeries extends XYSeries {\n\n\tdeclare public _settings: ILineSeriesSettings;\n\tdeclare public _privateSettings: ILineSeriesPrivate;\n\tdeclare public _dataItemSettings: ILineSeriesDataItem;\n\tdeclare public _axisRangeType: ILineSeriesAxisRange;\n\n\tpublic static className: string = \"LineSeries\";\n\tpublic static classNames: Array<string> = XYSeries.classNames.concat([LineSeries.className]);\n\n\tprotected _endIndex!: number;\n\n\tprotected _strokeGenerator = line();\n\tprotected _fillGenerator = area();\n\n\tprotected _legendStroke?: Graphics;\n\tprotected _legendFill?: Graphics;\n\n\tprotected _afterNew() {\n\t\tthis._fillGenerator.y0(function(p: number[]) {\n\t\t\treturn p[3];\n\t\t});\n\n\t\tthis._fillGenerator.x0(function(p: number[]) {\n\t\t\treturn p[2];\n\t\t});\n\n\t\tthis._fillGenerator.y1(function(p: number[]) {\n\t\t\treturn p[1];\n\t\t});\n\n\t\tthis._fillGenerator.x1(function(p: number[]) {\n\t\t\treturn p[0];\n\t\t});\n\n\t\tsuper._afterNew();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeStroke(strokes: ListTemplate<Graphics>): Graphics {\n\t\tconst stroke = this.mainContainer.children.push(strokes.make());\n\t\tstrokes.push(stroke);\n\t\treturn stroke;\n\t}\n\n\t/**\n\t * A [[TemplateList]] of all line segments in series.\n\t *\n\t * `strokes.template` can be used to set default settings for all line\n\t * segments, or to change on existing ones.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly strokes: ListTemplate<Graphics> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"stroke\"])\n\t\t}, [this.strokes.template]),\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeFill(fills: ListTemplate<Graphics>): Graphics {\n\t\tconst fill = this.mainContainer.children.push(fills.make());\n\t\tfills.push(fill);\n\t\treturn fill;\n\t}\n\n\t/**\n\t * A [[TemplateList]] of all segment fills in series.\n\t *\n\t * `fills.template` can be used to set default settings for all segment\n\t * fills, or to change on existing ones.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly fills: ListTemplate<Graphics> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"fill\"])\n\t\t}, [this.fills.template]),\n\t);\n\n\t// custom set from data\n\tprotected _fillTemplate: Template<Graphics> | undefined;\n\tprotected _strokeTemplate: Template<Graphics> | undefined;\n\n\tpublic _updateChildren() {\n\n\t\tthis._strokeTemplate = undefined;\n\t\tthis._fillTemplate = undefined;\n\n\t\tlet xAxis = this.get(\"xAxis\");\n\t\tlet yAxis = this.get(\"yAxis\");\n\n\t\tif (this.isDirty(\"stroke\")) {\n\t\t\tconst stroke = this.get(\"stroke\");\n\t\t\tthis.strokes.template.set(\"stroke\", stroke);\n\t\t\tconst legendStroke = this._legendStroke;\n\t\t\tif (legendStroke) {\n\t\t\t\tlegendStroke.states.lookup(\"default\")!.set(\"stroke\", stroke);\n\t\t\t}\n\t\t}\n\t\tif (this.isDirty(\"fill\")) {\n\t\t\tconst fill = this.get(\"fill\");\n\t\t\tthis.fills.template.set(\"fill\", fill);\n\t\t\tconst legendFill = this._legendFill;\n\t\t\tif (legendFill) {\n\t\t\t\tlegendFill.states.lookup(\"default\")!.set(\"fill\", fill);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"curveFactory\")) {\n\t\t\tconst curveFactory = this.get(\"curveFactory\")!;\n\t\t\tif (curveFactory) {\n\t\t\t\tthis._strokeGenerator.curve(curveFactory);\n\t\t\t\tthis._fillGenerator.curve(curveFactory);\n\t\t\t}\n\t\t}\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tif (this._axesDirty || this._valuesDirty || this._stackDirty || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._sizeDirty || this.isDirty(\"connect\") || this.isDirty(\"curveFactory\")) {\n\n\t\t\t\tthis.fills.each((fill) => {\n\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t})\n\n\t\t\t\tthis.strokes.each((fill) => {\n\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t})\n\n\t\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\t\tlet fills = axisRange.fills;\n\t\t\t\t\tif (fills) {\n\t\t\t\t\t\tfills.each((fill) => {\n\t\t\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\n\t\t\t\t\tlet strokes = axisRange.strokes;\n\t\t\t\t\tif (strokes) {\n\t\t\t\t\t\tstrokes.each((stroke) => {\n\t\t\t\t\t\t\tstroke.setPrivate(\"visible\", false);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tlet startIndex = this.startIndex();\n\n\t\t\t\tlet strokeTemplateField = this.strokes.template.get(\"templateField\");\n\t\t\t\tlet fillTemplateField = this.fills.template.get(\"templateField\");\n\n\t\t\t\tlet strokeTemplateFound = true;\n\t\t\t\tlet fillTemplateFound = true;\n\n\t\t\t\tif (strokeTemplateField) {\n\t\t\t\t\tstrokeTemplateFound = false;\n\t\t\t\t}\n\t\t\t\tif (fillTemplateField) {\n\t\t\t\t\tfillTemplateFound = false;\n\t\t\t\t}\n\n\t\t\t\tfor (let i = startIndex - 1; i >= 0; i--) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tlet hasValues = true;\n\t\t\t\t\tlet dataContext = dataItem.dataContext as any;\n\t\t\t\t\tif (strokeTemplateField) {\n\t\t\t\t\t\tif (dataContext[strokeTemplateField]) {\n\t\t\t\t\t\t\tstrokeTemplateFound = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (fillTemplateField) {\n\t\t\t\t\t\tif (dataContext[fillTemplateField]) {\n\t\t\t\t\t\t\tfillTemplateFound = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\tif (!$type.isNumber(dataItem.get(field as any))) {\n\t\t\t\t\t\t\thasValues = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\tif (hasValues && strokeTemplateFound && fillTemplateFound) {\n\t\t\t\t\t\tstartIndex = i;\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet len = this.dataItems.length;\n\t\t\t\tlet endIndex = this.endIndex();\n\n\t\t\t\tif (endIndex < len) {\n\t\t\t\t\tendIndex++;\n\t\t\t\t\tfor (let i = endIndex; i < len; i++) {\n\t\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\t\tlet hasValues = true;\n\t\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\t\tif (!$type.isNumber(dataItem.get(field as any))) {\n\t\t\t\t\t\t\t\thasValues = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\tif (hasValues) {\n\t\t\t\t\t\t\tendIndex = i + 1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(startIndex > 0){\n\t\t\t\t\tstartIndex--\n\t\t\t\t}\n\n\t\t\t\tthis._endIndex = endIndex;\n\n\t\t\t\tthis._clearGraphics();\n\n\t\t\t\tthis._startSegment(0, startIndex);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis._skipped = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n\n\tprotected _clearGraphics() {\n\t\tthis.strokes.clear();\n\t\tthis.fills.clear();\n\t}\n\n\tprotected _startSegment(segmentIndex: number, dataItemIndex: number) {\n\t\tlet endIndex = this._endIndex;\n\t\tlet currentEndIndex = endIndex;\n\n\t\tconst autoGapCount = this.get(\"autoGapCount\")!;\n\t\tconst connect = this.get(\"connect\");\n\n\t\tconst fill = this.makeFill(this.fills);\n\n\t\tconst fillTemplate = this._fillTemplate;\n\t\tconst originalTemplate = this.fills.template;\n\t\tif (fillTemplate && fillTemplate != originalTemplate) {\n\t\t\tfill.template = fillTemplate;\n\t\t}\n\n\t\tfill.setPrivate(\"visible\", true);\n\n\t\tconst stroke = this.makeStroke(this.strokes);\n\n\t\tconst strokeTemplate = this._strokeTemplate;\n\t\tif (strokeTemplate && strokeTemplate != this.strokes.template) {\n\t\t\tstroke.template = strokeTemplate;\n\t\t}\n\n\t\tstroke.setPrivate(\"visible\", true);\n\n\t\tlet xAxis = this.get(\"xAxis\");\n\t\tlet yAxis = this.get(\"yAxis\");\n\t\tlet baseAxis = this.get(\"baseAxis\")!;\n\n\t\tlet vcx = this.get(\"vcx\", 1);\n\t\tlet vcy = this.get(\"vcy\", 1);\n\n\t\tlet xField = this._xField;\n\t\tlet yField = this._yField;\n\n\t\tlet xOpenField = this._xOpenField;\n\t\tlet yOpenField = this._yOpenField;\n\n\t\tconst xOpenFieldValue = this.get(\"openValueXField\");\n\t\tconst yOpenFieldValue = this.get(\"openValueYField\");\n\n\t\tif (!xOpenFieldValue) {\n\t\t\txOpenField = this._xField;\n\t\t}\n\n\t\tif (!yOpenFieldValue) {\n\t\t\tyOpenField = this._yField;\n\t\t}\n\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tconst basePosX = xAxis.basePosition();\n\t\tconst basePosY = yAxis.basePosition();\n\n\t\tlet baseField: string;\n\t\tif (baseAxis === yAxis) {\n\t\t\tbaseField = this._yField;\n\t\t}\n\t\telse {\n\t\t\tbaseField = this._xField;\n\t\t}\n\n\t\tconst segments: Array<Array<Array<number>>> = [];\n\t\tlet points: Array<Array<number>> = [];\n\t\tsegments.push(points);\n\n\t\tconst strokeTemplateField = this.strokes.template.get(\"templateField\");\n\t\tconst fillTemplateField = this.fills.template.get(\"templateField\");\n\n\t\tlet locationX = this.get(\"locationX\", 0.5);\n\t\tlet locationY = this.get(\"locationY\", 0.5);\n\n\t\tlet openLocationX = this.get(\"openLocationX\", locationX);\n\t\tlet openLocationY = this.get(\"openLocationY\", locationY);\n\n\t\tlet i: number;\n\n\t\tlet fillVisible = this.fills.template.get(\"visible\");\n\t\tif (this.axisRanges.length > 0) {\n\t\t\tfillVisible = true;\n\t\t}\n\n\t\tlet getOpen = false;\n\t\tif (stacked || xOpenFieldValue || yOpenFieldValue) {\n\t\t\tgetOpen = true;\n\t\t}\n\n\t\tconst o = {\n\t\t\tpoints, segments, stacked, getOpen, basePosX, basePosY, fillVisible, xField, yField, xOpenField, yOpenField, vcx, vcy, baseAxis, xAxis, yAxis, locationX, locationY, openLocationX, openLocationY\n\t\t}\n\n\n\t\tfor (i = dataItemIndex; i < currentEndIndex; i++) {\n\t\t\tconst dataItem = this._dataItems[i];\n\n\t\t\tlet valueX = dataItem.get(xField as any);\n\t\t\tlet valueY = dataItem.get(yField as any);\n\n\t\t\tif (valueX == null || valueY == null) {\n\t\t\t\tif (!connect) {\n\t\t\t\t\tpoints = [];\n\t\t\t\t\tsegments.push(points);\n\t\t\t\t\to.points = points;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._getPoints(dataItem, o);\n\t\t\t}\n\n\t\t\tif (strokeTemplateField) {\n\t\t\t\tlet strokeTemplate = (dataItem.dataContext as any)[strokeTemplateField]\n\t\t\t\tif (strokeTemplate) {\n\t\t\t\t\tif (!(strokeTemplate instanceof Template)) {\n\t\t\t\t\t\tstrokeTemplate = Template.new(strokeTemplate);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._strokeTemplate = strokeTemplate;\n\t\t\t\t\tif (i > dataItemIndex) {\n\t\t\t\t\t\tcurrentEndIndex = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tstroke.template = strokeTemplate;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (fillTemplateField) {\n\t\t\t\tlet fillTemplate = (dataItem.dataContext as any)[fillTemplateField]\n\t\t\t\tif (fillTemplate) {\n\t\t\t\t\tif (!(fillTemplate instanceof Template)) {\n\t\t\t\t\t\tfillTemplate = Template.new(fillTemplate);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._fillTemplate = fillTemplate;\n\t\t\t\t\tif (i > dataItemIndex) {\n\t\t\t\t\t\tcurrentEndIndex = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tfill.template = fillTemplate;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!connect) {\n\t\t\t\tlet nextItem = this.dataItems[i + 1];\n\t\t\t\tif (nextItem) {\n\t\t\t\t\tif (baseAxis.shouldGap(dataItem, nextItem, autoGapCount, baseField)) {\n\t\t\t\t\t\tpoints = [];\n\t\t\t\t\t\tsegments.push(points);\n\t\t\t\t\t\to.points = points;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfill.setRaw(\"userData\", [dataItemIndex, i]);\n\t\tstroke.setRaw(\"userData\", [dataItemIndex, i]);\n\n\t\tif (i === endIndex) {\n\t\t\tthis._endLine(points, segments[0][0]);\n\t\t}\n\n\t\tif (stroke) {\n\t\t\tthis._drawStroke(stroke, segments);\n\t\t}\n\n\t\tif (fill) {\n\t\t\tthis._drawFill(fill, segments);\n\t\t}\n\n\t\tthis.axisRanges.each((axisRange) => {\n\t\t\tconst container = axisRange.container;\n\t\t\tconst fills = axisRange.fills!;\n\t\t\tconst fill = this.makeFill(fills);\n\n\t\t\tif (container) {\n\t\t\t\tcontainer.children.push(fill);\n\t\t\t}\n\n\t\t\tfill.setPrivate(\"visible\", true);\n\t\t\tthis._drawFill(fill, segments);\n\n\t\t\tconst strokes = axisRange.strokes!;\n\t\t\tconst stroke = this.makeStroke(strokes);\n\t\t\tif (container) {\n\t\t\t\tcontainer.children.push(stroke);\n\t\t\t}\n\n\t\t\tstroke.setPrivate(\"visible\", true);\n\t\t\tthis._drawStroke(stroke, segments);\n\n\t\t\tfill.setRaw(\"userData\", [dataItemIndex, i]);\n\t\t\tstroke.setRaw(\"userData\", [dataItemIndex, i]);\n\t\t})\n\n\t\tif (currentEndIndex < endIndex) {\n\t\t\tthis._startSegment(segmentIndex + 1, currentEndIndex);\n\t\t}\n\t}\n\n\tprotected _getPoints(dataItem: DataItem<this[\"_dataItemSettings\"]>, o: { points: Array<Array<number>>, segments: number[][][], stacked: boolean | undefined, getOpen: boolean, basePosX: number, basePosY: number, fillVisible: boolean | undefined, xField: string, yField: string, xOpenField: string, yOpenField: string, vcx: number, vcy: number, baseAxis: Axis<AxisRenderer>, xAxis: Axis<AxisRenderer>, yAxis: Axis<AxisRenderer>, locationX: number, locationY: number, openLocationX: number, openLocationY: number }) {\n\t\tlet points = o.points;\n\n\t\tlet itemLocationX = dataItem.get(\"locationX\", o.locationX);\n\t\tlet itemLocationY = dataItem.get(\"locationY\", o.locationY);\n\n\t\tlet xPos = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX, o.vcx);\n\t\tlet yPos = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY, o.vcy);\n\n\t\tif (this._shouldInclude(xPos)) {\n\n\t\t\tconst iPoint = this.getPoint(xPos, yPos);\n\t\t\tconst point = [iPoint.x, iPoint.y];\n\n\t\t\tiPoint.x += this._x;\n\t\t\tiPoint.y += this._y;\n\n\t\t\tdataItem.set(\"point\", iPoint);\n\n\t\t\tif (o.fillVisible) {\n\t\t\t\tlet xPos0: number = xPos;\n\t\t\t\tlet yPos0: number = yPos;\n\n\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t}\n\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t}\n\n\t\t\t\tif (o.getOpen) {\n\t\t\t\t\tlet valueX = dataItem.get(o.xOpenField as any);\n\t\t\t\t\tlet valueY = dataItem.get(o.yOpenField as any);\n\n\t\t\t\t\tif (valueX != null && valueY != null) {\n\t\t\t\t\t\tlet itemLocationX = dataItem.get(\"openLocationX\", o.openLocationX);\n\t\t\t\t\t\tlet itemLocationY = dataItem.get(\"openLocationY\", o.openLocationY);\n\n\t\t\t\t\t\tif (o.stacked) {\n\t\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\n\t\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX, (stackToItemX.component as XYSeries).get(\"vcx\"));\n\t\t\t\t\t\t\t\tif ($type.isNaN(xPos0)) {\n\t\t\t\t\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.yAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX, o.vcx);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY, (stackToItemY.component as XYSeries).get(\"vcy\"));\n\t\t\t\t\t\t\t\tif ($type.isNaN(yPos0)) {\n\t\t\t\t\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.xAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY, o.vcy);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX, o.vcx);\n\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY, o.vcy);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet closeIPoint = this.getPoint(xPos0, yPos0);\n\n\t\t\t\tpoint[2] = closeIPoint.x;\n\t\t\t\tpoint[3] = closeIPoint.y;\n\t\t\t}\n\n\t\t\tpoints.push(point);\n\t\t}\n\t}\n\n\n\tprotected _endLine(_points: Array<Array<number>>, _firstPoint: Array<number>) {\n\n\t}\n\n\tprotected _drawStroke(graphics: Graphics, segments: number[][][]) {\n\t\tif (graphics.get(\"visible\")) {\n\t\t\tgraphics.set(\"draw\", (display) => {\n\t\t\t\t$array.each(segments, (segment) => {\n\t\t\t\t\tthis._strokeGenerator.context(display as any);\n\t\t\t\t\tthis._strokeGenerator(segment as [number, number][]);\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _drawFill(graphics: Graphics, segments: number[][][]) {\n\t\tif (graphics.get(\"visible\")) {\n\t\t\tgraphics.set(\"draw\", (display) => {\n\t\t\t\t$array.each(segments, (segment) => {\n\t\t\t\t\tthis._fillGenerator.context(display as any);\n\t\t\t\t\tthis._fillGenerator(segment as [number, number][]);\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tsuper._processAxisRange(axisRange);\n\t\taxisRange.fills = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Graphics._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.fills!.template.get(\"themeTags\", []), [\"line\", \"series\", \"fill\"]),\n\t\t\t}, [this.fills.template, axisRange.fills!.template]),\n\t\t);\n\n\t\taxisRange.strokes = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Graphics._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.strokes!.template.get(\"themeTags\", []), [\"line\", \"series\", \"stroke\"]),\n\t\t\t}, [this.strokes.template, axisRange.strokes!.template])\n\t\t);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic createLegendMarker(_dataItem?: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t\tconst legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (legendDataItem) {\n\t\t\tconst marker = legendDataItem.get(\"marker\");\n\n\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\t\t\tif (markerRectangle) {\n\t\t\t\tmarkerRectangle.setPrivate(\"visible\", false);\n\t\t\t}\n\n\t\t\tmarker.set(\"background\", Rectangle.new(marker._root, {fillOpacity:0, fill:color(0x000000)}))\n\n\t\t\tconst legendStroke = marker.children.push(Graphics._new(marker._root, {\n\t\t\t\tthemeTags: [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"], interactive:false\n\t\t\t}, [this.strokes.template]));\n\n\t\t\tthis._legendStroke = legendStroke;\n\n\t\t\tconst legendFill = marker.children.push(Graphics._new(marker._root, {\n\t\t\t\tthemeTags: [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]\n\t\t\t}, [this.fills.template]));\n\n\t\t\tthis._legendFill = legendFill;\n\n\t\t\tconst disabledColor = this._root.interfaceColors.get(\"disabled\");\n\n\t\t\tlegendStroke.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\t\t\tlegendFill.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\n\t\t\tif (this.bullets.length > 0) {\n\t\t\t\tconst bulletFunction = this.bullets.getIndex(0);\n\t\t\t\tif (bulletFunction) {\n\t\t\t\t\tconst bullet = bulletFunction(marker._root, this, new DataItem(this, {}, {}));\n\t\t\t\t\tif (bullet) {\n\t\t\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\t\t\tif (sprite instanceof Graphics) {\n\t\t\t\t\t\t\tsprite.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (sprite) {\n\t\t\t\t\t\t\tsprite.set(\"tooltipText\", undefined);\n\n\t\t\t\t\t\t\tmarker.children.push(sprite);\n\t\t\t\t\t\t\tsprite.setAll({ x: marker.width() / 2, y: marker.height() / 2 });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","import type { Axis, IAxisPrivate, IAxisDataItem } from \"../axes/Axis\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\nimport type { Bullet } from \"../../../core/render/Bullet\";\nimport type { XYChart } from \"../XYChart\";\nimport type { CategoryAxis } from \"../axes/CategoryAxis\";\nimport type { DateAxis } from \"../axes/DateAxis\";\nimport type { ITimeInterval } from \"../../../core/util/Time\";\n\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Series, ISeriesSettings, ISeriesDataItem, ISeriesPrivate, ISeriesEvents } from \"../../../core/render/Series\";\nimport { List } from \"../../../core/util/List\";\nimport { Container } from \"../../../core/render/Container\";\nimport { Graphics } from \"../../../core/render/Graphics\";\n\nimport * as $type from \"../../../core/util/Type\";\nimport * as $object from \"../../../core/util/Object\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\n\n/**\n * @ignore\n */\nfunction min(left: number | undefined, right: number | undefined): number | undefined {\n\tif (left == null) {\n\t\treturn right;\n\n\t} else if (right == null) {\n\t\treturn left;\n\n\t} else if (right < left) {\n\t\treturn right;\n\n\t} else {\n\t\treturn left;\n\t}\n}\n\n/**\n * @ignore\n */\nfunction max(left: number | undefined, right: number | undefined): number | undefined {\n\tif (left == null) {\n\t\treturn right;\n\n\t} else if (right == null) {\n\t\treturn left;\n\n\t} else if (right > left) {\n\t\treturn right;\n\n\t} else {\n\t\treturn left;\n\t}\n}\n\n/**\n * Interface representing a series axis range.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Series_axis_ranges} for more info\n */\nexport interface IXYSeriesAxisRange {\n\n\t/**\n\t * Related axis data item.\n\t */\n\taxisDataItem: DataItem<IAxisDataItem>;\n\n\t/**\n\t * A [[Container]] element that range's elements are placed in.\n\t */\n\tcontainer?: Container;\n\n\t/**\n\t * Target series.\n\t */\n\tseries?: XYSeries;\n\n}\n\nexport interface IXYAxisPrivate extends IAxisPrivate {\n\tmin?: number;\n\tmax?: number;\n}\n\nexport interface IXYAxis extends Axis<AxisRenderer> {\n\t_privateSettings: IXYAxisPrivate;\n}\n\nexport interface IXYSeriesEvents extends ISeriesEvents {\n\n\t/**\n\t * Kicks in when axis starts using different data set, e.g. data\n\t * of different granularit on [[DateAxis]].\n\t *\n\t * @since 5.1.1\n\t */\n\tdatasetchanged: {\n\t\tid: string\n\t}\n}\n\n/**\n * XY chart series data item.\n */\nexport interface IXYSeriesDataItem extends ISeriesDataItem {\n\tvalueX?: number;\n\tvalueXWorking?: number;\n\tvalueXChange?: number;\n\tvalueXChangePercent?: number;\n\tvalueXChangeSelection?: number;\n\tvalueXChangeSelectionPercent?: number;\n\tvalueXChangePrevious?: number;\n\tvalueXChangePreviousPercent?: number;\n\tvalueXWorkingOpen?: number;\n\tvalueXWorkingClose?: number;\n\n\tvalueY?: number;\n\tvalueYChange?: number;\n\tvalueYWorking?: number;\n\tvalueYChangePercent?: number;\n\tvalueYChangeSelection?: number;\n\tvalueYChangeSelectionPercent?: number;\n\tvalueYChangePrevious?: number;\n\tvalueYChangePreviousPercent?: number;\n\tvalueYWorkingOpen?: number;\n\tvalueYWorkingClose?: number;\n\n\topenValueX?: number;\n\topenValueXWorking?: number;\n\topenValueXChange?: number;\n\topenValueXChangePercent?: number;\n\topenValueXChangeSelection?: number;\n\topenValueXChangeSelectionPercent?: number;\n\topenValueXChangePrevious?: number;\n\topenValueXChangePreviousPercent?: number;\n\topenValueXWorkingOpen?: number;\n\topenValueXWorkingClose?: number;\n\topenValueY?: number;\n\topenValueYWorking?: number;\n\topenValueYChange?: number;\n\topenValueYChangePercent?: number;\n\topenValueYChangeSelection?: number;\n\topenValueYChangeSelectionPercent?: number;\n\topenValueYChangePrevious?: number;\n\topenValueYChangePreviousPercent?: number;\n\topenValueYWorkingOpen?: number;\n\topenValueYWorkingClose?: number;\n\n\tlowValueX?: number;\n\tlowValueXWorking?: number;\n\tlowValueXChange?: number;\n\tlowValueXChangePercent?: number;\n\tlowValueXChangeSelection?: number;\n\tlowValueXChangeSelectionPercent?: number;\n\tlowValueXChangePrevious?: number;\n\tlowValueXChangePreviousPercent?: number;\n\tlowValueXWorkingOpen?: number;\n\tlowValueXWorkingClose?: number;\n\n\thighValueX?: number;\n\thighValueXWorking?: number;\n\thighValueXChange?: number;\n\thighValueXChangePercent?: number;\n\thighValueXChangeSelection?: number;\n\thighValueXChangeSelectionPercent?: number;\n\thighValueXChangePrevious?: number;\n\thighValueXChangePreviousPercent?: number;\n\thighValueXWorkingOpen?: number;\n\thighValueXWorkingClose?: number;\n\n\tlowValueY?: number;\n\tlowValueYWorking?: number;\n\tlowValueYChange?: number;\n\tlowValueYChangePercent?: number;\n\tlowValueYChangeSelection?: number;\n\tlowValueYChangeSelectionPercent?: number;\n\tlowValueYChangePrevious?: number;\n\tlowValueYChangePreviousPercent?: number;\n\tlowValueYWorkingOpen?: number;\n\tlowValueYWorkingClose?: number;\n\n\thighValueY?: number;\n\thighValueYWorking?: number;\n\thighValueYChange?: number;\n\thighValueYChangePercent?: number;\n\thighValueYChangeSelection?: number;\n\thighValueYChangeSelectionPercent?: number;\n\thighValueYChangePrevious?: number;\n\thighValueYChangePreviousPercent?: number;\n\thighValueYWorkingOpen?: number;\n\thighValueYWorkingClose?: number;\n\n\tcategoryX?: string;\n\tcategoryY?: string;\n\n\topenCategoryX?: string;\n\topenCategoryY?: string;\n\n\tlocationX?: number;\n\tlocationY?: number;\n\n\topenLocationX?: number;\n\topenLocationY?: number;\n\n\tstackToItemX?: DataItem<IXYSeriesDataItem>;\n\tstackToItemY?: DataItem<IXYSeriesDataItem>;\n\n\tleft?: number;\n\tright?: number;\n\ttop?: number;\n\tbottom?: number;\n\n\tpoint?: IPoint;\n\n\toriginals?: Array<DataItem<IXYSeriesDataItem>>;\n}\n\nexport interface IXYSeriesSettings extends ISeriesSettings {\n\n\t/**\n\t * Minimal distance between data items in pixels.\n\t *\n\t * If data items are closer than this, bullets are turned off to avoid\n\t * overcrowding.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Bullets} for more info\n\t */\n\tminBulletDistance?: number;\n\n\t/**\n\t * X axis series uses.\n\t */\n\txAxis: IXYAxis;\n\n\t/**\n\t * Y axis series uses.\n\t */\n\tyAxis: IXYAxis;\n\n\t/**\n\t * If set to `true` series will be stacked to other series that also have\n\t * this setting set to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Stacked_series} for more info\n\t */\n\tstacked?: boolean;\n\n\t/**\n\t * Whether to stack negative values from zero (`true`) or from whatever\n\t * previous series value is (`false`).\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Negative_value_stacking} for more info\n\t */\n\tstackToNegative?: boolean;\n\n\t/**\n\t * Base axis for the series.\n\t *\n\t * A base axis will dictate direction series plot.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Base_axis} for more info\n\t */\n\tbaseAxis?: IXYAxis;\n\n\t/**\n\t * Input data field for X value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueXField?: string;\n\n\t/**\n\t * Input data field for Y value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueYField?: string;\n\n\t/**\n\t * Exclude series values when calculating totals for category/interval.\n\t *\n\t * @default false\n\t */\n\texcludeFromTotal?: boolean;\n\n\t/**\n\t * Display data field for X value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueXShow?: \"valueXWorking\" | \"valueXChange\" | \"valueXChangePercent\" | \"valueXChangeSelection\" | \"valueXChangeSelectionPercent\" | \"valueXChangePrevious\" | \"valueXChangePreviousPercent\" | \"valueXTotal\" | \"valueXTotalPercent\" | \"valueXSum\";\n\n\t/**\n\t * Display data field for Y value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueYShow?: \"valueYWorking\" | \"valueYChange\" | \"valueYChangePercent\" | \"valueYChangeSelection\" | \"valueYChangeSelectionPercent\" | \"valueYChangePrevious\" | \"valueYChangePreviousPercent\" | \"valueYTotal\" | \"valueYTotalPercent\" | \"valueYSum\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X values from several data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tvalueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X values from several data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tvalueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Input data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueXField?: string;\n\n\t/**\n\t * Input data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueYField?: string;\n\n\t/**\n\t * Display data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueXShow?: \"openValueXWorking\" | \"openValueXChange\" | \"openValueXChangePercent\" | \"openValueXChangeSelection\" | \"openValueXChangeSelectionPercent\" | \"openValueXChangePrevious\" | \"openValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueYShow?: \"openValueYWorking\" | \"openValueYChange\" | \"openValueYChangePercent\" | \"openValueYChangeSelection\" | \"openValueYChangeSelectionPercent\" | \"openValueYChangePrevious\" | \"openValueYChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\topenValueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\topenValueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\n\n\t/**\n\t * Input data field for X low value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\tlowValueXField?: string;\n\n\t/**\n\t * Input data field for Y low value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\tlowValueYField?: string;\n\n\t/**\n\t * Input data field for X high value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\thighValueXField?: string;\n\n\t/**\n\t * Input data field for Y high value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\thighValueYField?: string;\n\n\t/**\n\t * Display data field for X low value.\n\t */\n\tlowValueXShow?: \"lowValueXWorking\" | \"lowValueXChange\" | \"lowValueXChangePercent\" | \"lowValueXChangeSelection\" | \"lowValueXChangeSelectionPercent\" | \"lowValueXChangePrevious\" | \"lowValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y low value.\n\t */\n\tlowValueYShow?: \"lowValueYWorking\" | \"lowValueYChange\" | \"lowValueYChangePercent\" | \"lowValueYChangeSelection\" | \"lowValueYChangeSelectionPercent\" | \"lowValueYChangePrevious\" | \"lowValueYChangePreviousPercent\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X low values from several data items.\n\t */\n\tlowValueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating Y low values from several data items.\n\t */\n\tlowValueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Display data field for X high value.\n\t */\n\thighValueXShow?: \"highValueXWorking\" | \"highValueXChange\" | \"highValueXChangePercent\" | \"highValueXChangeSelection\" | \"highValueXChangeSelectionPercent\" | \"highValueXChangePrevious\" | \"highValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y low value.\n\t */\n\thighValueYShow?: \"highValueYWorking\" | \"highValueYChange\" | \"highValueYChangePercent\" | \"highValueYChangeSelection\" | \"highValueYChangeSelectionPercent\" | \"highValueYChangePrevious\" | \"highValueYChangePreviousPercent\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X high values from several data items.\n\t */\n\thighValueXGrouped?: \"open\" | \"close\" | \"high\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X high values from several data items.\n\t */\n\thighValueYGrouped?: \"open\" | \"close\" | \"high\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Horizontal location of the low data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\tlowLocationX?: number;\n\n\t/**\n\t * Vertical location of the low data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\tlowLocationY?: number;\n\n\t/**\n\t * Horizontal location of the high data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\thighLocationX?: number;\n\n\t/**\n\t * Vertical location of the high data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\thighLocationY?: number;\n\n\n\t/**\n\t * Input data field for X category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tcategoryXField?: string;\n\n\t/**\n\t * Input data field for Y category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tcategoryYField?: string;\n\n\t/**\n\t * Display data field for X category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenCategoryXField?: string;\n\n\t/**\n\t * Display data field for Y category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenCategoryYField?: string;\n\n\t/**\n\t * If set to `true` this series will be ignored when calculating scale of the\n\t * related axes.\n\t *\n\t * @default false\n\t */\n\tignoreMinMax?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tvcx?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tvcy?: number;\n\n\t/**\n\t * Horizontal location of the data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Data_item_location} for more info\n\t * @default 0.5\n\t */\n\tlocationX?: number;\n\n\t/**\n\t * Vertical location of the data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Data_item_location} for more info\n\t * @default 0.5\n\t */\n\tlocationY?: number;\n\n\t/**\n\t * Horizontal location of the open data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\topenLocationX?: number;\n\n\t/**\n\t * Vertical location of the open data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\topenLocationY?: number;\n\n\t/**\n\t * If set to `true` [[XYCursor]] will show closest data item from series\n\t * even if it is outside currently hovered date axis interval.\n\t *\n\t * This setting is relevant only if `baseAxis` is a date axis.\n\t */\n\tsnapTooltip?: boolean;\n\n\t/**\n\t * Text to use for series legend label when no particular category/interval\n\t * is selected.\n\t */\n\tlegendRangeLabelText?: string;\n\n\t/**\n\t * Text to use for series legend value label when no particular\n\t * category/interval is selected.\n\t */\n\tlegendRangeValueText?: string;\n\n\n\t/**\n\t * If set to `true`, series bullets will be masked by plot area.\n\t */\n\tmaskBullets?: boolean;\n\n\t/**\n\t * Whether series' tooltip should inherit its color from series or its first\n\t * bullet.\n\t *\n\t * @default \"series\"\n\t */\n\tseriesTooltipTarget?: \"series\" | \"bullet\";\n\n\t/**\n\t * Indicates horizontal position at which to show series' tooltip at.\n\t *\n\t * @default \"value\"\n\t * @since 5.0.16\n\t */\n\ttooltipPositionX?: \"open\" | \"value\" | \"low\" | \"high\";\n\n\t/**\n\t * Indicates vertical position at which to show series' tooltip at.\n\t *\n\t * @default \"value\"\n\t * @since 5.0.16\n\t */\n\ttooltipPositionY?: \"open\" | \"value\" | \"low\" | \"high\";\n\n\n\t/**\n\t * If set to `true` data items for this series won't be grouped even if\n\t * the `groupData: true` is set on a related [[DateAxis]].\n\t * \n\t * @since 5.0.19\n\t */\n\tgroupDataDisabled?: boolean;\n\n\t/**\n\t * A [[DataItem]] that is being used for current tooltip, e.g. by a chart\n\t * cursor.\n\t *\n\t * @since 5.1.2\n\t */\n\ttooltipDataItem?: DataItem<IXYSeriesDataItem>\n\n\t/**\n\t * If set to `true`, when data is grouped, the `originals` setting of the\n\t * group data items will be populated by the original (source) data items\n\t * that fall into the group.\n\t *\n\t * Please note that if `groupDataCallback` is set, this setting is ignored\n\t * as originals will always be included, regardless of the value.\n\t *\n\t * @since 5.1.11\n\t * @default false\n\t */\n\tgroupDataWithOriginals?: boolean;\n\n\t/**\n\t * A custom function to call when grouping data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Custom_aggregation_functions} for more info\n\t * @since 5.1.11\n\t */\n\tgroupDataCallback?: (dataItem: DataItem<IXYSeriesDataItem>, interval: ITimeInterval) => void;\n\n}\n\nexport interface IXYSeriesPrivate extends ISeriesPrivate {\n\n\tminX?: number;\n\tmaxX?: number;\n\n\tminY?: number;\n\tmaxY?: number;\n\n\tselectionMinX?: number;\n\tselectionMaxX?: number;\n\n\tselectionMinY?: number;\n\tselectionMaxY?: number;\n\n\tvalueXAverage?: number;\n\tvalueXCount?: number;\n\tvalueXSum?: number;\n\tvalueXAbsoluteSum?: number;\n\tvalueXLow?: number;\n\tvalueXHigh?: number;\n\tvalueXOpen?: number;\n\tvalueXClose?: number;\n\n\tvalueYAverage?: number;\n\tvalueYCount?: number;\n\tvalueYSum?: number;\n\tvalueYAbsoluteSum?: number;\n\tvalueYLow?: number;\n\tvalueYHigh?: number;\n\tvalueYOpen?: number;\n\tvalueYClose?: number;\n\n\tvalueXAverageSelection?: number;\n\tvalueXCountSelection?: number;\n\tvalueXSumSelection?: number;\n\tvalueXAbsoluteSumSelection?: number;\n\tvalueXLowSelection?: number;\n\tvalueXHighSelection?: number;\n\tvalueXOpenSelection?: number;\n\tvalueXCloseSelection?: number;\n\n\tvalueYAverageSelection?: number;\n\tvalueYCountSelection?: number;\n\tvalueYSumSelection?: number;\n\tvalueYAbsoluteSumSelection?: number;\n\tvalueYLowSelection?: number;\n\tvalueYHighSelection?: number;\n\tvalueYOpenSelection?: number;\n\tvalueYCloseSelection?: number;\n\n\topenValueXAverage?: number;\n\topenValueXCount?: number;\n\topenValueXSum?: number;\n\topenValueXAbsoluteSum?: number;\n\topenValueXLow?: number;\n\topenValueXHigh?: number;\n\topenValueXOpen?: number;\n\topenValueXClose?: number;\n\n\topenValueYAverage?: number;\n\topenValueYCount?: number;\n\topenValueYSum?: number;\n\topenValueYAbsoluteSum?: number;\n\topenValueYLow?: number;\n\topenValueYHigh?: number;\n\topenValueYOpen?: number;\n\topenValueYClose?: number;\n\n\topenValueXAverageSelection?: number;\n\topenValueXCountSelection?: number;\n\topenValueXSumSelection?: number;\n\topenValueXAbsoluteSumSelection?: number;\n\topenValueXLowSelection?: number;\n\topenValueXHighSelection?: number;\n\topenValueXOpenSelection?: number;\n\topenValueXCloseSelection?: number;\n\n\topenValueYAverageSelection?: number;\n\topenValueYCountSelection?: number;\n\topenValueYSumSelection?: number;\n\topenValueYAbsoluteSumSelection?: number;\n\topenValueYLowSelection?: number;\n\topenValueYHighSelection?: number;\n\topenValueYOpenSelection?: number;\n\topenValueYCloseSelection?: number;\n\n\tlowValueXAverage?: number;\n\tlowValueXCount?: number;\n\tlowValueXSum?: number;\n\tlowValueXAbsoluteSum?: number;\n\tlowValueXLow?: number;\n\tlowValueXHigh?: number;\n\tlowValueXlow?: number;\n\tlowValueXClose?: number;\n\n\tlowValueYAverage?: number;\n\tlowValueYCount?: number;\n\tlowValueYSum?: number;\n\tlowValueYAbsoluteSum?: number;\n\tlowValueYLow?: number;\n\tlowValueYHigh?: number;\n\tlowValueYlow?: number;\n\tlowValueYClose?: number;\n\n\tlowValueXAverageSelection?: number;\n\tlowValueXCountSelection?: number;\n\tlowValueXSumSelection?: number;\n\tlowValueXAbsoluteSumSelection?: number;\n\tlowValueXLowSelection?: number;\n\tlowValueXHighSelection?: number;\n\tlowValueXlowSelection?: number;\n\tlowValueXCloseSelection?: number;\n\n\tlowValueYAverageSelection?: number;\n\tlowValueYCountSelection?: number;\n\tlowValueYSumSelection?: number;\n\tlowValueYAbsoluteSumSelection?: number;\n\tlowValueYLowSelection?: number;\n\tlowValueYHighSelection?: number;\n\tlowValueYlowSelection?: number;\n\tlowValueYCloseSelection?: number;\n\n\thighValueXAverage?: number;\n\thighValueXCount?: number;\n\thighValueXSum?: number;\n\thighValueXAbsoluteSum?: number;\n\thighValueXLow?: number;\n\thighValueXHigh?: number;\n\thighValueXhigh?: number;\n\thighValueXClose?: number;\n\n\thighValueYAverage?: number;\n\thighValueYCount?: number;\n\thighValueYSum?: number;\n\thighValueYAbsoluteSum?: number;\n\thighValueYLow?: number;\n\thighValueYHigh?: number;\n\thighValueYhigh?: number;\n\thighValueYClose?: number;\n\n\thighValueXAverageSelection?: number;\n\thighValueXCountSelection?: number;\n\thighValueXSumSelection?: number;\n\thighValueXAbsoluteSumSelection?: number;\n\thighValueXLowSelection?: number;\n\thighValueXHighSelection?: number;\n\thighValueXhighSelection?: number;\n\thighValueXCloseSelection?: number;\n\n\thighValueYAverageSelection?: number;\n\thighValueYCountSelection?: number;\n\thighValueYSumSelection?: number;\n\thighValueYAbsoluteSumSelection?: number;\n\thighValueYLowSelection?: number;\n\thighValueYHighSelection?: number;\n\thighValueYhighSelection?: number;\n\thighValueYCloseSelection?: number;\n\n\toutOfSelection?: boolean;\n}\n\n\n/**\n * A base class for all XY chart series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/} for more info\n */\nexport abstract class XYSeries extends Series {\n\tpublic static className: string = \"XYSeries\";\n\tpublic static classNames: Array<string> = Series.classNames.concat([XYSeries.className]);\n\n\tdeclare public _settings: IXYSeriesSettings;\n\tdeclare public _privateSettings: IXYSeriesPrivate;\n\tdeclare public _dataItemSettings: IXYSeriesDataItem;\n\tdeclare public _axisRangeType: IXYSeriesAxisRange;\n\tdeclare public _events: IXYSeriesEvents;\n\n\tprotected _xField!: string;\n\tprotected _yField!: string;\n\tprotected _xOpenField!: string;\n\tprotected _yOpenField!: string;\n\n\tprotected _xLowField!: string;\n\tprotected _xHighField!: string;\n\tprotected _yLowField!: string;\n\tprotected _yHighField!: string;\n\n\tprotected _axesDirty: boolean = false;\n\tpublic _stackDirty: boolean = false;\n\n\tprotected _selectionProcessed = false;\n\n\tdeclare public chart: XYChart | undefined;\n\n\tpublic _dataSets: { [index: string]: Array<DataItem<IXYSeriesDataItem>> } = {};\n\n\tpublic _mainContainerMask: Graphics | undefined;\n\n\tprotected _x: number = 0;\n\tprotected _y: number = 0;\n\n\t/**\n\t * A [[Container]] that us used to put series' elements in.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly mainContainer: Container = this.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A list of axis ranges that affect the series.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t */\n\tpublic readonly axisRanges: List<this[\"_axisRangeType\"]> = new List();\n\n\tprotected _skipped: boolean = false;\n\n\tprotected _couldStackTo: Array<XYSeries> = [];\n\n\tprotected _reallyStackedTo: { [index: number]: XYSeries } = {};\n\n\tpublic _stackedSeries: { [index: number]: XYSeries } = {};\n\n\tprotected _aLocationX0: number = 0;\n\tprotected _aLocationX1: number = 1;\n\tprotected _aLocationY0: number = 0;\n\tprotected _aLocationY1: number = 1;\n\n\tprotected _showBullets: boolean = true;\n\n\tprotected valueXFields = [\n\t\t\"valueX\",\n\t\t\"openValueX\",\n\t\t\"lowValueX\",\n\t\t\"highValueX\"\n\t];\n\n\tprotected valueYFields = [\n\t\t\"valueY\",\n\t\t\"openValueY\",\n\t\t\"lowValueY\",\n\t\t\"highValueY\"\n\t];\n\n\tpublic _valueXFields!: Array<string>;\n\tpublic _valueYFields!: Array<string>;\n\n\t// used for full min/max\n\tprotected _valueXShowFields!: Array<string>;\n\tprotected _valueYShowFields!: Array<string>;\n\n\t// used for selection (uses working)\n\tprotected __valueXShowFields!: Array<string>;\n\tprotected __valueYShowFields!: Array<string>;\n\n\tprotected _emptyDataItem = new DataItem(this, undefined, {});\n\n\tpublic _dataSetId?: string;\n\n\tprotected _tooltipFieldX?: string;\n\tprotected _tooltipFieldY?: string;\n\n\tprotected _afterNew() {\n\t\tthis.fields.push(\"categoryX\", \"categoryY\", \"openCategoryX\", \"openCategoryY\");\n\t\tthis.valueFields.push(\"valueX\", \"valueY\", \"openValueX\", \"openValueY\", \"lowValueX\", \"lowValueY\", \"highValueX\", \"highValueY\");\n\n\t\tthis._setRawDefault(\"vcx\", 1);\n\t\tthis._setRawDefault(\"vcy\", 1);\n\t\t// this can't go to themes, as data might be parsed before theme\n\t\tthis._setRawDefault(\"valueXShow\", \"valueXWorking\");\n\t\tthis._setRawDefault(\"valueYShow\", \"valueYWorking\");\n\n\t\tthis._setRawDefault(\"openValueXShow\", \"openValueXWorking\");\n\t\tthis._setRawDefault(\"openValueYShow\", \"openValueYWorking\");\n\n\t\tthis._setRawDefault(\"lowValueXShow\", \"lowValueXWorking\");\n\t\tthis._setRawDefault(\"lowValueYShow\", \"lowValueYWorking\");\n\n\t\tthis._setRawDefault(\"highValueXShow\", \"highValueXWorking\");\n\t\tthis._setRawDefault(\"highValueYShow\", \"highValueYWorking\");\n\n\t\tthis._setRawDefault(\"lowValueXGrouped\", \"low\");\n\t\tthis._setRawDefault(\"lowValueYGrouped\", \"low\");\n\n\t\tthis._setRawDefault(\"highValueXGrouped\", \"high\");\n\t\tthis._setRawDefault(\"highValueYGrouped\", \"high\");\n\n\n\n\t\tsuper._afterNew();\n\n\t\tthis._settings.xAxis.series.push(this);\n\t\tthis._settings.yAxis.series.push(this);\n\n\t\tthis.set(\"maskContent\", true);\n\n\t\tthis._disposers.push(this.axisRanges.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (axisRange) => {\n\t\t\t\t\tthis._removeAxisRange(axisRange);\n\t\t\t\t});\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis._removeAxisRange(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tthis._processAxisRange(change.value);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IStreamEvent type\");\n\t\t\t}\n\t\t}))\n\n\t\tif (!this.get(\"baseAxis\")) {\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\tif (yAxis.isType<CategoryAxis<any>>(\"CategoryAxis\") || yAxis.isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\t\tthis.set(\"baseAxis\", yAxis);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.set(\"baseAxis\", xAxis);\n\t\t\t}\n\t\t}\n\n\t\tthis.states.create(\"hidden\", <any>{ opacity: 1, visible: false });\n\n\t\tthis._makeFieldNames();\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tconst container = Container.new(this._root, {});\n\t\taxisRange.container = container;\n\t\tthis.children.push(container);\n\n\t\taxisRange.series = this;\n\n\t\tconst axisDataItem = axisRange.axisDataItem;\n\t\taxisDataItem.setRaw(\"isRange\", true);\n\n\t\tconst axis = <Axis<AxisRenderer>>axisDataItem.component;\n\t\tif (axis) {\n\t\t\taxis._processAxisRange(axisDataItem, [\"range\", \"series\"]);\n\n\t\t\tconst bullet = axisDataItem.get(\"bullet\");\n\t\t\tif (bullet) {\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst axisFill = axisDataItem.get(\"axisFill\");\n\t\t\tif (axisFill) {\n\t\t\t\tcontainer.set(\"mask\", axisFill);\n\t\t\t}\n\t\t\taxis._seriesAxisRanges.push(axisDataItem);\n\t\t}\n\t}\n\n\tprotected _removeAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tconst axisDataItem = axisRange.axisDataItem;\n\t\tconst axis = <Axis<AxisRenderer>>axisDataItem.component;\n\t\taxis.disposeDataItem(axisDataItem);\n\n\t\t$array.remove(axis._seriesAxisRanges, axisDataItem);\n\n\t\tconst container = axisRange.container;\n\t\tif (container) {\n\t\t\tcontainer.dispose();\n\t\t}\n\t}\n\n\tprotected _updateFields() {\n\t\tsuper._updateFields();\n\n\t\tthis._valueXFields = [];\n\t\tthis._valueYFields = [];\n\t\tthis._valueXShowFields = [];\n\t\tthis._valueYShowFields = [];\n\n\t\tthis.__valueXShowFields = [];\n\t\tthis.__valueYShowFields = [];\n\n\t\tif (this.valueXFields) {\n\t\t\t$array.each(this.valueXFields as Array<keyof this[\"_settings\"]>, (key) => {\n\t\t\t\tconst field = this.get(<any>(key + \"Field\"));\n\t\t\t\tif (field) {\n\t\t\t\t\tthis._valueXFields.push(<any>key);\n\t\t\t\t\tlet field = this.get(<any>(key + \"Show\"));\n\t\t\t\t\tthis.__valueXShowFields.push(field);\n\n\t\t\t\t\tif (field.indexOf(\"Working\") != -1) {\n\t\t\t\t\t\tthis._valueXShowFields.push(field.split(\"Working\")[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._valueYShowFields.push(field);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (this.valueYFields) {\n\t\t\t$array.each(this.valueYFields as Array<keyof this[\"_settings\"]>, (key) => {\n\t\t\t\tconst field = this.get(<any>(key + \"Field\"));\n\n\t\t\t\tif (field) {\n\t\t\t\t\tthis._valueYFields.push(<any>key);\n\t\t\t\t\tlet field = this.get(<any>(key + \"Show\"));\n\t\t\t\t\tthis.__valueYShowFields.push(field);\n\n\t\t\t\t\tif (field.indexOf(\"Working\") != -1) {\n\t\t\t\t\t\tthis._valueYShowFields.push(field.split(\"Working\")[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._valueYShowFields.push(field);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart.series.removeValue(this);\n\t\t}\n\n\t\t$array.removeFirst(this.get(\"xAxis\").series, this);\n\t\t$array.removeFirst(this.get(\"yAxis\").series, this);\n\t}\n\n\t// TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\n\tprotected _min<Key extends keyof this[\"_privateSettings\"]>(key: Key, value: number | undefined) {\n\t\tlet newValue = min(this.getPrivate(key) as any, value);\n\t\tthis.setPrivate(key, newValue as any);\n\t}\n\n\t// TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\n\tprotected _max<Key extends keyof this[\"_privateSettings\"]>(key: Key, value: number | undefined) {\n\t\tlet newValue = max(this.getPrivate(key) as any, value);\n\t\tthis.setPrivate(key, newValue as any);\n\t}\n\n\tprotected _shouldMakeBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>): boolean {\n\t\tif (!this.get(\"xAxis\").inited || !this.get(\"yAxis\").inited) {\n\t\t\treturn false\n\t\t}\n\t\tif (dataItem.get(this._xField as any) != null && dataItem.get(this._yField as any) != null) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected _makeFieldNames() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst xName = xAxis.getPrivate(\"name\")!;\n\t\tconst xCapName = $utils.capitalizeFirst(xName);\n\n\t\tconst yName = yAxis.getPrivate(\"name\")!;\n\t\tconst yCapName = $utils.capitalizeFirst(yName);\n\n\t\tconst xLetter = xAxis.get(\"renderer\").getPrivate(\"letter\")!\n\t\tconst yLetter = yAxis.get(\"renderer\").getPrivate(\"letter\")!\n\n\t\tconst open = \"open\";\n\t\tconst low = \"low\";\n\t\tconst high = \"high\";\n\t\tconst show = \"Show\";\n\n\t\tif (xAxis.className === \"ValueAxis\") {\n\t\t\tthis._xField = this.get(<any>(xName + xLetter! + show));\n\t\t\tthis._xOpenField = this.get(<any>(open + xCapName + xLetter! + show));\n\t\t\tthis._xLowField = this.get(<any>(low + xCapName + xLetter! + show));\n\t\t\tthis._xHighField = this.get(<any>(high + xCapName + xLetter! + show));\n\t\t}\n\t\telse {\n\t\t\tthis._xField = <any>(xName + xLetter!);\n\t\t\tthis._xOpenField = <any>(open + xCapName + xLetter!);\n\t\t\tthis._xLowField = <any>(low + xCapName + xLetter!);\n\t\t\tthis._xHighField = <any>(high + xCapName + xLetter!);\n\t\t}\n\n\t\tif (yAxis.className === \"ValueAxis\") {\n\t\t\tthis._yField = this.get(<any>(yName + yLetter! + show));\n\t\t\tthis._yOpenField = this.get(<any>(open + yCapName + yLetter! + show));\n\t\t\tthis._yLowField = this.get(<any>(low + yCapName + yLetter! + show));\n\t\t\tthis._yHighField = this.get(<any>(high + yCapName + yLetter! + show));\n\t\t}\n\t\telse {\n\t\t\tthis._yField = <any>(yName + yLetter!);\n\t\t\tthis._yOpenField = <any>(open + yCapName + yLetter!);\n\t\t\tthis._yLowField = <any>(low + yCapName + yLetter!);\n\t\t\tthis._yHighField = <any>(high + yCapName + yLetter!);\n\t\t}\n\t}\n\n\tprotected _fixVC() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst hiddenState = this.states.lookup(\"hidden\");\n\t\tconst sequencedInterpolation = this.get(\"sequencedInterpolation\");\n\n\t\tif (hiddenState) {\n\t\t\tlet value = 0;\n\t\t\tif (sequencedInterpolation) {\n\t\t\t\tvalue = 0.999999999999; // makes animate, good for stacked\n\t\t\t}\n\n\t\t\tif (xAxis === baseAxis) {\n\t\t\t\thiddenState.set(\"vcy\", value);\n\t\t\t}\n\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\thiddenState.set(\"vcx\", value);\n\t\t\t}\n\t\t\telse {\n\t\t\t\thiddenState.set(\"vcy\", value);\n\t\t\t\thiddenState.set(\"vcx\", value);\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _handleMaskBullets() {\n\t\tif (this.isDirty(\"maskBullets\")) {\n\t\t\tthis.bulletsContainer.set(\"maskContent\", this.get(\"maskBullets\"));\n\t\t}\n\t}\n\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"valueYShow\") || this.isDirty(\"valueXShow\" || this.isDirty(\"openValueYShow\") || this.isDirty(\"openValueXShow\") || this.isDirty(\"lowValueYShow\") || this.isDirty(\"lowValueXShow\") || this.isDirty(\"highValueYShow\") || this.isDirty(\"highValueXShow\"))) {\n\t\t\tthis._updateFields();\n\t\t\tthis._makeFieldNames();\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tthis.set(\"width\", this.get(\"xAxis\").width());\n\t\tthis.set(\"height\", this.get(\"yAxis\").height());\n\n\t\tthis._handleMaskBullets();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\tconst tooltipPositionX = this.get(\"tooltipPositionX\");\n\t\tlet tooltipFieldX: string;\n\n\t\tswitch (tooltipPositionX) {\n\t\t\tcase \"open\":\n\t\t\t\ttooltipFieldX = this._xOpenField;\n\t\t\t\tbreak;\n\t\t\tcase \"low\":\n\t\t\t\ttooltipFieldX = this._xLowField;\n\t\t\t\tbreak;\n\t\t\tcase \"high\":\n\t\t\t\ttooltipFieldX = this._xHighField;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\ttooltipFieldX = this._xField;\n\t\t}\n\t\tthis._tooltipFieldX = tooltipFieldX;\n\n\t\tconst tooltipPositionY = this.get(\"tooltipPositionY\");\n\t\tlet tooltipFieldY: string;\n\t\tswitch (tooltipPositionY) {\n\t\t\tcase \"open\":\n\t\t\t\ttooltipFieldY = this._yOpenField;\n\t\t\t\tbreak;\n\t\t\tcase \"low\":\n\t\t\t\ttooltipFieldY = this._yLowField;\n\t\t\t\tbreak;\n\t\t\tcase \"high\":\n\t\t\t\ttooltipFieldY = this._yHighField;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\ttooltipFieldY = this._yField;\n\t\t}\n\t\tthis._tooltipFieldY = tooltipFieldY;\n\n\t\tif (this.isDirty(\"baseAxis\")) {\n\t\t\tthis._fixVC();\n\t\t}\n\n\t\tif (xAxis === baseAxis) {\n\t\t\tthis.set(\"y\", yAxis.y() - $utils.relativeToValue(yAxis.get(\"centerY\", 0), yAxis.height()) - yAxis.parent!.get(\"paddingTop\", 0));\n\t\t\tthis.bulletsContainer.set(\"y\", this.y());\n\t\t}\n\t\telse if (yAxis === baseAxis) {\n\t\t\tthis.set(\"x\", xAxis.x() - $utils.relativeToValue(xAxis.get(\"centerX\", 0), xAxis.width()) - xAxis.parent!.get(\"paddingLeft\", 0));\n\t\t\tthis.bulletsContainer.set(\"x\", this.x());\n\t\t}\n\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tif (this.isDirty(\"stacked\")) {\n\t\t\tif (stacked) {\n\t\t\t\tif (this._valuesDirty && !this._dataProcessed) {\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._stack();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._unstack();\n\t\t\t}\n\t\t}\n\n\t\tif (this._valuesDirty && !this._dataProcessed) {\n\t\t\tthis._dataProcessed = true;\n\n\t\t\tif (stacked) {\n\t\t\t\tthis._stack();\n\t\t\t}\n\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\t$array.each(this._valueXShowFields, (key) => {\n\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\t\tvalue += this.getStackedXValue(dataItem, key);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._min(\"minX\", value);\n\t\t\t\t\t\tthis._max(\"maxX\", value);\n\n\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\t$array.each(this._valueYShowFields, (key) => {\n\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\t\tvalue += this.getStackedYValue(dataItem, key);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._min(\"minY\", value);\n\t\t\t\t\t\tthis._max(\"maxY\", value);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\txAxis.processSeriesDataItem(dataItem, this._valueXFields);\n\t\t\t\tyAxis.processSeriesDataItem(dataItem, this._valueYFields);\n\t\t\t})\n\n\t\t\txAxis._seriesValuesDirty = true;\n\t\t\tyAxis._seriesValuesDirty = true;\n\n\t\t\tif (!this.get(\"ignoreMinMax\")) {\n\t\t\t\tif (this.isPrivateDirty(\"minX\") || this.isPrivateDirty(\"maxX\")) {\n\t\t\t\t\txAxis.markDirtyExtremes();\n\t\t\t\t}\n\t\t\t\tif (this.isPrivateDirty(\"minY\") || this.isPrivateDirty(\"maxY\")) {\n\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._markStakedDirtyStack();\n\n\t\t\t//this.updateLegendMarker(undefined); // causes legend marker to change color instantly when on\n\t\t\tthis.updateLegendValue(undefined);\n\t\t}\n\n\t\tif (this.isDirty(\"vcx\") || this.isDirty(\"vcy\")) {\n\t\t\tthis._markStakedDirtyStack();\n\t\t}\n\n\t\tif (!this._dataGrouped) {\n\t\t\txAxis._groupSeriesData(this);\n\t\t\tyAxis._groupSeriesData(this);\n\t\t\tthis._dataGrouped = true;\n\t\t}\n\n\t\tif (this._valuesDirty || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"endIndex\") || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._stackDirty) {\n\n\t\t\tlet startIndex = this.startIndex();\n\t\t\tlet endIndex = this.endIndex();\n\t\t\tlet minBulletDistance = this.get(\"minBulletDistance\", 0);\n\t\t\tif (minBulletDistance > 0 && baseAxis) {\n\t\t\t\tif (baseAxis.get(\"renderer\").axisLength() / (endIndex - startIndex) > minBulletDistance) {\n\t\t\t\t\tthis._showBullets = true;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._showBullets = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ((this._psi != startIndex || this._pei != endIndex || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._stackDirty || this._valuesDirty) && !this._selectionProcessed) {\n\t\t\t\tthis._selectionProcessed = true;\n\n\t\t\t\tconst vcx = this.get(\"vcx\", 1);\n\t\t\t\tconst vcy = this.get(\"vcy\", 1);\n\t\t\t\tconst stacked = this.get(\"stacked\", false);\n\t\t\t\tconst outOfSelection = this.getPrivate(\"outOfSelection\");\n\n\t\t\t\tif (baseAxis === xAxis) {\n\t\t\t\t\tyAxis._calculateTotals();\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMinY\", undefined);\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMaxY\", undefined);\n\t\t\t\t\tif (!outOfSelection) {\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tthis.processYSelectionDataItem(this.dataItems[i], vcy, stacked);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (baseAxis === yAxis) {\n\t\t\t\t\txAxis._calculateTotals();\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMinX\", undefined);\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMaxX\", undefined);\n\t\t\t\t\tif (!outOfSelection) {\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tthis.processXSelectionDataItem(this.dataItems[i], vcx, stacked);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (baseAxis === xAxis) {\n\t\t\t\t\tif (this.get(\"valueYShow\") !== \"valueYWorking\") {\n\t\t\t\t\t\tconst selectionMinY = this.getPrivate(\"selectionMinY\");\n\t\t\t\t\t\tif (selectionMinY != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"minY\", selectionMinY);\n\t\t\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst selectionMaxY = this.getPrivate(\"selectionMaxY\");\n\t\t\t\t\t\tif (selectionMaxY != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"maxY\", selectionMaxY);\n\t\t\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (baseAxis === yAxis) {\n\t\t\t\t\tif (this.get(\"valueXShow\") !== \"valueXWorking\") {\n\t\t\t\t\t\tconst selectionMinX = this.getPrivate(\"selectionMinX\");\n\t\t\t\t\t\tif (selectionMinX != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"minX\", selectionMinX);\n\t\t\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst selectionMaxX = this.getPrivate(\"selectionMaxX\")\n\t\t\t\t\t\tif (selectionMaxX != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"maxX\", selectionMaxX);\n\t\t\t\t\t\t\txAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.isPrivateDirty(\"selectionMinX\") || this.isPrivateDirty(\"selectionMaxX\")) {\n\t\t\t\t\txAxis.markDirtySelectionExtremes();\n\t\t\t\t}\n\n\t\t\t\tif (this.isPrivateDirty(\"selectionMinY\") || this.isPrivateDirty(\"selectionMaxY\")) {\n\t\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t\t}\n\n\t\t\t\t// this.updateLegendValue(undefined); flickers while panning\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _makeRangeMask() {\n\t\tif (this.axisRanges.length > 0) {\n\t\t\tlet mainContainerMask = this._mainContainerMask;\n\t\t\tif (mainContainerMask == null) {\n\t\t\t\tmainContainerMask = this.children.push(Graphics.new(this._root, {}));\n\t\t\t\tthis._mainContainerMask = mainContainerMask;\n\n\t\t\t\tmainContainerMask.set(\"draw\", (display, target) => {\n\t\t\t\t\tconst parent = this.parent;\n\t\t\t\t\tif (parent) {\n\t\t\t\t\t\tconst w = this._root.container.width();\n\t\t\t\t\t\tconst h = this._root.container.height();\n\t\t\t\t\t\tdisplay.moveTo(-w, -h);\n\t\t\t\t\t\tdisplay.lineTo(-w, h * 2);\n\t\t\t\t\t\tdisplay.lineTo(w * 2, h * 2);\n\t\t\t\t\t\tdisplay.lineTo(w * 2, -h);\n\t\t\t\t\t\tdisplay.lineTo(-w, -h);\n\n\n\t\t\t\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\t\t\t\tconst fill = axisRange.axisDataItem.get(\"axisFill\");\n\n\t\t\t\t\t\t\tif (parent) {\n\t\t\t\t\t\t\t\tif (fill) {\n\t\t\t\t\t\t\t\t\tlet draw = fill.get(\"draw\");\n\t\t\t\t\t\t\t\t\tif (draw) {\n\t\t\t\t\t\t\t\t\t\tdraw(display, target);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\tthis.mainContainer._display.mask = mainContainerMask!._display;\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tmainContainerMask.markDirty();\n\t\t\tmainContainerMask._markDirtyKey(\"fill\");\n\t\t}\n\t\telse {\n\t\t\tthis.mainContainer._display.mask = null;\n\t\t}\n\t}\n\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\t\t// save for performance\n\t\tthis._x = this.x();\n\t\tthis._y = this.y();\n\t\tthis._makeRangeMask();\n\t}\n\n\tprotected _stack() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tconst seriesIndex = chart.series.indexOf(this);\n\n\t\t\tthis._couldStackTo = [];\n\n\t\t\tif (seriesIndex > 0) {\n\t\t\t\tlet series: XYSeries;\n\n\t\t\t\tfor (let i = seriesIndex - 1; i >= 0; i--) {\n\t\t\t\t\tseries = chart.series.getIndex(i)!;\n\t\t\t\t\tif (series.get(\"xAxis\") === this.get(\"xAxis\") && series.get(\"yAxis\") === this.get(\"yAxis\") && series.className === this.className) {\n\t\t\t\t\t\tthis._couldStackTo.push(series);\n\t\t\t\t\t\tif (!series.get(\"stacked\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._stackDataItems();\n\t\t}\n\t}\n\n\tprotected _unstack() {\n\t\t$object.each(this._reallyStackedTo, (_key, value) => {\n\t\t\tdelete (value._stackedSeries[this.uid]);\n\t\t})\n\n\t\tthis._reallyStackedTo = {};\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tdataItem.setRaw(\"stackToItemY\", undefined);\n\t\t\tdataItem.setRaw(\"stackToItemX\", undefined);\n\t\t})\n\t}\n\n\tprotected _stackDataItems() {\n\t\t// this works only with the same number of data @todo: search by date/category?\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tlet field: \"valueX\" | \"valueY\";\n\t\tlet stackToItemKey: \"stackToItemX\" | \"stackToItemY\";\n\t\tif (baseAxis === xAxis) {\n\t\t\tfield = \"valueY\";\n\t\t\tstackToItemKey = \"stackToItemY\";\n\t\t}\n\t\telse if (baseAxis === yAxis) {\n\t\t\tfield = \"valueX\";\n\t\t\tstackToItemKey = \"stackToItemX\";\n\t\t}\n\n\t\tlet len = this._couldStackTo.length;\n\t\tlet index = 0;\n\t\tconst stackToNegative = this.get(\"stackToNegative\");\n\n\t\tthis._reallyStackedTo = {};\n\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tfor (let s = 0; s < len; s++) {\n\t\t\t\tlet stackToSeries = this._couldStackTo[s];\n\t\t\t\tlet stackToItem = stackToSeries.dataItems[index];\n\t\t\t\tlet value = dataItem.get(field);\n\n\t\t\t\tif (stackToItem) {\n\t\t\t\t\tlet stackValue = stackToItem.get(field);\n\t\t\t\t\tif (stackToNegative) {\n\t\t\t\t\t\tif ($type.isNumber(value)) {\n\t\t\t\t\t\t\tif ($type.isNumber(stackValue)) {\n\t\t\t\t\t\t\t\tif (value >= 0 && stackValue >= 0) {\n\t\t\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (value < 0 && stackValue < 0) {\n\t\t\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif ($type.isNumber(value) && $type.isNumber(stackValue)) {\n\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tindex++;\n\t\t})\n\t}\n\n\tprotected processXSelectionDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, vcx: number, stacked: boolean) {\n\t\t$array.each(this.__valueXShowFields, (key) => {\n\t\t\tlet value = dataItem.get(<any>key);\n\t\t\tif (value != null) {\n\t\t\t\tif (stacked) {\n\t\t\t\t\tvalue += this.getStackedXValueWorking(dataItem, key);\n\t\t\t\t}\n\n\t\t\t\tthis._min(\"selectionMinX\", value);\n\t\t\t\tthis._max(\"selectionMaxX\", value * vcx);\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected processYSelectionDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, vcy: number, stacked: boolean) {\n\t\t$array.each(this.__valueYShowFields, (key) => {\n\n\t\t\tlet value = dataItem.get(<any>key);\n\t\t\tif (value != null) {\n\t\t\t\tif (stacked) {\n\t\t\t\t\tvalue += this.getStackedYValueWorking(dataItem, key);\n\t\t\t\t}\n\n\t\t\t\tthis._min(\"selectionMinY\", value);\n\t\t\t\tthis._max(\"selectionMaxY\", value * vcy);\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedYValueWorking(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\n\t\tif (stackToItem) {\n\t\t\tconst stackedToSeries = stackToItem.component as XYSeries;\n\n\t\t\treturn stackToItem.get(key as any, 0) * stackedToSeries.get(\"vcy\", 1) + this.getStackedYValueWorking(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedXValueWorking(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\n\t\tif (stackToItem) {\n\t\t\tconst stackedToSeries = stackToItem.component as XYSeries;\n\t\t\treturn stackToItem.get(key as any, 0) * stackedToSeries.get(\"vcx\", 1) + this.getStackedXValueWorking(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedYValue(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\n\t\tif (stackToItem) {\n\t\t\treturn stackToItem.get(key as any, 0) + this.getStackedYValue(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedXValue(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\n\t\tif (stackToItem) {\n\t\t\treturn stackToItem.get(key as any, 0) + this.getStackedXValue(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic createLegendMarker(_dataItem?: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tthis.updateLegendMarker();\n\t}\n\n\tpublic _markDirtyAxes() {\n\t\tthis._axesDirty = true;\n\t\tthis.markDirty();\n\t}\n\n\tpublic _markDataSetDirty() {\n\t\tthis._afterDataChange();\n\t\tthis._valuesDirty = true;\n\t\tthis._dataProcessed = false;\n\t\tthis._aggregatesCalculated = false;\n\t\tthis.markDirty();\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._axesDirty = false;\n\t\tthis._selectionProcessed = false;\n\t\tthis._stackDirty = false;\n\t\tthis._dataProcessed = false;\n\t}\n\n\tpublic _positionBullet(bullet: Bullet) {\n\n\t\tlet sprite = bullet.get(\"sprite\");\n\t\tif (sprite) {\n\t\t\tlet dataItem = sprite.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\n\t\t\tlet locationX = bullet.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\t\tlet locationY = bullet.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\t\tlet xAxis = this.get(\"xAxis\");\n\t\t\tlet yAxis = this.get(\"yAxis\");\n\n\t\t\tconst positionX = xAxis.getDataItemPositionX(dataItem, this._xField, locationX, this.get(\"vcx\", 1));\n\t\t\tconst positionY = yAxis.getDataItemPositionY(dataItem, this._yField, locationY, this.get(\"vcy\", 1))\n\n\t\t\tlet point = this.getPoint(positionX, positionY);\n\n\t\t\tlet left = dataItem.get(\"left\", point.x);\n\t\t\tlet right = dataItem.get(\"right\", point.x);\n\t\t\tlet top = dataItem.get(\"top\", point.y);\n\t\t\tlet bottom = dataItem.get(\"bottom\", point.y);\n\n\t\t\tif (this._shouldShowBullet(positionX, positionY)) {\n\t\t\t\tif (!bullet.getPrivate(\"hidden\")) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", true);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t}\n\n\t\t\t\tlet w = right - left;\n\t\t\t\tlet h = bottom - top;\n\n\t\t\t\tif (sprite.isType(\"Label\")) {\n\t\t\t\t\tsprite.set(\"maxWidth\", Math.abs(w));\n\t\t\t\t\tsprite.set(\"maxHeight\", Math.abs(h));\n\t\t\t\t}\n\n\t\t\t\tlet x = left + w * locationX;\n\t\t\t\tlet y = bottom - h * locationY;\n\n\t\t\t\tsprite.set(\"x\", x);\n\t\t\t\tsprite.set(\"y\", y);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _shouldShowBullet(_positionX: number, _positionY: number): boolean {\n\t\treturn this._showBullets;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic setDataSet(id: string) {\n\t\tif (this._dataSets[id]) {\n\t\t\tthis._handleDataSetChange();\n\t\t\tthis._dataItems = this._dataSets[id];\n\t\t\tthis._markDataSetDirty();\n\t\t\tthis._dataSetId = id;\n\n\t\t\tconst type = \"datasetchanged\";\n\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\tthis.events.dispatch(type, { type: type, target: this, id: id });\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleDataSetChange() {\n\t\tif (this.bullets.length > 0) {\n\t\t\t$array.each(this._dataItems, (dataItem) => {\n\t\t\t\tlet bullets = dataItem.bullets;\n\t\t\t\tif (bullets) {\n\t\t\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\t\t\tlet sprite = bullet.get(\"sprite\");\n\t\t\t\t\t\tif (sprite) {\n\t\t\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tthis._selectionProcessed = false; // for totals to be calculated\n\t}\n\n\t/**\n\t * Shows hidden series.\n\t *\n\t * @param   duration  Duration of animation in milliseconds\n\t * @return            Animation promise\n\t */\n\tpublic async show(duration?: number): Promise<void> {\n\t\tthis._fixVC();\n\t\tlet promises: Array<Promise<any>> = [];\n\t\tpromises.push(super.show(duration).then(() => {\n\t\t\tthis._isShowing = false;\n\t\t\tlet xAxis = this.get(\"xAxis\");\n\t\t\tlet yAxis = this.get(\"yAxis\");\n\t\t\tlet baseAxis = this.get(\"baseAxis\");\n\t\t\tif (yAxis !== baseAxis) {\n\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t}\n\t\t\tif (xAxis !== baseAxis) {\n\t\t\t\txAxis.markDirtySelectionExtremes();\n\t\t\t}\n\t\t}));\n\t\tpromises.push(this.bulletsContainer.show(duration));\n\t\tpromises.push(this._sequencedShowHide(true, duration));\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Hides series.\n\t *\n\t * @param   duration  Duration of animation in milliseconds\n\t * @return            Animation promise\n\t */\n\tpublic async hide(duration?: number): Promise<void> {\n\t\tthis._fixVC();\n\t\tlet promises: Promise<any>[] = [];\n\t\tpromises.push(super.hide(duration).then(() => {\n\t\t\tthis._isHiding = false;\n\t\t}));\n\t\tpromises.push(this.bulletsContainer.hide(duration));\n\t\tpromises.push(this._sequencedShowHide(false, duration));\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Shows series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = this.get(\"stateAnimationDuration\", 0);\n\t\t}\n\n\t\tconst easing = this.get(\"stateAnimationEasing\");\n\n\t\t$array.each(this._valueFields, (key) => {\n\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: dataItem.get(key as any), duration: duration!, easing: easing }).waitForStop());\n\t\t})\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Hides series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\n\t\tconst hiddenState = this.states.create(\"hidden\", {})\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = hiddenState.get(\"stateAnimationDuration\", this.get(\"stateAnimationDuration\", 0));\n\t\t}\n\n\t\tconst easing = hiddenState.get(\"stateAnimationEasing\", this.get(\"stateAnimationEasing\"));\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tif (baseAxis === xAxis || !baseAxis) {\n\n\t\t\t$array.each(this._valueYFields, (key) => {\n\t\t\t\tlet min = yAxis.getPrivate(\"min\");\n\t\t\t\tlet baseValue = yAxis.baseValue();\n\t\t\t\tif ($type.isNumber(min) && min > baseValue) {\n\t\t\t\t\tbaseValue = min;\n\t\t\t\t}\n\t\t\t\tif (stacked) {\n\t\t\t\t\tbaseValue = 0;\n\t\t\t\t}\n\t\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: baseValue, duration: duration!, easing: easing }).waitForStop());\n\t\t\t})\n\t\t}\n\t\tif (baseAxis === yAxis || !baseAxis) {\n\n\t\t\tlet min = xAxis.getPrivate(\"min\");\n\t\t\tlet baseValue = xAxis.baseValue();\n\t\t\tif ($type.isNumber(min) && min > baseValue) {\n\t\t\t\tbaseValue = min;\n\t\t\t}\n\t\t\tif (stacked) {\n\t\t\t\tbaseValue = 0;\n\t\t\t}\n\n\t\t\t$array.each(this._valueXFields, (key) => {\n\t\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: baseValue, duration: duration!, easing: easing }).waitForStop());\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\tpublic _markDirtyStack() {\n\t\tthis._stackDirty = true;\n\t\tthis.markDirty();\n\t\tthis._markStakedDirtyStack();\n\t}\n\n\tprotected _markStakedDirtyStack() {\n\t\tconst stackedSeries = this._stackedSeries;\n\t\tif (stackedSeries) {\n\n\t\t\t$object.each(stackedSeries, (_key, value) => {\n\t\t\t\tif (!value._stackDirty) {\n\t\t\t\t\tvalue._markDirtyStack();\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tpublic _afterChanged() {\n\t\tsuper._afterChanged();\n\t\tif (this._skipped) {\n\t\t\tthis._markDirtyAxes();\n\t\t\tthis._skipped = false;\n\t\t}\n\t}\n\n\t/**\n\t * Shows a tooltip for specific data item.\n\t *\n\t * @param  dataItem  Data item\n\t */\n\tpublic showDataItemTooltip(dataItem: DataItem<this[\"_dataItemSettings\"]> | undefined) {\n\t\tthis.updateLegendMarker(dataItem);\n\t\tthis.updateLegendValue(dataItem);\n\n\t\tif (this.get(\"tooltip\")) {\n\t\t\tif (!this.isHidden()) {\n\t\t\t\tconst tooltip = this.get(\"tooltip\")!;\n\t\t\t\tif (tooltip) {\n\t\t\t\t\ttooltip._setDataItem(dataItem);\n\n\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\tlet locationX = this.get(\"locationX\", 0);\n\t\t\t\t\t\tlet locationY = this.get(\"locationY\", 1);\n\n\t\t\t\t\t\tlet itemLocationX = dataItem.get(\"locationX\", locationX);\n\t\t\t\t\t\tlet itemLocationY = dataItem.get(\"locationY\", locationY);\n\n\t\t\t\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\t\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\t\t\t\tconst vcx = this.get(\"vcx\", 1);\n\t\t\t\t\t\tconst vcy = this.get(\"vcy\", 1);\n\n\t\t\t\t\t\tconst xPos = xAxis.getDataItemPositionX(dataItem, this._tooltipFieldX!, this._aLocationX0 + (this._aLocationX1 - this._aLocationX0) * itemLocationX, vcx);\n\t\t\t\t\t\tconst yPos = yAxis.getDataItemPositionY(dataItem, this._tooltipFieldY!, this._aLocationY0 + (this._aLocationY1 - this._aLocationY0) * itemLocationY, vcy);\n\n\t\t\t\t\t\tconst point = this.getPoint(xPos, yPos);\n\n\t\t\t\t\t\tlet show = true;\n\t\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\t\tif (dataItem.get(field as any) == null) {\n\t\t\t\t\t\t\t\tshow = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tif (show) {\n\t\t\t\t\t\t\tconst chart = this.chart;\n\t\t\t\t\t\t\tif (chart && chart.inPlot(point)) {\n\t\t\t\t\t\t\t\ttooltip.label.text.markDirtyText();\n\t\t\t\t\t\t\t\ttooltip.set(\"tooltipTarget\", this._getTooltipTarget(dataItem));\n\t\t\t\t\t\t\t\ttooltip.set(\"pointTo\", this._display.toGlobal({ x: point.x, y: point.y }));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.hideTooltip();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getTooltipTarget(dataItem: DataItem<this[\"_dataItemSettings\"]>): Sprite {\n\t\tif (this.get(\"seriesTooltipTarget\") == \"bullet\") {\n\t\t\tconst bullets = dataItem.bullets;\n\t\t\tif (bullets && bullets.length > 0) {\n\t\t\t\tconst bullet = bullets[0];\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\treturn sprite;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLegendValue(dataItem: DataItem<this[\"_dataItemSettings\"]> | undefined) {\n\t\tconst legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (legendDataItem) {\n\n\t\t\tconst label = legendDataItem.get(\"label\");\n\t\t\tif (label) {\n\t\t\t\tlet txt = \"\";\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tlabel._setDataItem(dataItem);\n\t\t\t\t\ttxt = this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\")));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel._setDataItem(this._emptyDataItem);\n\t\t\t\t\ttxt = this.get(\"legendRangeLabelText\", this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\"))));\n\t\t\t\t}\n\n\t\t\t\tlabel.set(\"text\", txt);\n\t\t\t}\n\n\t\t\tconst valueLabel = legendDataItem.get(\"valueLabel\");\n\t\t\tif (valueLabel) {\n\t\t\t\tlet txt = \"\";\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tvalueLabel._setDataItem(dataItem);\n\t\t\t\t\ttxt = this.get(\"legendValueText\", valueLabel.get(\"text\", \"\"));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvalueLabel._setDataItem(this._emptyDataItem);\n\t\t\t\t\ttxt = this.get(\"legendRangeValueText\", valueLabel.get(\"text\", \"\"));\n\t\t\t\t}\n\n\t\t\t\tvalueLabel.set(\"text\", txt);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getItemReaderLabel(): string {\n\t\tlet text = \"X: {\" + this._xField;\n\t\tif (this.get(\"xAxis\").isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\ttext += \".formatDate()\";\n\t\t}\n\t\ttext += \"}; Y: {\" + this._yField;\n\t\tif (this.get(\"yAxis\").isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\ttext += \".formatDate()\";\n\t\t}\n\t\ttext += \"}\";\n\t\treturn text;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getPoint(positionX: number, positionY: number): IPoint {\n\t\tlet x = this.get(\"xAxis\").get(\"renderer\").positionToCoordinate(positionX);\n\t\tlet y = this.get(\"yAxis\").get(\"renderer\").positionToCoordinate(positionY);\n\n\t\treturn { x: x, y: y };\n\t}\n\n\tprotected _shouldInclude(_position: number): boolean {\n\t\treturn true;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorHide() {\n\t\tthis.hideTooltip();\n\t\tthis.updateLegendValue(undefined);\n\t\tthis.updateLegendMarker(undefined);\n\t}\n\n\tpublic _afterDataChange() {\n\t\tsuper._afterDataChange();\n\t\tthis.resetExtremes();\n\t}\n\n\n\t// todo description\n\tpublic resetExtremes() {\n\t\tthis.setPrivate(\"selectionMinX\", undefined);\n\t\tthis.setPrivate(\"selectionMaxX\", undefined);\n\t\tthis.setPrivate(\"selectionMinY\", undefined);\n\t\tthis.setPrivate(\"selectionMaxY\", undefined);\n\n\t\tthis.setPrivate(\"minX\", undefined);\n\t\tthis.setPrivate(\"minY\", undefined);\n\t\tthis.setPrivate(\"maxX\", undefined);\n\t\tthis.setPrivate(\"maxY\", undefined);\n\t}\n\n\t/**\n\t * Creates and returns an axis range object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @param   axisDataItem  Axis data item\n\t * @return                Axis range\n\t */\n\tpublic createAxisRange(axisDataItem: DataItem<IAxisDataItem>): this[\"_axisRangeType\"] {\n\t\treturn this.axisRanges.push({\n\t\t\taxisDataItem: axisDataItem\n\t\t})\n\t}\n}\n","import { Scrollbar, IScrollbarPrivate, IScrollbarSettings } from \"../../core/render/Scrollbar\";\nimport { XYChart } from \"./XYChart\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport * as $utils from \"../../core/util/Utils\";\n\nexport interface IXYChartScrollbarSettings extends IScrollbarSettings {\n\n}\n\nexport interface IXYChartScrollbarPrivate extends IScrollbarPrivate {\n}\n\n/**\n * Creates a scrollbar with chart preview in it.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/#Scrollbar_with_chart_preview} for more info\n * @important\n */\nexport class XYChartScrollbar extends Scrollbar {\n\n\tdeclare public _settings: IXYChartScrollbarSettings;\n\tdeclare public _privateSettings: IXYChartScrollbarPrivate;\n\n\tpublic static className: string = \"XYChartScrollbar\";\n\tpublic static classNames: Array<string> = Scrollbar.classNames.concat([XYChartScrollbar.className]);\n\n\t/**\n\t * An instance of an [[XYChart]] that is used to plot chart preview in\n\t * scrollbar.\n\t */\n\tpublic readonly chart: XYChart = this.children.push(XYChart.new(this._root, {\n\t\tthemeTags: [\"chart\"],\n\t\tinteractive: false,\n\t\tinteractiveChildren: false,\n\t\tpanX: false,\n\t\tpanY: false,\n\t\twheelX: \"none\",\n\t\twheelY: \"none\"\n\t}));\n\n\t/**\n\t * A graphics element that is displayed over inactive portion of the\n\t * scrollbarpreview, to dim it down.\n\t */\n\tpublic readonly overlay: Graphics = this.children.push(Graphics.new(this._root, {\n\t\tthemeTags: [\"overlay\"],\n\t\tinteractive: false\n\t}));\n\n\tprotected _afterNew() {\n\t\tthis._addOrientationClass();\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"scrollbar\", \"xy\", \"chart\", this._settings.orientation]);\n\n\t\tconst children = this.children;\n\t\tchildren.moveValue(this.thumb);\n\t\tchildren.moveValue(this.startGrip);\n\t\tchildren.moveValue(this.endGrip);\n\n\t\tthis.thumb.set(\"opacity\", 0);\n\t\tthis.thumb.states.create(\"hover\", { opacity: 0.2 });\n\n\t\tconst plotContainer = this.chart.plotContainer;\n\t\tplotContainer.set(\"interactive\", false);\n\t\tplotContainer.remove(\"background\");\n\t\tplotContainer.children.removeValue(this.chart.zoomOutButton);\n\n\t\tsuper._afterNew();\n\t}\n\n\tprotected _updateThumb() {\n\t\tsuper._updateThumb();\n\n\t\tthis.overlay.set(\"draw\", (display) => {\n\t\t\tconst startGrip = this.startGrip;\n\t\t\tconst endGrip = this.endGrip;\n\n\t\t\tlet x0 = startGrip.x();\n\t\t\tlet y0 = startGrip.y();\n\n\t\t\tlet x1 = endGrip.x();\n\t\t\tlet y1 = endGrip.y();\n\n\t\t\tconst h = this.height();\n\t\t\tconst w = this.width();\n\n\t\t\tif (x0 > x1) {\n\t\t\t\t[x0, x1] = [x1, x0]\n\t\t\t}\n\n\t\t\tif (y0 > y1) {\n\t\t\t\t[y0, y1] = [y1, y0]\n\t\t\t}\n\n\t\t\tif (this.get(\"orientation\") === \"horizontal\") {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(x0, 0);\n\t\t\t\tdisplay.lineTo(x0, h);\n\t\t\t\tdisplay.lineTo(0, h);\n\t\t\t\tdisplay.lineTo(0, 0);\n\n\t\t\t\tdisplay.moveTo(x1, 0);\n\t\t\t\tdisplay.lineTo(w, 0);\n\t\t\t\tdisplay.lineTo(w, h);\n\t\t\t\tdisplay.lineTo(x1, h);\n\t\t\t\tdisplay.lineTo(x1, 0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(0, y0);\n\t\t\t\tdisplay.lineTo(w, y0);\n\t\t\t\tdisplay.lineTo(w, 0);\n\t\t\t\tdisplay.lineTo(0, 0);\n\n\t\t\t\tdisplay.moveTo(0, y1);\n\t\t\t\tdisplay.lineTo(0, h);\n\t\t\t\tdisplay.lineTo(w, h);\n\t\t\t\tdisplay.lineTo(w, y1);\n\t\t\t\tdisplay.lineTo(0, y1);\n\t\t\t}\n\t\t})\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport { Axis, IAxisSettings, IAxisPrivate, IAxisDataItem, IAxisEvents } from \"./Axis\";\nimport type { IXYSeriesDataItem, XYSeries } from \"../series/XYSeries\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $math from \"../../../core/util/Math\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport { populateString } from \"../../../core/util/PopulateString\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\n\nexport interface ICategoryAxisSettings<R extends AxisRenderer> extends IAxisSettings<R> {\n\n\t/**\n\t * A function that can be used to specify how to configure axis fills.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_fills} for more info\n\t */\n\tfillRule?: (dataItem: DataItem<ICategoryAxisDataItem>, index?: number) => void;\n\n\t/**\n\t * A field in data which holds categories.\n\t */\n\tcategoryField: string;\n\n\t/**\n\t * Relative location of where axis cell starts: 0 - beginning, 1 - end.\n\t *\n\t * @default 0\n\t */\n\tstartLocation?: number;\n\n\t/**\n\t * Relative location of where axis cell ends: 0 - beginning, 1 - end.\n\t *\n\t * @default 1\n\t */\n\tendLocation?: number;\n}\n\nexport interface ICategoryAxisDataItem extends IAxisDataItem {\n\n\t/**\n\t * Named category.\n\t */\n\tcategory?: string;\n\n\t/**\n\t * Named end category (for axis items that span multiple categories, like\n\t * axis ranges).\n\t */\n\tendCategory?: string;\n\n\t/**\n\t * Index of the data item.\n\t */\n\tindex?: number;\n\n\t/**\n\t * Relative location of the category within cell: 0 - start, 1 - end.\n\t */\n\tcategoryLocation?: number;\n\n\t/**\n\t * Relative location of the end category within cell: 0 - start, 1 - end.\n\t */\n\tendCategoryLocation?: number;\n\n\t/**\n\t * A distance to shift data item relative to its original position.\n\t *\n\t * The value is 0 to 1, where 1 is full witdth of the axis.\n\t *\n\t * Can be used to sort data items without modifying order of the actual data.\n\t */\n\tdeltaPosition?: number;\n\n}\n\nexport interface ICategoryAxisPrivate extends IAxisPrivate {\n\n\t/**\n\t * Start index of the current zoom scope.\n\t */\n\tstartIndex?: number;\n\n\t/**\n\t * End index of the current zoom scope.\n\t */\n\tendIndex?: number;\n\n}\n\nexport interface ICategoryAxisEvents extends IAxisEvents {\n\n}\n\n/**\n * Creates a category axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/category-axis/} for more info\n * @important\n */\nexport class CategoryAxis<R extends AxisRenderer> extends Axis<R> {\n\tpublic static className: string = \"CategoryAxis\";\n\tpublic static classNames: Array<string> = Axis.classNames.concat([CategoryAxis.className]);\n\n\tdeclare public _settings: ICategoryAxisSettings<R>;\n\tdeclare public _privateSettings: ICategoryAxisPrivate;\n\tdeclare public _dataItemSettings: ICategoryAxisDataItem;\n\tdeclare public _events: ICategoryAxisEvents;\n\n\tprotected _frequency: number = 1;\n\n\tprotected _itemMap: { [index: string]: DataItem<ICategoryAxisDataItem> } = {};\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.fields.push(\"category\");\n\t\tthis.setPrivateRaw(\"name\", \"category\");\n\t\tthis.addTag(\"category\");\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tconst len = this.dataItems.length;\n\t\tlet i = 0;\n\t\tif (this._valuesDirty) {\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tdataItem.setRaw(\"index\", i);\n\t\t\t\tthis._itemMap[dataItem.get(\"category\") as string] = dataItem;\n\t\t\t\ti++;\n\t\t\t})\n\n\t\t\tthis.setPrivateRaw(\"maxZoomFactor\", len);\n\t\t}\n\n\t\tthis.setPrivateRaw(\"startIndex\", Math.max(Math.round(this.get(\"start\", 0) * len), 0));\t\t\n\t\tthis.setPrivateRaw(\"endIndex\", Math.min(Math.round(this.get(\"end\", 1) * len), len));\t\t\n\n\t\tif (this._sizeDirty || this._valuesDirty || (this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"endIndex\") || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\"))) {\n\t\t\tif (this.dataItems.length > 0) {\n\t\t\t\tthis._handleRangeChange();\n\t\t\t\tthis._prepareAxisItems();\n\t\t\t\tthis._updateAxisRanges();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleRangeChange() {\n\t\t$array.each(this.series, (series) => {\n\t\t\tlet startCategory = this.dataItems[this.startIndex()].get(\"category\");\n\t\t\tlet endCategory = this.dataItems[this.endIndex() - 1].get(\"category\");\n\n\t\t\tlet baseAxis = series.get(\"baseAxis\");\n\t\t\tlet xAxis = series.get(\"xAxis\");\n\t\t\tlet yAxis = series.get(\"yAxis\");\n\n\t\t\tif (xAxis instanceof CategoryAxis && yAxis instanceof CategoryAxis) {\n\t\t\t\tseries._markDirtyAxes();\n\t\t\t}\n\t\t\telse if (baseAxis === this) {\n\t\t\t\tlet key: string | undefined;\n\t\t\t\tlet openKey: string | undefined;\n\t\t\t\tlet otherAxis = yAxis;\n\t\t\t\tif (xAxis === baseAxis) {\n\t\t\t\t\tif (series.get(\"categoryXField\")) {\n\t\t\t\t\t\tkey = \"categoryX\";\n\t\t\t\t\t}\n\t\t\t\t\tif (series.get(\"openCategoryXField\")) {\n\t\t\t\t\t\topenKey = \"openCategoryX\";\n\t\t\t\t\t}\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\t\tif (series.get(\"categoryYField\")) {\n\t\t\t\t\t\tkey = \"categoryY\";\n\t\t\t\t\t}\n\t\t\t\t\tif (series.get(\"openCategoryYField\")) {\n\t\t\t\t\t\topenKey = \"openCategoryY\";\n\t\t\t\t\t}\n\t\t\t\t\totherAxis = xAxis;\n\t\t\t\t}\n\n\t\t\t\tif (otherAxis.className == \"ValueAxis\") {\n\n\t\t\t\t\tif (key || openKey) {\n\t\t\t\t\t\tlet startDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\t\t\t\t\t\tlet endDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\n\t\t\t\t\t\tfor (let i = 0, len = series.dataItems.length; i < len; i++) {\n\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\tif (key) {\n\t\t\t\t\t\t\t\tif (dataItem.get(key as any) === startCategory) {\n\t\t\t\t\t\t\t\t\tstartDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (openKey) {\n\t\t\t\t\t\t\t\tif (dataItem.get(openKey as any) === startCategory) {\n\t\t\t\t\t\t\t\t\tstartDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (let i = series.dataItems.length - 1; i >= 0; i--) {\n\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\tif (key) {\n\t\t\t\t\t\t\t\tif (dataItem.get(key as any) === endCategory) {\n\t\t\t\t\t\t\t\t\tendDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (openKey) {\n\t\t\t\t\t\t\t\tif (dataItem.get(openKey as any) === endCategory) {\n\t\t\t\t\t\t\t\t\tendDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (startDataItem) {\n\t\t\t\t\t\t\tseries.setPrivate(\"startIndex\", series.dataItems.indexOf(startDataItem));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (endDataItem) {\n\t\t\t\t\t\t\tseries.setPrivate(\"endIndex\", series.dataItems.indexOf(endDataItem) + 1);\n\t\t\t\t\t\t}\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tseries._markDirtyAxes();\t// must be outside\n\t\t\t}\n\t\t})\n\t}\n\n\n\tprotected _prepareAxisItems() {\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst len = this.dataItems.length;\n\n\t\tlet startIndex = this.startIndex();\n\t\tif (startIndex > 0) {\n\t\t\tstartIndex--;\n\t\t}\n\n\t\tlet endIndex = this.endIndex();\n\t\tif (endIndex < len) {\n\t\t\tendIndex++;\n\t\t}\n\n\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1 / Number.MAX_SAFE_INTEGER);\n\n\t\tlet frequency = Math.max(1, Math.min(len, Math.ceil((endIndex - startIndex) / maxCount)));\n\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\n\t\tthis._frequency = frequency;\n\n\t\tfor (let j = 0; j < len; j++) {\n\t\t\tthis.dataItems[j].hide();\n\t\t}\n\n\t\tlet f = this.dataItems[startIndex].get(\"index\", 0);\n\n\t\tfor (let i = startIndex; i < endIndex; i = i + frequency) {\n\t\t\tlet dataItem = this.dataItems[i];\n\n\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\tif (dataItem.isHidden()) {\n\t\t\t\tdataItem.show();\n\t\t\t}\n\n\t\t\tthis._prepareDataItem(dataItem, f, frequency);\n\t\t\tf++;\n\t\t}\n\n\t\tthis._updateGhost();\n\t}\n\n\n\tpublic _prepareDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, fillIndex?: number, count?: number) {\n\t\tlet renderer = this.get(\"renderer\");\n\n\t\tlet categoryLocation = dataItem.get(\"categoryLocation\", 0);\n\t\tlet endCategoryLocation = dataItem.get(\"endCategoryLocation\", 1);\n\n\t\tlet index: number | undefined = dataItem.get(\"index\");\n\n\t\tif (!$type.isNumber(index)) {\n\t\t\tindex = this.categoryToIndex(dataItem.get(\"category\")!);\n\t\t}\n\n\t\tlet position = this.indexToPosition(index, categoryLocation);\n\n\t\tlet endCategory = dataItem.get(\"endCategory\")!;\n\t\tlet endIndex: number;\n\t\tif (endCategory) {\n\t\t\tendIndex = this.categoryToIndex(endCategory);\n\t\t\tif (!$type.isNumber(endIndex)) {\n\t\t\t\tendIndex = index;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tendIndex = index;\n\t\t}\n\n\t\tlet endPosition = this.indexToPosition(endIndex, endCategoryLocation);\n\n\t\tlet fillEndIndex: number;\n\t\tlet fillEndPosition: number;\n\n\t\tif (dataItem.get(\"isRange\")) {\n\t\t\tfillEndIndex = endIndex;\n\t\t}\n\t\telse {\n\t\t\tfillEndIndex = index + this._frequency - 1;\n\t\t}\n\n\t\tfillEndPosition = this.indexToPosition(fillEndIndex, endCategoryLocation);\n\n\t\trenderer.updateLabel(dataItem.get(\"label\"), position, endPosition, count);\n\t\trenderer.updateGrid(dataItem.get(\"grid\"), position, endPosition);\n\t\trenderer.updateTick(dataItem.get(\"tick\"), position, endPosition, count);\n\t\trenderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\n\n\t\tthis._processBullet(dataItem);\n\t\trenderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\n\n\t\tconst fillRule = this.get(\"fillRule\");\n\t\tif (fillRule) {\n\t\t\tfillRule(dataItem, fillIndex)\n\t\t}\n\t}\n\n\tpublic startIndex() {\n\t\tlet len = this.dataItems.length;\n\t\treturn Math.min(Math.max(this.getPrivate(\"startIndex\", 0), 0), len - 1);\n\t}\n\n\tpublic endIndex() {\n\t\tlet len = this.dataItems.length;\n\t\treturn Math.max(1, Math.min(this.getPrivate(\"endIndex\", len), len));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic baseValue(): any {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic basePosition() {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific category index.\n\t *\n\t * @param   value  Index\n\t * @return         X coordinate\n\t */\n\tpublic getX(value: string): number {\n\t\tlet axisDataItem = this._itemMap[value];\n\t\tif (axisDataItem) {\n\t\t\treturn this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * Returns Y coordinate in pixels corresponding to specific category index.\n\t *\n\t * @param   value  Index\n\t * @return         Y coordinate\n\t */\n\tpublic getY(value: string): number {\n\t\tlet axisDataItem = this._itemMap[value];\n\t\tif (axisDataItem) {\n\t\t\treturn this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\tconst category = dataItem.get(field as any);\n\t\tconst axisDataItem = this._itemMap[category];\n\n\t\tif (axisDataItem) {\n\t\t\treturn this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, cellLocation, _axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\tconst category = dataItem.get(field as any);\n\t\tconst axisDataItem = this._itemMap[category];\n\t\tif (axisDataItem) {\n\t\t\treturn this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, cellLocation, _axisLocation));\n\t}\n\n\t/**\n\t * Converts category index to a relative position.\n\t *\n\t * `location` indicates relative position within category: 0 - start, 1 - end.\n\t *\n\t * If not set, will use middle (0.5) of the category.\n\t *\n\t * @param   index     Index\n\t * @param   location  Location\n\t * @return            Index\n\t */\n\tpublic indexToPosition(index: number, location?: number): number {\n\t\tif (!$type.isNumber(location)) {\n\t\t\tlocation = 0.5;\n\t\t}\n\n\t\tlet len = this.dataItems.length;\n\n\t\tlet startLocation = this.get(\"startLocation\", 0);\n\t\tlet endLocation = this.get(\"endLocation\", 1);\n\n\t\tlen -= startLocation;\n\t\tlen -= (1 - endLocation);\n\n\t\tlet position = (index + location - startLocation) / len;\n\n\t\tlet dataItem = this.dataItems[index];\n\t\tif (dataItem) {\n\t\t\tposition += dataItem.get(\"deltaPosition\", 0);\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * Returns an index of a category.\n\t *\n\t * @param   category  Category to look up\n\t * @return            Index\n\t */\n\tpublic categoryToIndex(category: string): number {\n\t\tlet dataItem = this._itemMap[category];\n\t\tif (dataItem) {\n\t\t\treturn dataItem.get(\"index\")!;\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic dataItemToPosition(dataItem: DataItem<this[\"_dataItemSettings\"]>): number {\n\t\treturn this.indexToPosition(dataItem.get(\"index\")!);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, location: number): number {\n\t\treturn this.indexToPosition(this.axisPositionToIndex(position), location);\n\t}\n\n\t/**\n\t * Returns an index of the category that corresponds to specific pixel\n\t * position within axis.\n\t *\n\t * @param position  Position (px)\n\t * @return Category index\n\t */\n\tpublic axisPositionToIndex(position: number): number {\n\t\tlet len = this.dataItems.length;\n\t\treturn $math.fitToRange(Math.floor(position * len), 0, len - 1);//$math.fitToRange(Math.floor((end - start) * len * position + len * start), 0, len - 1);\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number): string | undefined {\n\t\t//@todo number formatter + tag\n\t\tconst dataItem = this.dataItems[this.axisPositionToIndex(position)];\n\t\tif (dataItem) {\n\t\t\tconst label = dataItem.get(\"label\")\n\t\t\tif(label){\n\t\t\t\treturn populateString(label, this.get(\"tooltipText\", \"\"));\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip._setDataItem(this.dataItems[this.axisPositionToIndex(position)]);\n\t\ttooltip.label.text.markDirtyText();\n\t}\t\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined {\n\t\tif (this.dataItems.length > 0) {\n\t\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\t\tlet index = this.axisPositionToIndex(position);\n\t\t\t// try simple first\n\t\t\tlet seriesDataItem = series.dataItems[index];\n\t\t\tlet axisDataItem = this.dataItems[index];\n\t\t\tlet category = axisDataItem.get(\"category\");\n\n\t\t\tif (seriesDataItem && axisDataItem) {\n\t\t\t\tif (seriesDataItem.get(fieldName) === category) {\n\t\t\t\t\treturn seriesDataItem;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// if not found, try looking\n\t\t\tfor (let i = 0, len = series.dataItems.length; i < len; i++) {\n\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\tif (dataItem.get(fieldName) === category) {\n\t\t\t\t\treturn dataItem;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` indexes.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start index\n\t * @param  end       End index\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToIndexes(start: number, end: number, duration?: number) {\n\t\tlet len = this.dataItems.length;\n\t\tthis.zoom(start / len, end / len, duration);\n\t}\n\n\tpublic zoomToCategories(startCategory: string, endCategory: string, duration?: number) {\n\t\tthis.zoomToIndexes(this.categoryToIndex(startCategory), this.categoryToIndex(endCategory) + 1, duration);\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport { CategoryAxis, ICategoryAxisSettings, ICategoryAxisPrivate, ICategoryAxisDataItem, ICategoryAxisEvents } from \"./CategoryAxis\";\nimport type { ITimeInterval } from \"../../../core/util/Time\";\nimport * as $time from \"../../../core/util/Time\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\n\nexport interface ICategoryDateAxisSettings<R extends AxisRenderer> extends ICategoryAxisSettings<R> {\n\n\t/**\n\t * Indicates granularity of data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Data_granularity} for more info\n\t */\n\tbaseInterval: ITimeInterval;\n\n\t/**\n\t * A list of intervals the axis is allowed to show grid/labels on.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Grid_granularity} for more info\n\t */\n\tgridIntervals?: Array<ITimeInterval>;\n\n\t/**\n\t * Display \"period change\" labels using different format.\n\t *\n\t * If set to `true`, will use `periodChangeDateFormats` instead\n\t * of `dateFormats` for such labels, e.g. for month start.\n\t *\n\t * @default true\n\t */\n\tmarkUnitChange?: boolean;\n\n\t/**\n\t * Date formats used for intermediate labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tdateFormats?: { [index: string]: string };\n\n\t/**\n\t * Date formats used for \"period change\" labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tperiodChangeDateFormats?: { [index: string]: string };\n\n\t/**\n\t * A date format to use for axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\n\t */\n\ttooltipDateFormat?: string;\n\n}\n\nexport interface ICategoryDateAxisDataItem extends ICategoryAxisDataItem {\n}\n\nexport interface ICategoryDateAxisPrivate extends ICategoryAxisPrivate {\n\n\t/**\n\t * Current base interval.\n\t */\n\tbaseInterval: ITimeInterval;\n\n}\n\nexport interface ICategoryDateAxisEvents extends ICategoryAxisEvents {\n}\n\n\n/**\n * Category-based date axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/category-date-axis/} for more info\n * @important\n */\nexport class CategoryDateAxis<R extends AxisRenderer> extends CategoryAxis<R> {\n\tpublic static className: string = \"CategoryDateAxis\";\n\tpublic static classNames: Array<string> = CategoryAxis.classNames.concat([CategoryDateAxis.className]);\n\n\tdeclare public _settings: ICategoryDateAxisSettings<R>;\n\tdeclare public _privateSettings: ICategoryDateAxisPrivate;\n\tdeclare public _dataItemSettings: ICategoryDateAxisDataItem;\n\tdeclare public _events: ICategoryDateAxisEvents;\n\n\tprotected _frequency: number = 1;\n\n\tprotected _itemMap: { [index: string]: DataItem<ICategoryDateAxisDataItem> } = {};\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.fields.push(\"category\");\n\t\tsuper._afterNew();\n\t}\n\n\n\tprotected _prepareAxisItems() {\n\t\t// temp\n\t\tthis.setPrivateRaw(\"baseInterval\", this.get(\"baseInterval\"));\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst len = this.dataItems.length;\n\n\t\tlet startIndex = this.startIndex();\n\t\tif (startIndex > 0) {\n\t\t\tstartIndex--;\n\t\t}\n\n\t\tlet endIndex = this.endIndex();\n\t\tif (endIndex < len) {\n\t\t\tendIndex++;\n\t\t}\n\n\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1 / Number.MAX_SAFE_INTEGER);\n\n\t\tlet frequency = Math.min(len, Math.ceil((endIndex - startIndex) / maxCount));\n\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\n\t\tthis._frequency = frequency;\n\n\t\tfor (let j = 0; j < len; j++) {\n\t\t\tthis.dataItems[j].hide();\n\t\t}\n\n\t\tlet startTime = Number(this.dataItems[startIndex].get(\"category\"));\n\t\tlet endTime = Number(this.dataItems[endIndex - 1].get(\"category\"));\n\t\tlet realDuration = (endTime - startTime);\n\t\tif(endIndex - startIndex < maxCount){\n\t\t\trealDuration = (endTime - startTime) - ((endTime - startTime) / this.baseDuration() - (endIndex - startIndex)) * this.baseDuration();\n\t\t}\n\n\t\t// if all items are on axis\n\t\tlet gridInterval = $time.chooseInterval(0, realDuration, maxCount, this.get(\"gridIntervals\")!);\n\n\t\tconst nextGridUnit = $time.getNextUnit(gridInterval.timeUnit);\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\n\t\tif ($time.getIntervalDuration(gridInterval) < this.baseDuration()) {\n\t\t\tgridInterval = { ...baseInterval };\n\t\t}\n\n\t\tconst formats = this.get(\"dateFormats\")!;\n\n\t\tlet previousValue = -Infinity;\n\t\tlet previousIndex = -Infinity;\n\t\tlet previousUnitValue = -Infinity;\n\t\tlet format: string;\n\n\t\tlet selectedItems: Array<{ format: string, dataItem: DataItem<ICategoryDateAxisDataItem> }> = [];\n\t\tlet changed = false;\n\n\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\tlet dataItem = this.dataItems[i];\n\t\t\tlet index = dataItem.get(\"index\")!;\n\t\t\tlet skip = false;\n\n\t\t\tlet value = Number(dataItem.get(\"category\"));\n\t\t\tlet date = new Date(value);\n\t\t\tlet unitValue = $time.getUnitValue(date, gridInterval.timeUnit);\n\n\t\t\tformat = formats[gridInterval.timeUnit];\n\t\t\tlet added = false;\n\n\t\t\tif (gridInterval.timeUnit != \"year\" && gridInterval.timeUnit != \"week\") {\n\t\t\t\tif (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\n\n\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, this._root.utc)) {\n\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![gridInterval.timeUnit];\n\n\t\t\t\t\t\tif (index - frequency * 0.5 < previousIndex) {\n\t\t\t\t\t\t\tselectedItems.pop();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tselectedItems.push({ format: format, dataItem: dataItem });\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tadded = true;\n\t\t\t\t\t\tpreviousIndex = index;\n\t\t\t\t\t\tpreviousUnitValue = unitValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet shouldAdd = false;\n\t\t\tif (gridInterval.timeUnit === \"day\" || gridInterval.timeUnit === \"week\") {\n\t\t\t\tif (index - previousIndex >= frequency) {\n\t\t\t\t\tshouldAdd = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (unitValue % gridInterval.count === 0) {\n\t\t\t\t\tif (unitValue != previousUnitValue) {\n\t\t\t\t\t\tshouldAdd = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!added && shouldAdd) {\n\t\t\t\tif (index - frequency * 0.7 < previousIndex) {\n\t\t\t\t\tif (changed) {\n\t\t\t\t\t\tskip = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!skip) {\n\t\t\t\t\tselectedItems.push({ format: format, dataItem: dataItem });\n\t\t\t\t\tpreviousIndex = index;\n\t\t\t\t\tpreviousUnitValue = unitValue;\n\t\t\t\t}\n\t\t\t\tchanged = false;\n\n\t\t\t}\n\n\t\t\tpreviousValue = value;\n\n\t\t}\n\n\t\tif (selectedItems.length > 0) {\n\t\t\tlet f = selectedItems[0].dataItem.get(\"index\", 0);\n\n\t\t\t$array.each(selectedItems, (item) => {\n\t\t\t\tconst dataItem = item.dataItem;\n\t\t\t\tconst format = item.format;\n\t\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\t\tif (dataItem.isHidden()) {\n\t\t\t\t\tdataItem.show();\n\t\t\t\t}\n\n\t\t\t\tlet value = Number(dataItem.get(\"category\"));\n\t\t\t\tlet date = new Date(value);\n\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", this._root.dateFormatter.format(date, format!));\n\t\t\t\t}\n\t\t\t\tf++;\n\t\t\t\tthis._prepareDataItem(dataItem, f, frequency);\n\t\t\t})\n\n\t\t}\n\t}\n\n\t/**\n\t * Returns a duration of currently active `baseInterval` in milliseconds.\n\t *\n\t * @return Duration\n\t */\n\tpublic baseDuration(): number {\n\t\treturn $time.getIntervalDuration(this.getPrivate(\"baseInterval\"));\n\t}\n\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number): string | undefined {\n\t\t//@todo number formatter + tag\n\t\tlet dataItem = this.dataItems[this.axisPositionToIndex(position)];\n\n\t\tif (dataItem) {\n\t\t\tlet format = this.get(\"dateFormats\")![this.getPrivate(\"baseInterval\").timeUnit];\n\t\t\treturn this._root.dateFormatter.format(new Date(dataItem.get(\"category\", 0)), this.get(\"tooltipDateFormat\", format));\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip.label.set(\"text\", this.getTooltipText(position));\n\t}\n\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\nimport type { TimeUnit } from \"../../../core/util/Time\"\n\nimport { ValueAxis, IValueAxisSettings, IValueAxisPrivate, IValueAxisDataItem, IValueAxisEvents, IMinMaxStep } from \"./ValueAxis\";\n\nimport * as $utils from \"../../../core/util/Utils\";\nimport * as $math from \"../../../core/util/Math\";\n\nexport interface IDurationAxisSettings<R extends AxisRenderer> extends IValueAxisSettings<R> {\n\n\t/**\n\t * A base unit (granularity) of data.\n\t *\n\t * Used to indicate what are the base units of your data.\n\t *\n\t * Available options: `\"millisecond\"`, `\"second\"` (default), `\"minute\"`, `\"hour\"`, `\"day\"`, `\"week\"`, `\"month\"`, and `\"year\"`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-durations/#Base_unit} for more info\n\t * @default \"second\"\n\t */\n\tbaseUnit?: TimeUnit\n\n}\n\nexport interface IDurationAxisDataItem extends IValueAxisDataItem {\n}\n\nexport interface IDurationAxisPrivate extends IValueAxisPrivate {\n\n\t/**\n\t * A format to used by axis to format its labels.\n\t *\n\t * @readonly\n\t */\n\tdurationFormat: string;\n\n}\n\nexport interface IDurationAxisEvents extends IValueAxisEvents {\n}\n\n/**\n * Creates a duration axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/duration-axis/} for more info\n * @important\n */\nexport class DurationAxis<R extends AxisRenderer> extends ValueAxis<R> {\n\tpublic static className: string = \"DurationAxis\";\n\tpublic static classNames: Array<string> = ValueAxis.classNames.concat([DurationAxis.className]);\n\n\tdeclare public _settings: IDurationAxisSettings<R>;\n\tdeclare public _privateSettings: IDurationAxisPrivate;\n\tdeclare public _dataItemSettings: IDurationAxisDataItem;\n\tdeclare public _events: IDurationAxisEvents;\n\n\tprotected _dataGrouped: boolean = false;\n\tprotected _groupingCalculated: boolean = false;\n\tprotected _intervalDuration: number = 1;\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tsuper._afterNew();\n\t}\n\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, strictMode?: boolean): IMinMaxStep {\n\t\tlet minMaxStep: IMinMaxStep;\n\n\t\tconst durationFormatter = this.getDurationFormatter();\n\t\tconst baseUnit = this.get(\"baseUnit\");\n\t\t// we don't allow to go to smaller units, setting so to avoid invalidation\n\t\tthis.setRaw(\"maxPrecision\", 0);\n\n\t\tif (baseUnit == \"millisecond\" || baseUnit == \"second\" || baseUnit == \"minute\" || baseUnit == \"hour\") {\n\t\t\t// will fail if 0\n\t\t\tif (gridCount <= 1) {\n\t\t\t\tgridCount = 1;\n\t\t\t}\n\n\t\t\tgridCount = Math.round(gridCount);\n\n\t\t\t//let initialMin: number = min;\n\t\t\t//let initialMax: number = max;\n\n\t\t\tlet difference = max - min;\n\n\t\t\t// in case min and max is the same, use max\n\t\t\tif (difference === 0) {\n\t\t\t\tdifference = Math.abs(max);\n\t\t\t}\n\n\t\t\tlet step = difference / gridCount;\n\n\t\t\tlet divisors = [60, 30, 20, 15, 10, 2, 1];\n\t\t\tlet realDivisor = 1;\n\n\t\t\tif (baseUnit == \"hour\") {\n\t\t\t\tdivisors = [24, 12, 6, 4, 2, 1];\n\t\t\t}\n\n\t\t\tfor (let divisor of divisors) {\n\t\t\t\tif (difference / divisor > gridCount) {\n\t\t\t\t\trealDivisor = divisor;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet count = Math.ceil(((max - min) / realDivisor) / gridCount);\n\n\t\t\tlet exponent: number = Math.log(Math.abs(count)) * Math.LOG10E;\n\t\t\tlet power = Math.pow(10, Math.floor(exponent)) / 10;\n\t\t\tlet reducedCount = count / power;\n\n\t\t\t// find closest to divisor\n\t\t\tlet closest = $math.closest(divisors, reducedCount);\n\t\t\tcount = closest * power;\n\n\t\t\tstep = realDivisor * count;\n\n\t\t\tmin = Math.floor(min / step) * step;\n\t\t\tmax = Math.ceil(max / step) * step;\n\n\t\t\t/*\n\t\t\tcausese SO with seconds\n\t\t\tif (strictMode) {\n\t\t\t\tmin -= step;\n\t\t\t\tif (min < 0 && initialMin >= 0) {\n\t\t\t\t\tmin = 0;\n\t\t\t\t}\n\t\t\t\tmax += step;\n\n\t\t\t\tif (max > 0 && initialMax <= 0) {\n\t\t\t\t\tmax = 0;\n\t\t\t\t}\n\t\t\t}*/\n\t\t\tminMaxStep = { min: min, max: max, step: step };\n\t\t}\n\t\telse {\n\t\t\tminMaxStep = super._adjustMinMax(min, max, gridCount, strictMode);\n\t\t}\n\n\t\t// choose duration formatter based on step\n\t\tthis.setPrivate(\"durationFormat\", durationFormatter.getFormat(minMaxStep.step, minMaxStep.max, baseUnit));\n\n\t\treturn minMaxStep;\n\t}\n\n\tprotected _formatText(value: number) {\n\t\tconst formatter = this.getDurationFormatter();\n\t\treturn formatter.format(value, this.getPrivate(\"durationFormat\"), this.get(\"baseUnit\"));\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number): string | undefined {\n\t\tconst formatter = this.getDurationFormatter();\n\t\tconst extraDecimals = this.get(\"extraTooltipPrecision\", 0);\n\t\tconst decimals = this.getPrivate(\"stepDecimalPlaces\", 0) + extraDecimals;\n\t\tconst value = $math.round(this.positionToValue(position), decimals);\n\n\t\treturn formatter.format(value, this.getPrivate(\"durationFormat\"), this.get(\"baseUnit\"));\n\t}\n}\n","import { Entity, IEntitySettings, IEntityPrivate } from \"../../../core/util/Entity\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\nimport type { Axis } from \"./Axis\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\n\nexport interface IAxisBulletSettings extends IEntitySettings {\n\n\t/**\n\t * Relative location of the bullet within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t */\n\tlocation?: number;\n\n\t/**\n\t * A visual element of the bullet.\n\t */\n\tsprite: Sprite;\n}\n\nexport interface IAxisBulletPrivate extends IEntityPrivate {\n}\n\n/**\n * Draws a bullet on an axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_bullets} for more info\n */\nexport class AxisBullet extends Entity {\n\n\t/**\n\t * Target axis object.\n\t */\n\tpublic axis: Axis<AxisRenderer> | undefined;\n\n\tdeclare public _settings: IAxisBulletSettings;\n\tdeclare public _privateSettings: IAxisBulletPrivate;\n\n\tpublic static className: string = \"AxisBullet\";\n\tpublic static classNames: Array<string> = Entity.classNames.concat([AxisBullet.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tconst sprite = this.get(\"sprite\");\n\n\t\tif (this.isDirty(\"sprite\")) {\n\t\t\tif (sprite) {\n\t\t\t\tsprite.setAll({ position: \"absolute\", role: \"figure\" });\n\t\t\t\tthis._disposers.push(sprite);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"location\")) {\n\t\t\tconst dataItem = sprite.dataItem;\n\t\t\tif (this.axis && sprite && dataItem) {\n\t\t\t\tthis.axis._prepareDataItem(dataItem as any)\n\t\t\t}\n\t\t}\n\t}\n}\n","import { Candlestick, ICandlestickSettings, ICandlestickPrivate } from \"./Candlestick\";\n\n\nexport interface IOHLCSettings extends ICandlestickSettings {\n}\n\nexport interface IOHLCPrivate extends ICandlestickPrivate {\n}\n\nexport class OHLC extends Candlestick {\n\n\tdeclare public _settings: IOHLCSettings;\n\tdeclare public _privateSettings: IOHLCPrivate;\n\n\tpublic static className: string = \"OHLC\";\n\tpublic static classNames: Array<string> = Candlestick.classNames.concat([OHLC.className]);\n\n\tpublic _draw() {\n\n\t\tconst display = this._display;\n\n\t\tdisplay.moveTo(this.get(\"lowX1\", 0), this.get(\"lowY1\", 0));\n\t\tdisplay.lineTo(this.get(\"highX1\", 0), this.get(\"highY1\", 0));\n\n\t\tlet w = this.width();\n\t\tlet h = this.height();\n\n\t\tif (this.get(\"orientation\") == \"vertical\") {\n\n\t\t\tlet lY = h;\n\t\t\tlet hY = 0;\n\t\t\tdisplay.moveTo(0, lY);\n\t\t\tdisplay.lineTo(w / 2, lY);\n\n\t\t\tdisplay.moveTo(w / 2, hY);\n\t\t\tdisplay.lineTo(w, hY);\n\t\t}\n\t\telse {\n\t\t\tlet lX = 0;\n\t\t\tlet hX = w;\n\n\t\t\tdisplay.moveTo(lX, 0);\n\t\t\tdisplay.lineTo(lX, h / 2);\n\n\t\t\tdisplay.moveTo(hX, h / 2);\n\t\t\tdisplay.lineTo(hX, h);\n\t\t}\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\n\nimport { CandlestickSeries, ICandlestickSeriesPrivate, ICandlestickSeriesSettings, ICandlestickSeriesDataItem, ICandlestickSeriesAxisRange } from \"./CandlestickSeries\";\nimport { OHLC } from \"./OHLC\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\n\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IOHLCSeriesDataItem extends ICandlestickSeriesDataItem {\n}\n\nexport interface IOHLCSeriesSettings extends ICandlestickSeriesSettings {\n}\n\nexport interface IOHLCSeriesPrivate extends ICandlestickSeriesPrivate {\n}\n\nexport interface IOHLCSeriesAxisRange extends ICandlestickSeriesAxisRange {\n\n\t/**\n\t * List of [[OHLC]] columns in a range.\n\t */\n\tcolumns: ListTemplate<OHLC>\n\n}\n\n/**\n * OHLC series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n * @important\n */\nexport class OHLCSeries extends CandlestickSeries {\n\n\tdeclare public _settings: IOHLCSeriesSettings;\n\tdeclare public _privateSettings: IOHLCSeriesPrivate;\n\tdeclare public _dataItemSettings: IOHLCSeriesDataItem;\n\tdeclare public _axisRangeType: IOHLCSeriesAxisRange;\n\n\tpublic static className: string = \"OHLCSeries\";\n\tpublic static classNames: Array<string> = CandlestickSeries.classNames.concat([OHLCSeries.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<OHLC>): OHLC {\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\n\t\tcolumn._setDataItem(dataItem);\n\t\tlistTemplate.push(column);\n\t\treturn column;\n\t}\n\n\t/**\n\t * A list of OHLC bars in the series.\n\t *\n\t * `columns.template` can be used to configure OHLC bars.\n\t *\n\t * @default new ListTemplate<OHLC>\n\t */\n\tpublic readonly columns: ListTemplate<OHLC> = new ListTemplate(\n\t\tTemplate.new({\n\t\t\tthemeTags: [\"autocolor\"]\n\t\t}),\n\t\t() => OHLC._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"ohlc\", \"series\", \"column\"])\n\t\t}, [this.columns.template])\n\t);\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tsuper._processAxisRange(axisRange);\n\t\taxisRange.columns = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => OHLC._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"ohlc\", \"series\", \"column\"]),\n\t\t\t}, [this.columns.template, axisRange.columns.template])\n\t\t);\n\t}\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveMonotoneYTension } from \"../../../core/render/MonotoneYTension\";\n\nexport interface ISmoothedYLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface ISmoothedYLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n}\n\nexport interface ISmoothedYLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for vertical plots.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedYLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedYLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedYLineSeries.className]);\n\n\tdeclare public _settings: ISmoothedYLineSeriesSettings;\n\tdeclare public _privateSettings: ISmoothedYLineSeriesPrivate;\n\tdeclare public _dataItemSettings: ISmoothedYLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveMonotoneYTension(this.get(\"tension\", 0.5)) as any);\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveMonotoneYTension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveMonotoneXTension } from \"../../../core/render/MonotoneXTension\";\n\n\nexport interface ISmoothedXLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface ISmoothedXLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n}\n\nexport interface ISmoothedXLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for horizontal plots.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedXLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedXLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedXLineSeries.className]);\n\n\tdeclare public _settings: ISmoothedXLineSeriesSettings;\n\tdeclare public _privateSettings: ISmoothedXLineSeriesPrivate;\n\tdeclare public _dataItemSettings: ISmoothedXLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveMonotoneXTension(this.get(\"tension\", 0.5)) as any);\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveMonotoneXTension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveCardinal, CurveCardinalFactory } from \"d3-shape\";\n\nexport interface SmoothedXYLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface ISmoothedXYLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface SmoothedXYLineSeriesProperties extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n\t/**\n\t * @ignore\n\t*/\n\tcurveFactory?: CurveCardinalFactory\n\n}\n\nexport interface SmoothedXYLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for XY (scatter) charts\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedXYLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedXYLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedXYLineSeries.className]);\n\n\tdeclare public _settings: SmoothedXYLineSeriesProperties;\n\tdeclare public _privateSettings: SmoothedXYLineSeriesPrivate;\n\tdeclare public _dataItemSettings: SmoothedXYLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveCardinal.tension(this.get(\"tension\", 0.5)));\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveCardinal.tension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // falls through\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\nimport type { Axis } from \"../axes/Axis\";\nimport { Percent, p100 } from \"../../../core/util/Percent\";\nimport type { DataItem } from \"../../../core/render/Component\";\nimport { curveStepAfter } from \"d3-shape\";\n\nexport interface IStepLineSeriesDataItem extends ILineSeriesDataItem {\n}\n\nexport interface IStepLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * Width of the step in percent relative to the cell width.\n\t *\n\t * NOTE: setting this to less than 100% makes sense only when risers are\n\t * disabled: `noRisers: true`\n\t *\n\t * @default 100%\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/step-line-series/#Step_width} for more info\n\t */\n\tstepWidth?: Percent;\n\n\t/**\n\t * Disables vertical connecting lines for the steps.\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/step-line-series/#Disabling_risers} for more info\n\t */\n\tnoRisers?: boolean;\n\n}\n\nexport interface IStepLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\nexport class StepLineSeries extends LineSeries {\n\tpublic static className: string = \"StepLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([StepLineSeries.className]);\n\n\tdeclare public _settings: IStepLineSeriesSettings;\n\tdeclare public _privateSettings: IStepLineSeriesPrivate;\n\tdeclare public _dataItemSettings: IStepLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveStepAfter);\n\t\tsuper._afterNew();\n\t}\n\n\n\tprotected _getPoints(dataItem: DataItem<this[\"_dataItemSettings\"]>, o: { points: Array<Array<number>>, segments: number[][][], stacked: boolean | undefined, getOpen: boolean, basePosX: number, basePosY: number, fillVisible: boolean | undefined, xField: string, yField: string, xOpenField: string, yOpenField: string, vcx: number, vcy: number, baseAxis: Axis<AxisRenderer>, xAxis: Axis<AxisRenderer>, yAxis: Axis<AxisRenderer>, locationX: number, locationY: number, openLocationX: number, openLocationY: number }) {\n\t\tlet points = o.points;\n\n\t\tlet width = this.get(\"stepWidth\", p100).value / 2;\n\n\t\tlet itemLocationX0 = dataItem.get(\"locationX\", o.locationX);\n\t\tlet itemLocationY0 = dataItem.get(\"locationY\", o.locationY);\n\t\tlet itemLocationX1 = itemLocationX0;\n\t\tlet itemLocationY1 = itemLocationY0;\n\n\t\tif (o.baseAxis === o.xAxis) {\n\t\t\titemLocationX0 -= width;\n\t\t\titemLocationX1 += width;\n\t\t}\n\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\titemLocationY0 -= width;\n\t\t\titemLocationY1 += width;\n\t\t}\n\n\t\tlet xPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX0, o.vcx);\n\t\tlet yPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY0, o.vcy);\n\n\t\tlet xPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX1, o.vcx);\n\t\tlet yPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY1, o.vcy);\n\n\t\tif (this._shouldInclude(xPos0)) {\n\n\t\t\tconst iPoint0 = this.getPoint(xPos0, yPos0);\n\t\t\tconst point0 = [iPoint0.x, iPoint0.y];\n\n\t\t\tconst iPoint1 = this.getPoint(xPos1, yPos1);\n\t\t\tconst point1 = [iPoint1.x, iPoint1.y];\n\n\t\t\tif (o.fillVisible) {\n\t\t\t\tlet xOpenPos0: number = xPos0;\n\t\t\t\tlet yOpenPos0: number = yPos0;\n\t\t\t\tlet xOpenPos1: number = xPos1;\n\t\t\t\tlet yOpenPos1: number = yPos1;\n\n\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\tyOpenPos0 = o.basePosY;\n\t\t\t\t\tyOpenPos1 = o.basePosY;\n\t\t\t\t}\n\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\txOpenPos0 = o.basePosX;\n\t\t\t\t\txOpenPos1 = o.basePosX;\n\t\t\t\t}\n\n\t\t\t\tif (o.getOpen) {\n\t\t\t\t\tlet valueX = dataItem.get(o.xOpenField as any);\n\t\t\t\t\tlet valueY = dataItem.get(o.yOpenField as any);\n\n\t\t\t\t\tif (valueX != null && valueY != null) {\n\t\t\t\t\t\titemLocationX0 = dataItem.get(\"openLocationX\", o.openLocationX);\n\t\t\t\t\t\titemLocationY0 = dataItem.get(\"openLocationY\", o.openLocationY);\n\n\t\t\t\t\t\titemLocationX1 = itemLocationX0;\n\t\t\t\t\t\titemLocationY1 = itemLocationY0;\n\n\t\t\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\t\t\titemLocationX0 -= width;\n\t\t\t\t\t\t\titemLocationX1 += width;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\t\t\titemLocationY0 -= width;\n\t\t\t\t\t\t\titemLocationY1 += width;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (o.stacked) {\n\t\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\n\t\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\t\txOpenPos0 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX0, (stackToItemX.component as StepLineSeries).get(\"vcx\"));\n\t\t\t\t\t\t\t\txOpenPos1 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX1, (stackToItemX.component as StepLineSeries).get(\"vcx\"));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.yAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\txOpenPos0 = o.basePosX;\n\t\t\t\t\t\t\t\t\txOpenPos1 = o.basePosX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\t\t\t\t\txOpenPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX0, o.vcx);\n\t\t\t\t\t\t\t\t\txOpenPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX1, o.vcx);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\t\tyOpenPos0 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY0, (stackToItemY.component as StepLineSeries).get(\"vcy\"));\n\t\t\t\t\t\t\t\tyOpenPos1 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY1, (stackToItemY.component as StepLineSeries).get(\"vcy\"));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.xAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\tyOpenPos0 = o.basePosY;\n\t\t\t\t\t\t\t\t\tyOpenPos1 = o.basePosY;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\t\t\t\t\tyOpenPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY0, o.vcy);\n\t\t\t\t\t\t\t\t\tyOpenPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY1, o.vcy);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\txOpenPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX0, o.vcx);\n\t\t\t\t\t\t\tyOpenPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY0, o.vcy);\n\t\t\t\t\t\t\txOpenPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX1, o.vcx);\n\t\t\t\t\t\t\tyOpenPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY1, o.vcy);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet closeIPoint0 = this.getPoint(xOpenPos0, yOpenPos0);\n\t\t\t\tlet closeIPoint1 = this.getPoint(xOpenPos1, yOpenPos1);\n\n\t\t\t\tpoint0[2] = closeIPoint0.x;\n\t\t\t\tpoint0[3] = closeIPoint0.y;\n\n\t\t\t\tpoint1[2] = closeIPoint1.x;\n\t\t\t\tpoint1[3] = closeIPoint1.y;\n\t\t\t}\n\n\t\t\tpoints.push(point0);\n\t\t\tpoints.push(point1);\n\n\t\t\tdataItem.set(\"point\", {x:point0[0] + (point1[0] - point0[0]) / 2, y:point0[1] + (point1[1] - point0[1]) / 2 });\n\t\t}\n\n\t\tif (this.get(\"noRisers\")) {\n\t\t\to.points = [];\n\t\t\to.segments.push(points);\n\t\t}\n\t}\n}\n","import * as m from \"./../../dist/es2015/xy.js\";\nexport const am5xy = m;","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // falls through\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n"],"names":["chartContainer","children","push","_root","width","layout","verticalLayout","height","horizontalLayout","yAxesAndPlotContainer","maskContent","plotsContainer","plotContainer","isMeasured","topPlotContainer","themeTags","icon","x","y","this","_defaultThemes","_afterNew","_disposers","xAxes","yAxes","root","zoomOutButton","events","on","zoomOut","set","states","lookup","seriesContainer","_processAxis","bottomAxesContainer","leftAxesContainer","topGridContainer","bulletsContainer","fill","fillOpacity","event","_handlePlotDown","originalEvent","_handlePlotUp","_handlePlotMove","_maskGrid","gridContainer","series","xAxis","get","yAxis","cursor","snapToSeries","_removeSeries","wheelX","wheelY","_wheelDp","wheelEvent","preventDefault","plotPoint","toLocal","documentPointToRoot","clientX","clientY","wheelStep","shiftY","deltaY","shiftX","deltaX","each","axis","start","end","position","fixPosition","newStart","newEnd","Infinity","_handleWheelAnimation","zoom","getPrivate","delta","_getWheelSign","se","_fixWheel","dispose","sign","diff","local","pointerId","_downPoints","length","getIndex","_downStartX","_downEndX","_downStartY","_downEndY","_downPoint","panX","panY","_panStart","_panEnd","eventType","isEnabled","dispatch","type","target","animation","_dispatchWheelAnimation","_event","undefined","_isPanning","_movePoints","_handlePinch","downPoint","scrollbarX","disableType","panStart","panEnd","enableType","scrollbarY","i","downPoints","movePoints","k","point","movePoint","w","h","downPoint0","downPoint1","movePoint0","movePoint1","downStartX","downEndX","downPos0","downPos1","movePos0","movePos1","d","Math","max","sa","ea","downStartY","downEndY","isHidden","isHiding","startIndex","endIndex","dataItem","dataItems","tooltipDataItem","distance","abs","hypot","tooltip","_setDataItem","component","showDataItemTooltip","handleMove","toGlobal","_prepareChildren","_colorize","isDirty","_handleSetWheel","previous","_prevSettings","_disposeProperty","_setChart","_addCursor","_pushPropertyDisposer","_handleCursorSelectEnd","parent","topAxesContainer","e","_handleScrollbar","grip","setPrivate","getTooltipText","rightAxesContainer","_handleZoomOut","_processSeries","colorSet","color","next","_setSoft","behavior","downPositionX","downPositionY","positionX","positionY","position0","toAxisPosition","position1","axes","priority","axisStart","axisEnd","zoomAnimation","updateScrollbar","setPrivateRaw","container","onAll","change","oldValues","_removeAxis","newValue","processChart","setIndex","index","insertIndex","oldValue","Error","moveValue","value","newIndex","isDisposed","axisParent","removeValue","gridParent","topGridParent","left","right","_axis","force","indexOf","setRaw","updateGrips","show","hide","otherCharts","_otherCharts","global","chart","chartPlotContainer","documentPoint","rootPointToDocument","chartRoot","closest","closestPoint","plotT","_display","plotB","tooltips","sum","minDistance","_movePoint","maxTooltipDistance","tooltipSeries","hidden","inPlot","_tooltipToLocal","tooltipContainer","count","sort","a","b","centerY","top","bottom","min","_fy","reverse","XYChart","className","setupDefaultRules","ic","interfaceColors","language","r","rule","bind","setAll","colors","paddingLeft","paddingRight","paddingTop","paddingBottom","arrangeTooltips","pinchZoomX","pinchZoomY","saturation","cornerRadiusTR","cornerRadiusTL","cornerRadiusBR","cornerRadiusBL","focusable","create","strokeOpacity","inside","minGridDistance","opacity","minPosition","maxPosition","fontSize","text","populateText","centerX","visible","layer","exportable","snapToSeriesBy","strokeDasharray","minZoomCount","maxZoomCount","maxZoomFactor","maxDeviation","snapTooltip","tooltipLocation","zoomX","zoomY","fixAxisSize","location","multiLocation","opposite","inversed","cellStartLocation","cellEndLocation","cursorOverStyle","startLocation","endLocation","fillRule","axisFill","gridIntervals","timeUnit","dateFormats","translate","periodChangeDateFormats","tooltipDateFormats","markUnitChange","strictMinMax","groupData","groupCount","groupIntervals","endValue","intervalDuration","baseInterval","Date","locale","firstDayOfWeek","utc","timezone","getTime","val","round","baseValue","logarithmic","step","baseUnit","maskBullets","stackToNegative","locationX","locationY","openValueXGrouped","openValueYGrouped","valueXGrouped","valueYGrouped","seriesTooltipTarget","adjustBulletPosition","clustered","strokeWidth","role","connect","autoGapCount","draw","display","sprite","moveTo","lineTo","tension","lowValueXGrouped","lowValueYGrouped","highValueXGrouped","highValueYGrouped","_settings","_drawLines","setTimeout","lineX","_handleXLine","lineY","_handleYLine","_tooltipX","_updateXLine","_tooltipY","_updateYLine","syncWith","_updateChildren","_handleSyncWith","_getPoint","_toX","animate","key","to","duration","easing","_toY","_handleMove","_handleCursorDown","_handleCursorUp","native","selection","rootPoint","_inPlot","_getPosition","charAt","userPositionX","userPositionY","lastPoint","_lastPoint","skipEvent","alwaysShow","xyPos","xy","_handleCursorPosition","handleCursorShow","_updateLines","_updateSelection","handleCursorHide","_onHide","_onShow","_dispose","XYCursor","background","labelsContainer","axisHeader","axisRanges","disposeDataItem","_processAxisRange","renderer","processAxis","ghostLabel","makeLabel","sAnimation","_sAnimation","eAnimation","_eAnimation","maxZoomFactorReal","minZoomFactor","_handleAxisSelection","playing","once","_markDirtyKey","_markDirty","stop","_series","_createAssets","_rangesDirty","_prepareDataItem","above","grid","_dataItem","_index","axisRange","_seriesAxisRanges","_updateCursor","_start","_end","_inversed","_axisLength","axisLength","_updateLC","rendererTags","addTag","toLowerCase","_applyThemes","label","updateTooltipBounds","_updateBounds","_updateTooltipBounds","axisHeadersContainer","onPrivate","markDirtySize","_toggleDataItem","hideDataItem","showDataItem","tick","bullet","tags","makeGrid","makeTick","makeAxisFill","_processBullet","axisBullet","_afterChanged","_updateChartLayout","_updatePositions","labels","ticks","axisFills","bounds","localBounds","_getText","updateLabel","_cursorPosition","_snapToSeries","updateTooltip","getSeriesItem","updateLegendMarker","updateLegendValue","roundAxisPosition","_updateTooltipText","positionTooltip","_location","_fields","_clearDirty","_sizeDirty","coordinate","_nextItem","_autoGapCount","_fieldName","axisDataItem","Axis","AxisLabel","AxisLabelRadial","template","make","thumb","_handleThumbDown","_handleThumbUp","_handleThumbMove","_changed","pan","_thumbDownPoint","_downStart","_downEnd","downStart","downEnd","extra","_getPan","_point1","_point2","_tooltip","markDirty","_clear","AxisRenderer","gridTemplate","graphics","axisChildren","removeTag","_markDirtyRedraw","point1","point2","_ls","_lc","innerWidth","positionToCoordinate","endPosition","toggleVisibility","x0","x1","fillDrawMethod","_positionTooltip","num","pointerOrientation","oldBounds","AxisRendererX","innerHeight","y0","y1","AxisRendererY","AxisTick","_setBaseInterval","interval","_baseDuration","baseMainDuration","_fixZoomFactor","groupInterval","_dataGrouped","_groupSeriesData","_handleRangeChange","setDataSet","markDirtyExtremes","_seriesDataGrouped","_dataSets","baseAxis","_valueYFields","_valueXFields","_mainDataItems","mainDataSetId","newDataItem","previousTime","dataSetId","groupFieldValues","workingFields","field","firstDate","prevNewDataItem","dataContext","time","roundedTime","_makeDataItem","groupKey","currentValue","average","_dataSetId","_groupingCalculated","_intervalMax","_intervalMin","selectionMin","selectionMax","modifiedDifference","baseDuration","getGroupInterval","current","endIndex2","firstDataItem","lastDataItem","lastDate","outOfSelection","gridCount","_strictMode","_intervalDuration","id","intervals","gridInterval","nextGridUnit","previousValue","format","formats","_dataItems","processDataItem","date","dateFormatter","j","inited","_markDirtyAxes","_updateGhost","startTime","_date","fields","open","close","endTime","_updateDates","cellLocation","axisLocation","openValue","closeValue","_baseValue","valueToPosition","getDataItemPositionX","getDataItemPositionY","positionToValue","fieldName","result","diValue","first","second","nextItem","value1","zoomToValues","DateAxis","valueFields","dates","_dates","found","len","itemValue","findex","floor","_seriesValuesDirty","_updateAllDates","valueToIndex","maxCount","Number","MAX_SAFE_INTEGER","frequency","ceil","_frequency","realDuration","previousPosition","minDifference","realValue","GaplessDateAxis","_beforeChanged","isPrivateDirty","Grid","_dirtyExtremes","_dirtySelectionExtremes","syncWithAxis","_syncDp","_valuesDirty","_getMinMax","_getSelectionMinMax","_groupData","_prepareAxisItems","_updateAxisRanges","numberFormat","formatter","getNumberFormatter","differencePower","minLog","_minLogAdjusted","log","LOG10E","pow","_formatText","stepPower","decCount","fillEndPosition","updateGrid","hasTag","updateTick","updateFill","updateBullet","minMaxStep","_adjustMinMax","stepDecimalPlaces","E","treatZeroAs","_cellLocation","getStackedXValueWorking","getStackedYValueWorking","fixSmallStep","total","minDefined","maxDefined","extraMin","extraMax","selectionStrictMinMax","seriesMin","seriesMax","isShowing","range","_minReal","_maxReal","_deltaMinMax","minMaxStep2","selectionMinReal","selectionMaxReal","_syncAxes","valueToFinalPosition","minDiff","initialMin","initialMax","minAdapted","adapters","fold","maxAdapted","_fixMin","_fixMax","exponent","power","strictMinMaxSelection","strict","_saveMinMax","animatePrivate","_min","_max","strictMode","difference","stepDivisor","maxPrecision","ceiledStep","MAX_VALUE","minCount","extraDecimals","decimals","oldDiff","syncMin","syncMax","syncStep","currentCount","synced","c","omin","omax","ostep","_checkSync","ValueAxis","listTemplate","makeColumn","_makeFieldNames","categoryAxis","valueAxis","isType","_xOpenField","_xField","_yOpenField","_yField","_createGraphics","_ph","_pw","columnsTemplate","columns","clusterCount","BaseColumnSeries","stacked","xRenderer","yRenderer","cellLocationX0","cellLocationX1","cellLocationY0","cellLocationY1","_aLocationX0","_aLocationX1","_aLocationY0","_aLocationY1","_axesDirty","_stackDirty","_toggleColumn","_updateGraphics","_skipped","_makeGraphics","legendDataItem","markerRectangle","stroke","graphicsArray","rangeGraphics","previousDataItem","xField","yField","valueX","valueY","xOpenField","yOpenField","openLocationX","openLocationY","xStart","xEnd","yStart","yEnd","vcy","vcx","offset","stackToItemY","basePosition","stackToItemX","_updateSeriesGraphics","_applyGraphicsStates","l","t","fitW","fitH","maxWidth","maxHeight","ptl","getPoint","pbr","tooltipPoint","_x","_y","_handleDataSetChange","dropFromOpen","riseFromOpen","dropFromPrevious","riseFromPrevious","previousClose","apply","list","promises","Promise","all","bullets","column","setting","_getTooltipTarget","_draw","Candlestick","mainContainer","lx0","lx1","ly0","ly1","hx0","hx1","hy0","hy1","orientation","getRaw","_xLowField","_xHighField","_yLowField","_yHighField","_updateCandleGraphics","CandlestickSeries","ColumnSeries","strokes","fills","_fillGenerator","p","_strokeTemplate","_fillTemplate","legendStroke","_legendStroke","legendFill","_legendFill","curveFactory","_strokeGenerator","curve","strokeTemplateField","fillTemplateField","strokeTemplateFound","fillTemplateFound","hasValues","_valueFields","_endIndex","_clearGraphics","_startSegment","clear","segmentIndex","dataItemIndex","currentEndIndex","makeFill","fillTemplate","originalTemplate","makeStroke","strokeTemplate","xOpenFieldValue","yOpenFieldValue","baseField","basePosX","basePosY","segments","points","fillVisible","getOpen","o","_getPoints","shouldGap","_endLine","_drawStroke","_drawFill","itemLocationX","itemLocationY","xPos","yPos","_shouldInclude","iPoint","xPos0","yPos0","closeIPoint","_points","_firstPoint","segment","context","marker","interactive","disabledColor","bulletFunction","LineSeries","_setRawDefault","_removeAxisRange","_updateFields","_valueXShowFields","_valueYShowFields","__valueXShowFields","__valueYShowFields","valueXFields","split","valueYFields","xName","xCapName","yName","yCapName","xLetter","yLetter","low","high","hiddenState","sequencedInterpolation","_handleMaskBullets","tooltipFieldX","tooltipFieldY","_tooltipFieldX","_tooltipFieldY","_fixVC","_dataProcessed","_stack","_unstack","getStackedXValue","getStackedYValue","processSeriesDataItem","_markStakedDirtyStack","minBulletDistance","_showBullets","_psi","_pei","_selectionProcessed","_calculateTotals","markDirtySelectionExtremes","processYSelectionDataItem","processXSelectionDataItem","selectionMinY","selectionMaxY","selectionMinX","selectionMaxX","_mainContainerMask","mask","_makeRangeMask","seriesIndex","_couldStackTo","_stackDataItems","_reallyStackedTo","_key","_stackedSeries","uid","stackToItemKey","s","stackToSeries","stackToItem","stackValue","stackedToSeries","_afterDataChange","_aggregatesCalculated","_shouldShowBullet","_positionX","_positionY","_markDataSetDirty","then","_isShowing","_sequencedShowHide","_isHiding","waitForStop","stackedSeries","_markDirtyStack","hideTooltip","markDirtyText","txt","_emptyDataItem","valueLabel","_position","resetExtremes","XYSeries","interactiveChildren","Graphics","_addOrientationClass","startGrip","endGrip","remove","_updateThumb","overlay","Scrollbar","XYChartScrollbar","_itemMap","startCategory","endCategory","CategoryAxis","openKey","otherAxis","startDataItem","endDataItem","f","fillIndex","categoryLocation","endCategoryLocation","categoryToIndex","indexToPosition","fillEndIndex","NaN","_axisLocation","category","axisPositionToIndex","seriesDataItem","zoomToIndexes","previousIndex","previousUnitValue","selectedItems","changed","skip","unitValue","added","pop","shouldAdd","item","classNames","concat","CategoryDateAxis","durationFormatter","getDurationFormatter","divisors","realDivisor","divisor","reducedCount","getFormat","DurationAxis","Entity","AxisBullet","lY","hX","OHLC","List","Template","OHLCSeries","_setDefault","SmoothedYLineSeries","SmoothedXLineSeries","SmoothedXYLineSeries","Step","_context","_t","stepAfter","prototype","areaStart","_line","areaEnd","lineStart","_point","lineEnd","closePath","itemLocationX0","itemLocationY0","itemLocationX1","itemLocationY1","xPos1","yPos1","iPoint0","point0","iPoint1","xOpenPos0","yOpenPos0","xOpenPos1","yOpenPos1","closeIPoint0","closeIPoint1","StepLineSeries","am5xy","that","bezierCurveTo","_x1","_k","_x2","_x0","_y1","_y2","_y0","Cardinal","custom","cardinal"],"sourceRoot":""}